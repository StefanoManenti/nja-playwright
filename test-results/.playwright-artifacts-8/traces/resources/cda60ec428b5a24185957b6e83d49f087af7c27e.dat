import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/BaseButton.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/BaseButton.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import clsx from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/clsx.js?v=0189a8d1";
import classes from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/resets.module.less";
export function BaseButton({ className, ...otherProps }) {
  return /* @__PURE__ */ jsxDEV("button", { className: clsx(classes.resetButton, className), ...otherProps }, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/BaseButton.tsx",
    lineNumber: 9,
    columnNumber: 5
  }, this);
}
_c = BaseButton;
var _c;
$RefreshReg$(_c, "BaseButton");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/BaseButton.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBUUk7Ozs7O2dCQVJKLE9BQVcsY0FBWTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUV2QixPQUFPQSxhQUFhO0FBSWIsZ0JBQVNDLFdBQVcsRUFBRUMsV0FBVyxHQUFHQyxXQUE0QixHQUFHO0FBQ3hFLFNBQ0UsdUJBQUMsWUFBTyxXQUFXQyxLQUFLSixRQUFRSyxhQUFhSCxTQUFTLEdBQUcsR0FBSUMsY0FBN0Q7QUFBQTtBQUFBO0FBQUE7QUFBQSxTQUF3RTtBQUU1RTtBQUFDRyxLQUplTDtBQUFVLElBQUFLO0FBQUFDLGFBQUFELElBQUEiLCJuYW1lcyI6WyJjbGFzc2VzIiwiQmFzZUJ1dHRvbiIsImNsYXNzTmFtZSIsIm90aGVyUHJvcHMiLCJjbHN4IiwicmVzZXRCdXR0b24iLCJfYyIsIiRSZWZyZXNoUmVnJCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJCYXNlQnV0dG9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IGNsYXNzZXMgZnJvbSAnLi9yZXNldHMubW9kdWxlLmxlc3MnO1xyXG5cclxudHlwZSBCYXNlQnV0dG9uUHJvcHMgPSBSZWFjdC5Db21wb25lbnRQcm9wczwnYnV0dG9uJz47XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gQmFzZUJ1dHRvbih7IGNsYXNzTmFtZSwgLi4ub3RoZXJQcm9wcyB9OiBCYXNlQnV0dG9uUHJvcHMpIHtcclxuICByZXR1cm4gKFxyXG4gICAgPGJ1dHRvbiBjbGFzc05hbWU9e2Nsc3goY2xhc3Nlcy5yZXNldEJ1dHRvbiwgY2xhc3NOYW1lKX0gey4uLm90aGVyUHJvcHN9IC8+XHJcbiAgKTtcclxufVxyXG4iXSwiZmlsZSI6IkM6L1VzZXJzL2FpbnRyb25hL0Rlc2t0b3AvQXBwL3JlYWN0L25hai9saWJzL3VpLWF0b21zL3NyYy9saWIvQmFzZUJ1dHRvbi50c3gifQ==