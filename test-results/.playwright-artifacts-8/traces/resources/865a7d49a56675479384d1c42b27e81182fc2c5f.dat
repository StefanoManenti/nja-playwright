globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || {
  cache: /* @__PURE__ */ new Map(),
  get(name, inst) {
    if (this.cache.has(name)) {
      return this.cache.get(name);
    }
    this.cache.set(name, inst);
    return inst;
  }
};
import { ServiceUnhandledResponseError } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/index.ts";
import { API } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/utils/index.ts";
import { getPrivateAreaCommonQuerystring, readPrivateAreaServiceResponse } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/api/private-area/utils.ts";
export async function fetchPaymentTools(codiceConto) {
  const response = await fetch(`${API}/domiciliazioniServices/${codiceConto}/paymentTools?${getPrivateAreaCommonQuerystring()}`, {
    method: "GET",
    headers: {
      Accept: "application/json"
    }
  });
  const json = await readPrivateAreaServiceResponse(response);
  if (response.status === 200) {
    return json.paymentTools;
  }
  throw new ServiceUnhandledResponseError(response.statusText, "", response);
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLFNBQVNBLHFDQUFxQztBQUM5QyxTQUFTQyxXQUFXO0FBQ3BCLFNBQ0VDLGlDQUNBQyxzQ0FDSztBQWdDUCxzQkFBc0JDLGtCQUFrQkMsYUFBaUM7QUFDdkUsUUFBTUMsV0FBVyxNQUFNQyxNQUNyQixHQUFHTixHQUFHLDJCQUEyQkksV0FBVyxpQkFBaUJILGdDQUFnQyxDQUFDLElBQzlGO0FBQUEsSUFDRU0sUUFBUTtBQUFBLElBQ1JDLFNBQVM7QUFBQSxNQUNQQyxRQUFRO0FBQUEsSUFDVjtBQUFBLEVBQ0YsQ0FDRjtBQUVBLFFBQU1DLE9BQU8sTUFBTVIsK0JBQStCRyxRQUFRO0FBQzFELE1BQUlBLFNBQVNNLFdBQVcsS0FBSztBQUMzQixXQUFRRCxLQUFtQkU7QUFBQUEsRUFDN0I7QUFFQSxRQUFNLElBQUliLDhCQUE4Qk0sU0FBU1EsWUFBWSxJQUFJUixRQUFRO0FBQzNFIiwibmFtZXMiOlsiU2VydmljZVVuaGFuZGxlZFJlc3BvbnNlRXJyb3IiLCJBUEkiLCJnZXRQcml2YXRlQXJlYUNvbW1vblF1ZXJ5c3RyaW5nIiwicmVhZFByaXZhdGVBcmVhU2VydmljZVJlc3BvbnNlIiwiZmV0Y2hQYXltZW50VG9vbHMiLCJjb2RpY2VDb250byIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiQWNjZXB0IiwianNvbiIsInN0YXR1cyIsInBheW1lbnRUb29scyIsInN0YXR1c1RleHQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsicGF5bWVudC10b29scy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZXJ2aWNlVW5oYW5kbGVkUmVzcG9uc2VFcnJvciB9IGZyb20gJ0BuYWotd28vdXRpbCc7XHJcbmltcG9ydCB7IEFQSSB9IGZyb20gJy4uLy4uL3V0aWxzJztcclxuaW1wb3J0IHtcclxuICBnZXRQcml2YXRlQXJlYUNvbW1vblF1ZXJ5c3RyaW5nLFxyXG4gIHJlYWRQcml2YXRlQXJlYVNlcnZpY2VSZXNwb25zZSxcclxufSBmcm9tICcuL3V0aWxzJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTGlzdGFJYmFuIHtcclxuICBwYXltZW50VG9vbHM6IFBheW1lbnRUb29sW107XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUGF5bWVudFRvb2wge1xyXG4gIHJlcXVlc3REYXRlOiBzdHJpbmc7XHJcbiAgY29kaWNlRmlzY2FsZUludGVzdGF0YXJpb0NvbnRvOiBzdHJpbmc7XHJcbiAgY29kaWNlRmlzY2FsZVNvdHRvc2NyaXR0b3JlQ29udG86IHN0cmluZztcclxuICBpbnRlc3RhdGFyaW9Db250bzogc3RyaW5nO1xyXG4gIHNvdHRvc2NyaXR0b3JlQ29udG86IHN0cmluZztcclxuICBpYmFuSW50ZXN0YXRhcmlvQ29udG86IHN0cmluZztcclxuICBwcm9maWxvU2VsZXppb25hdG86IHN0cmluZztcclxuICBzdGF0dXM6IFN0YXRvRG9taWNpbGlhemlvbmU7XHJcbiAgcGF5bWVudFRvb2xJZDogc3RyaW5nO1xyXG4gIGNvZGljZUNvbnRvQ2xpZW50ZTogc3RyaW5nO1xyXG4gIGNvbnRvU2VsZXppb25hdG86IGJvb2xlYW47XHJcbiAgc2VsZWN0ZWQ/OiBib29sZWFuO1xyXG5cclxuICAvKiogTkRTIGNhcnRlIGRpIGNyZWRpdG8gKi9cclxuICBwYW50YWlsPzogc3RyaW5nO1xyXG4gIC8qKiBORFMgY2FydGUgZGkgY3JlZGl0byAqL1xyXG4gIGNyZWRpdENhcmRFeHBEYXRlPzogc3RyaW5nO1xyXG59XHJcblxyXG50eXBlIFN0YXRvRG9taWNpbGlhemlvbmUgPVxyXG4gIHwgJ0FUVElWQSdcclxuICB8ICdJTiBBVFRJVkFaSU9ORSdcclxuICB8ICdOT04gQVRUSVZBJ1xyXG4gIHwgJ1JFU1BJTlRBJztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaFBheW1lbnRUb29scyhjb2RpY2VDb250bzogdW5kZWZpbmVkIHwgc3RyaW5nKSB7XHJcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcclxuICAgIGAke0FQSX0vZG9taWNpbGlhemlvbmlTZXJ2aWNlcy8ke2NvZGljZUNvbnRvfS9wYXltZW50VG9vbHM/JHtnZXRQcml2YXRlQXJlYUNvbW1vblF1ZXJ5c3RyaW5nKCl9YCxcclxuICAgIHtcclxuICAgICAgbWV0aG9kOiAnR0VUJyxcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICB9LFxyXG4gICAgfVxyXG4gICk7XHJcblxyXG4gIGNvbnN0IGpzb24gPSBhd2FpdCByZWFkUHJpdmF0ZUFyZWFTZXJ2aWNlUmVzcG9uc2UocmVzcG9uc2UpO1xyXG4gIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkge1xyXG4gICAgcmV0dXJuIChqc29uIGFzIExpc3RhSWJhbikucGF5bWVudFRvb2xzO1xyXG4gIH1cclxuXHJcbiAgdGhyb3cgbmV3IFNlcnZpY2VVbmhhbmRsZWRSZXNwb25zZUVycm9yKHJlc3BvbnNlLnN0YXR1c1RleHQsICcnLCByZXNwb25zZSk7XHJcbn1cclxuIl0sImZpbGUiOiJDOi9Vc2Vycy9haW50cm9uYS9EZXNrdG9wL0FwcC9yZWFjdC9uYWovbGlicy9kYXRhLWFjY2Vzcy9zcmMvbGliL2FwaS9wcml2YXRlLWFyZWEvcGF5bWVudC10b29scy50cyJ9