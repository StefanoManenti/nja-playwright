globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || {
  cache: /* @__PURE__ */ new Map(),
  get(name, inst) {
    if (this.cache.has(name)) {
      return this.cache.get(name);
    }
    this.cache.set(name, inst);
    return inst;
  }
};
import { pricesSum } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/offerta/corrispettivi/utils.ts";
export function checkMattoncini(couponInfo, ...mattonciniValidi) {
  const mattoncino = couponInfo?.codiceMattoncinoNeta;
  if (mattoncino == null) {
    return false;
  }
  return !!mattonciniValidi.find((x) => x === mattoncino);
}
export function couponBeforeReturn(offer, scontistica, toReturn) {
  const coupon = scontistica.coupon;
  const gas = offer.gas;
  {
    const scontoGas = gas && checkMattoncini(coupon?.infoGas, "GS007", "GS003");
    const scontoLuce = offer.luce && checkMattoncini(coupon?.infoLuce, "LS009", "LS010");
    if (scontoGas && scontoLuce) {
      toReturn.prices.push(getScontoInBollettaPricesGroup(coupon?.infoGas, coupon?.infoLuce));
    } else if (scontoGas) {
      toReturn.prices.push(getScontoInBollettaPricesGroup(coupon?.infoGas));
    } else if (scontoLuce) {
      toReturn.prices.push(getScontoInBollettaPricesGroup(coupon?.infoLuce));
    }
  }
  {
    const scontoGas = gas && checkMattoncini(coupon?.infoGas, "GS005", "GS006");
    const scontoLuce = offer.luce && checkMattoncini(coupon?.infoLuce, "LS007", "LS008");
    if (scontoGas && scontoLuce) {
      toReturn.prices.push(getScontoUnaTantumPricesGroup(coupon?.infoGas, coupon?.infoLuce));
    } else if (scontoGas) {
      toReturn.prices.push(getScontoUnaTantumPricesGroup(coupon?.infoGas));
    } else if (scontoLuce) {
      toReturn.prices.push(getScontoUnaTantumPricesGroup(coupon?.infoLuce));
    }
  }
}
function getScontoInBollettaPricesGroup(couponInfo1, couponInfo2) {
  let listPrice;
  if (couponInfo2) {
    listPrice = pricesSum(couponInfo1.listPrice, couponInfo2.listPrice, 2);
  } else {
    listPrice = couponInfo1.listPrice;
  }
  return {
    rows: [{
      name: {
        main: "SCONTO IN BOLLETTA",
        descriptions: ["", ""]
      },
      price: {
        type: "normal",
        qty: "" + listPrice,
        unit: "€/mese",
        info: printDurataMattoncino(couponInfo1)
      }
    }]
  };
}
function getScontoUnaTantumPricesGroup(couponInfo1, couponInfo2) {
  let listPrice;
  if (couponInfo2) {
    listPrice = pricesSum(couponInfo1.listPrice, couponInfo2.listPrice, 2);
  } else {
    listPrice = couponInfo1.listPrice;
  }
  return {
    rows: [{
      name: {
        main: "SCONTO IN BOLLETTA",
        descriptions: ["", ""]
      },
      price: {
        type: "normal",
        qty: "" + listPrice,
        unit: "€"
      }
    }]
  };
}
function printDurataMattoncino(couponInfo) {
  const durataMattoncino = couponInfo.durataMattoncino;
  const plurale = durataMattoncino != 1;
  let tipoDurata = couponInfo.tipoDurata.toLowerCase();
  if (plurale) {
    switch (tipoDurata) {
      case "mese":
        tipoDurata = "mesi";
        break;
      case "giorno":
        tipoDurata = "giorni";
        break;
    }
  }
  return `per ${durataMattoncino} ${tipoDurata}`;
}

//# sourceMappingURL=data:application/json;base64,