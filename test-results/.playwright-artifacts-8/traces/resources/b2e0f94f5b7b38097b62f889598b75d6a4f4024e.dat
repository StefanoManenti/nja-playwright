import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordions.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordions.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$();
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import __vite__cjsImport3_react from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react.js?v=0189a8d1"; const React = __vite__cjsImport3_react.__esModule ? __vite__cjsImport3_react.default : __vite__cjsImport3_react; const useState = __vite__cjsImport3_react["useState"];
import classes from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordion.module.less";
export function Accordions({
  openIndex,
  children,
  onAccordionChange
}) {
  const currentIndex = openIndex;
  const handleClick = (index) => {
    onAccordionChange?.(currentIndex === index ? -1 : index);
  };
  return /* @__PURE__ */ jsxDEV("div", { className: classes.Accordions, children: children.map(
    (child, index) => React.cloneElement(child, {
      key: index,
      expanded: currentIndex === index,
      onClick: () => handleClick(index)
    })
  ) }, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordions.tsx",
    lineNumber: 30,
    columnNumber: 5
  }, this);
}
_c = Accordions;
export function useAccordions() {
  _s();
  const [openIndex, setOpenIndex] = useState(0);
  return [openIndex, setOpenIndex];
}
_s(useAccordions, "6UZ+mnQ9sKC06YXeyhrfGXQCT10=");
var _c;
$RefreshReg$(_c, "Accordions");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordions.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBNkJJOzs7OztxQ0E3Qko7QUFBQSxNQUFPQSxRQUFTQywwQ0FBdUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFdkMsT0FBT0MsYUFBYTtBQWViLGdCQUFTQyxXQUFXO0FBQUEsRUFDekJDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDO0FBQ2UsR0FBRztBQUNsQixRQUFNQyxlQUFlSDtBQUVyQixRQUFNSSxjQUFjQSxDQUFDQyxVQUFrQjtBQUNyQ0gsd0JBQW9CQyxpQkFBaUJFLFFBQVEsS0FBS0EsS0FBSztBQUFBLEVBQ3pEO0FBRUEsU0FDRSx1QkFBQyxTQUFJLFdBQVdQLFFBQVFDLFlBQ3JCRSxtQkFBU0s7QUFBQUEsSUFBSSxDQUFDQyxPQUFPRixVQUNwQlQsTUFBTVksYUFBYUQsT0FBTztBQUFBLE1BQ3hCRSxLQUFLSjtBQUFBQSxNQUNMSyxVQUFVUCxpQkFBaUJFO0FBQUFBLE1BQzNCTSxTQUFTQSxNQUFNUCxZQUFZQyxLQUFLO0FBQUEsSUFDbEMsQ0FBQztBQUFBLEVBQ0gsS0FQRjtBQUFBO0FBQUE7QUFBQTtBQUFBLFNBUUE7QUFFSjtBQUFDTyxLQXRCZWI7QUF3QlQsZ0JBQVNjLGdCQUFnQjtBQUFBQyxLQUFBO0FBQzlCLFFBQU0sQ0FBQ2QsV0FBV2UsWUFBWSxJQUFJbEIsU0FBb0IsQ0FBQztBQUN2RCxTQUFPLENBQUNHLFdBQVdlLFlBQVk7QUFDakM7QUFBQ0QsR0FIZUQsZUFBYTtBQUFBLElBQUFEO0FBQUFJLGFBQUFKLElBQUEiLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwiY2xhc3NlcyIsIkFjY29yZGlvbnMiLCJvcGVuSW5kZXgiLCJjaGlsZHJlbiIsIm9uQWNjb3JkaW9uQ2hhbmdlIiwiY3VycmVudEluZGV4IiwiaGFuZGxlQ2xpY2siLCJpbmRleCIsIm1hcCIsImNoaWxkIiwiY2xvbmVFbGVtZW50Iiwia2V5IiwiZXhwYW5kZWQiLCJvbkNsaWNrIiwiX2MiLCJ1c2VBY2NvcmRpb25zIiwiX3MiLCJzZXRPcGVuSW5kZXgiLCIkUmVmcmVzaFJlZyQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiQWNjb3JkaW9ucy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBCYXNlQWNjb3JkaW9uUHJvcHMgfSBmcm9tICcuL0FjY29yZGlvbic7XHJcbmltcG9ydCBjbGFzc2VzIGZyb20gJy4vQWNjb3JkaW9uLm1vZHVsZS5sZXNzJztcclxuXHJcbnR5cGUgT3BlbkluZGV4ID0gbnVtYmVyO1xyXG5cclxuZXhwb3J0IHR5cGUgQWNjb3JkaW9uc1Byb3BzID0ge1xyXG4gIG9wZW5JbmRleDogT3BlbkluZGV4O1xyXG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdEVsZW1lbnQ8QmFzZUFjY29yZGlvblByb3BzICYgUGFydGlhbDxBY2NvcmRpb25Qcm9wcz4+W107XHJcbiAgb25BY2NvcmRpb25DaGFuZ2U/OiAob3BlbkluZGV4OiBPcGVuSW5kZXgpID0+IHZvaWQ7XHJcbn07XHJcblxyXG5leHBvcnQgdHlwZSBBY2NvcmRpb25Qcm9wcyA9IHtcclxuICBleHBhbmRlZDogYm9vbGVhbjtcclxuICBvbkNsaWNrOiAoKSA9PiB2b2lkO1xyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIEFjY29yZGlvbnMoe1xyXG4gIG9wZW5JbmRleCxcclxuICBjaGlsZHJlbixcclxuICBvbkFjY29yZGlvbkNoYW5nZSxcclxufTogQWNjb3JkaW9uc1Byb3BzKSB7XHJcbiAgY29uc3QgY3VycmVudEluZGV4ID0gb3BlbkluZGV4O1xyXG5cclxuICBjb25zdCBoYW5kbGVDbGljayA9IChpbmRleDogbnVtYmVyKSA9PiB7XHJcbiAgICBvbkFjY29yZGlvbkNoYW5nZT8uKGN1cnJlbnRJbmRleCA9PT0gaW5kZXggPyAtMSA6IGluZGV4KTtcclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzZXMuQWNjb3JkaW9uc30+XHJcbiAgICAgIHtjaGlsZHJlbi5tYXAoKGNoaWxkLCBpbmRleCkgPT5cclxuICAgICAgICBSZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGQsIHtcclxuICAgICAgICAgIGtleTogaW5kZXgsXHJcbiAgICAgICAgICBleHBhbmRlZDogY3VycmVudEluZGV4ID09PSBpbmRleCxcclxuICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IGhhbmRsZUNsaWNrKGluZGV4KSxcclxuICAgICAgICB9KVxyXG4gICAgICApfVxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZUFjY29yZGlvbnMoKSB7XHJcbiAgY29uc3QgW29wZW5JbmRleCwgc2V0T3BlbkluZGV4XSA9IHVzZVN0YXRlPE9wZW5JbmRleD4oMCk7XHJcbiAgcmV0dXJuIFtvcGVuSW5kZXgsIHNldE9wZW5JbmRleF0gYXMgY29uc3Q7XHJcbn1cclxuIl0sImZpbGUiOiJDOi9Vc2Vycy9haW50cm9uYS9EZXNrdG9wL0FwcC9yZWFjdC9uYWovbGlicy91aS1hdG9tcy9zcmMvbGliL0FjY29yZGlvbnMudHN4In0=