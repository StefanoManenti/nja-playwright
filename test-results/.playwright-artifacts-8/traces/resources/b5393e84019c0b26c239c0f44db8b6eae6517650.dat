import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/tracking-app/src/lib/tracking-base.tsx");import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/tracking-app/src/lib/tracking-base.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$();
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import {
  useTracking,
  useTrackingState
} from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/tracking-react/src/index.ts";
import __vite__cjsImport3_react from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react.js?v=0189a8d1"; const useCallback = __vite__cjsImport3_react["useCallback"]; const useEffect = __vite__cjsImport3_react["useEffect"]; const useRef = __vite__cjsImport3_react["useRef"];
import { useCartState } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/tracking-app/src/lib/cart-state.tsx";
export function useTrackingTroubleshootingPage() {
  _s();
  return useTrackingPage(
    async (get) => ({
      platform: await get("platform"),
      event: await get("event"),
      siteSection1: "configura-offerta",
      siteSection2: "configura-offerta",
      from: await get("from"),
      pageName: await get("micro_step"),
      micro_step: await get("micro_step"),
      macro_step: "0_carrello_step",
      settore: await get("settore"),
      listino: await get("listino"),
      prodotto: await get("prodotto"),
      opzione: await get("opzione"),
      commodity: await get("commodity"),
      operazione: await get("operazione")
    })
  );
}
_s(useTrackingTroubleshootingPage, "f8IoYDk/UuObd02QDuBuO7L9dLs=", false, function() {
  return [useTrackingPage];
});
export function useTrackingWeborderUnicoPage() {
  _s2();
  return useTrackingPage(
    async (get) => ({
      platform: await get("platform"),
      event: await get("event"),
      macro_step: await get("macro_step"),
      micro_step: await get("micro_step"),
      operazione: await get("operazione"),
      prodotto: await get("prodotto"),
      commodity: await get("commodity"),
      settore: await get("settore"),
      opzione: await get("opzione"),
      listino: await get("listino"),
      id_plico: await get("id_plico")
    })
  );
}
_s2(useTrackingWeborderUnicoPage, "f8IoYDk/UuObd02QDuBuO7L9dLs=", false, function() {
  return [useTrackingPage];
});
export function useTrackingCouponWeborder() {
  _s3();
  return useTrackingPage(
    async (get) => ({
      platform: await get("platform"),
      event: await get("event"),
      macro_step: await get("macro_step"),
      micro_step: "coupon_dichiarazione",
      operazione: await get("operazione"),
      prodotto: await get("prodotto"),
      commodity: await get("commodity"),
      settore: await get("settore"),
      opzione: await get("opzione"),
      listino: await get("listino")
    })
  );
}
_s3(useTrackingCouponWeborder, "f8IoYDk/UuObd02QDuBuO7L9dLs=", false, function() {
  return [useTrackingPage];
});
export function useTrackingSelezione() {
  _s4();
  const tracking = useTracking();
  const { get } = useTrackingState();
  return useCallback(
    async (selezione) => {
      tracking.push({
        event: "cart_step",
        step_funnel: await get("micro_step"),
        selezione
      });
    },
    [get, tracking]
  );
}
_s4(useTrackingSelezione, "xxfvCWhPey6GMorqEeYF82HCaSM=", false, function() {
  return [useTracking, useTrackingState];
});
const getCartEvent = async (get, pageDetail) => ({
  platform: await get("platform"),
  event: await get("event"),
  siteSection1: "configura-offerta",
  siteSection2: "configura-offerta",
  from: await get("from"),
  pageName: "riepilogo",
  micro_step: "riepilogo",
  macro_step: "0_carrello_step",
  settore: await get("settore"),
  listino: await get("listino"),
  prodotto: await get("prodotto"),
  opzione: await get("opzione"),
  commodity: await get("commodity"),
  operazione: await get("operazione"),
  pageDetail
});
function useTrackingPage(getEvent) {
  _s5();
  const initialized = useRef();
  const tracking = useTracking();
  const { get } = useTrackingState();
  const { cartShown } = useCartState();
  useEffect(() => {
    if (initialized.current?.cartShown !== cartShown) {
      initialized.current = { cartShown };
      if (cartShown) {
        getEvent(get).then((event) => getCartEvent(get, event.micro_step)).then((event) => tracking.push(event));
      } else {
        getEvent(get).then((event) => tracking.push(event));
      }
    }
  }, [cartShown, get, getEvent, tracking]);
  return tracking;
}
_s5(useTrackingPage, "4KLc4sCDpHv0uoqHyFHV4r5xhCQ=", false, function() {
  return [useTracking, useTrackingState, useCartState];
});
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/tracking-app/src/lib/tracking-base.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,