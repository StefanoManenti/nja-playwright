globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import {
  operativeModeEnabled$,
  workingOnBroadbandAtom
} from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/index.ts";
import { Step, StepPriority } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/engine/src/index.ts";
import StepErrorBoundary from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/StepErrorBoundary.tsx";
import { StepDependencies } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/StepDependencies.ts";
class Privacy extends Step {
  constructor() {
    super(...arguments);
    this.priority = new StepPriority(99);
    this.lazy = () => import("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/PrivacyStep.tsx");
    this.WrapperComponent = StepErrorBoundary;
  }
  toString() {
    return "privacy";
  }
  isInFlux(get) {
    if (get(workingOnBroadbandAtom)) {
      return true;
    }
    return get(operativeModeEnabled$);
  }
  toDo(get) {
    return false;
  }
  provides() {
    return [StepDependencies.PRIVACY];
  }
}
export const privacy = new Privacy();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQUEsRUFDRUE7QUFBQUEsRUFFQUM7QUFBQUEsT0FDSztBQUNQLFNBQVNDLE1BQU1DLG9CQUFvQjtBQUVuQyxPQUFPQyx1QkFBdUI7QUFDOUIsU0FBU0Msd0JBQXdCO0FBRWpDLE1BQU1DLGdCQUFnQkosS0FBSztBQUFBLEVBQTNCO0FBQUE7QUFDRUssb0JBQVcsSUFBSUosYUFBYSxFQUFFO0FBRTlCSyxnQkFBT0EsTUFBTSxPQUFPLGVBQWU7QUFDbkNDLDRCQUFtQkw7QUFBQUE7QUFBQUEsRUFFbkJNLFdBQVc7QUFDVCxXQUFPO0FBQUEsRUFDVDtBQUFBLEVBRVVDLFNBQVNDLEtBQWE7QUFDOUIsUUFBSUEsSUFBSVgsc0JBQXNCLEdBQUc7QUFDL0IsYUFBTztBQUFBLElBQ1Q7QUFFQSxXQUFPVyxJQUFJWixxQkFBcUI7QUFBQSxFQUNsQztBQUFBLEVBRVVhLEtBQUtELEtBQWE7QUFDMUIsV0FBTztBQUFBLEVBQ1Q7QUFBQSxFQUVBRSxXQUFXO0FBQ1QsV0FBTyxDQUFDVCxpQkFBaUJVLE9BQU87QUFBQSxFQUNsQztBQUNGO0FBRU8sYUFBTUMsVUFBVSxJQUFJVixRQUFRIiwibmFtZXMiOlsib3BlcmF0aXZlTW9kZUVuYWJsZWQkIiwid29ya2luZ09uQnJvYWRiYW5kQXRvbSIsIlN0ZXAiLCJTdGVwUHJpb3JpdHkiLCJTdGVwRXJyb3JCb3VuZGFyeSIsIlN0ZXBEZXBlbmRlbmNpZXMiLCJQcml2YWN5IiwicHJpb3JpdHkiLCJsYXp5IiwiV3JhcHBlckNvbXBvbmVudCIsInRvU3RyaW5nIiwiaXNJbkZsdXgiLCJnZXQiLCJ0b0RvIiwicHJvdmlkZXMiLCJQUklWQUNZIiwicHJpdmFjeSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJwcml2YWN5LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIG9wZXJhdGl2ZU1vZGVFbmFibGVkJCxcclxuICBzdG9yZSxcclxuICB3b3JraW5nT25Ccm9hZGJhbmRBdG9tLFxyXG59IGZyb20gJ0BuYWotd28vZGF0YS1hY2Nlc3MnO1xyXG5pbXBvcnQgeyBTdGVwLCBTdGVwUHJpb3JpdHkgfSBmcm9tICdAbmFqLXdvL2VuZ2luZSc7XHJcbmltcG9ydCB7IEdldHRlciB9IGZyb20gJ2pvdGFpL3ZhbmlsbGEvdHlwZVV0aWxzJztcclxuaW1wb3J0IFN0ZXBFcnJvckJvdW5kYXJ5IGZyb20gJy4uL1N0ZXBFcnJvckJvdW5kYXJ5JztcclxuaW1wb3J0IHsgU3RlcERlcGVuZGVuY2llcyB9IGZyb20gJy4uL1N0ZXBEZXBlbmRlbmNpZXMnO1xyXG5cclxuY2xhc3MgUHJpdmFjeSBleHRlbmRzIFN0ZXAge1xyXG4gIHByaW9yaXR5ID0gbmV3IFN0ZXBQcmlvcml0eSg5OSk7XHJcblxyXG4gIGxhenkgPSAoKSA9PiBpbXBvcnQoJy4vUHJpdmFjeVN0ZXAnKTtcclxuICBXcmFwcGVyQ29tcG9uZW50ID0gU3RlcEVycm9yQm91bmRhcnk7XHJcblxyXG4gIHRvU3RyaW5nKCkge1xyXG4gICAgcmV0dXJuICdwcml2YWN5JztcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBpc0luRmx1eChnZXQ6IEdldHRlcikge1xyXG4gICAgaWYgKGdldCh3b3JraW5nT25Ccm9hZGJhbmRBdG9tKSkge1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZ2V0KG9wZXJhdGl2ZU1vZGVFbmFibGVkJCk7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgdG9EbyhnZXQ6IEdldHRlcikge1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgcHJvdmlkZXMoKSB7XHJcbiAgICByZXR1cm4gW1N0ZXBEZXBlbmRlbmNpZXMuUFJJVkFDWV07XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgcHJpdmFjeSA9IG5ldyBQcml2YWN5KCk7XHJcbiJdLCJmaWxlIjoiQzovVXNlcnMvYWludHJvbmEvRGVza3RvcC9BcHAvcmVhY3QvbmFqL2xpYnMvc3RlcHMvc3JjL2xpYi9jdXN0b21lci9wcml2YWN5LnRzeCJ9