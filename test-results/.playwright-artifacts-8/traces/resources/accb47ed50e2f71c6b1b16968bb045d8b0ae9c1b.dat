import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/lib/AppAnchor.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/lib/AppAnchor.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$();
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import { useApp } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/lib/app/index.ts";
import { link_servizioClienti } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/lib/links.ts";
import { passthroughFlags } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/lib/redirect.ts";
export function AppAnchor({ children, href, mode, ...props }) {
  _s();
  const app = useApp();
  if (app) {
    if (href === link_servizioClienti) {
      return /* @__PURE__ */ jsxDEV("a", { ...props, href: "com.eniplenitude://contacts-page", target: "_blank", children }, void 0, false, {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/lib/AppAnchor.tsx",
        lineNumber: 20,
        columnNumber: 9
      }, this);
    }
    return /* @__PURE__ */ jsxDEV(
      "button",
      {
        ...props,
        onClick: () => {
          app?.openUrl(href, mode);
        },
        type: "button",
        children
      },
      void 0,
      false,
      {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/lib/AppAnchor.tsx",
        lineNumber: 27,
        columnNumber: 7
      },
      this
    );
  }
  if (href.startsWith("/")) {
    href = passthroughFlags(href);
  }
  return /* @__PURE__ */ jsxDEV("a", { ...props, href, children }, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/lib/AppAnchor.tsx",
    lineNumber: 44,
    columnNumber: 5
  }, this);
}
_s(AppAnchor, "C8QPvY0p44m7UGGx1c6s2WfnOeA=", false, function() {
  return [useApp];
});
_c = AppAnchor;
var _c;
$RefreshReg$(_c, "AppAnchor");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/lib/AppAnchor.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBbUJROzs7OztxQ0FuQlI7QUFBQSxPQUFTQSxpREFBNkI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ3RDLFNBQW1CQyxjQUFjO0FBQ2pDLFNBQVNDLDRCQUE0QjtBQUNyQyxTQUFTQyx3QkFBd0I7QUFVMUIsZ0JBQVNDLFVBQVUsRUFBRUMsVUFBVUMsTUFBTUMsTUFBTSxHQUFHQyxNQUFzQixHQUFHO0FBQUFDLEtBQUE7QUFDNUUsUUFBTUMsTUFBTVQsT0FBTztBQUVuQixNQUFJUyxLQUFLO0FBQ1AsUUFBSUosU0FBU0osc0JBQXNCO0FBQ2pDLGFBQ0UsdUJBQUMsT0FBRSxHQUFJTSxPQUFPLE1BQUssb0NBQW1DLFFBQU8sVUFDMURILFlBREg7QUFBQTtBQUFBO0FBQUE7QUFBQSxhQUVBO0FBQUEsSUFFSjtBQUVBLFdBQ0U7QUFBQSxNQUFDO0FBQUE7QUFBQSxRQUNDLEdBQUlHO0FBQUFBLFFBQ0osU0FBUyxNQUFNO0FBQ2JFLGVBQUtDLFFBQVFMLE1BQU1DLElBQUk7QUFBQSxRQUN6QjtBQUFBLFFBQ0EsTUFBSztBQUFBLFFBRUpGO0FBQUFBO0FBQUFBLE1BUEg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLElBUUE7QUFBQSxFQUVKO0FBRUEsTUFBSUMsS0FBS00sV0FBVyxHQUFHLEdBQUc7QUFDeEJOLFdBQU9ILGlCQUFpQkcsSUFBSTtBQUFBLEVBQzlCO0FBRUEsU0FDRSx1QkFBQyxPQUFFLEdBQUlFLE9BQU8sTUFDWEgsWUFESDtBQUFBO0FBQUE7QUFBQTtBQUFBLFNBRUE7QUFFSjtBQUFDSSxHQWxDZUwsV0FBUztBQUFBLFVBQ1hILE1BQU07QUFBQTtBQUFBWSxLQURKVDtBQUFTLElBQUFTO0FBQUFDLGFBQUFELElBQUEiLCJuYW1lcyI6WyJDb21wb25lbnRQcm9wcyIsInVzZUFwcCIsImxpbmtfc2Vydml6aW9DbGllbnRpIiwicGFzc3Rocm91Z2hGbGFncyIsIkFwcEFuY2hvciIsImNoaWxkcmVuIiwiaHJlZiIsIm1vZGUiLCJwcm9wcyIsIl9zIiwiYXBwIiwib3BlblVybCIsInN0YXJ0c1dpdGgiLCJfYyIsIiRSZWZyZXNoUmVnJCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJBcHBBbmNob3IudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudFByb3BzIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB0eXBlIEFwcCwgdXNlQXBwIH0gZnJvbSAnLi9hcHAnO1xyXG5pbXBvcnQgeyBsaW5rX3NlcnZpemlvQ2xpZW50aSB9IGZyb20gJy4vbGlua3MnO1xyXG5pbXBvcnQgeyBwYXNzdGhyb3VnaEZsYWdzIH0gZnJvbSAnLi9yZWRpcmVjdCc7XHJcblxyXG50eXBlIEFwcEFuY2hvclByb3BzID0gUGljazxcclxuICBDb21wb25lbnRQcm9wczwnYSc+LFxyXG4gICdjaGlsZHJlbicgfCAnY2xhc3NOYW1lJyB8ICd0YXJnZXQnXHJcbj4gJiB7XHJcbiAgaHJlZjogc3RyaW5nO1xyXG4gIG1vZGU6IFBhcmFtZXRlcnM8QXBwWydvcGVuVXJsJ10+WzFdO1xyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIEFwcEFuY2hvcih7IGNoaWxkcmVuLCBocmVmLCBtb2RlLCAuLi5wcm9wcyB9OiBBcHBBbmNob3JQcm9wcykge1xyXG4gIGNvbnN0IGFwcCA9IHVzZUFwcCgpO1xyXG5cclxuICBpZiAoYXBwKSB7XHJcbiAgICBpZiAoaHJlZiA9PT0gbGlua19zZXJ2aXppb0NsaWVudGkpIHtcclxuICAgICAgcmV0dXJuIChcclxuICAgICAgICA8YSB7Li4ucHJvcHN9IGhyZWY9XCJjb20uZW5pcGxlbml0dWRlOi8vY29udGFjdHMtcGFnZVwiIHRhcmdldD1cIl9ibGFua1wiPlxyXG4gICAgICAgICAge2NoaWxkcmVufVxyXG4gICAgICAgIDwvYT5cclxuICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8YnV0dG9uXHJcbiAgICAgICAgey4uLnByb3BzfVxyXG4gICAgICAgIG9uQ2xpY2s9eygpID0+IHtcclxuICAgICAgICAgIGFwcD8ub3BlblVybChocmVmLCBtb2RlKTtcclxuICAgICAgICB9fVxyXG4gICAgICAgIHR5cGU9XCJidXR0b25cIlxyXG4gICAgICA+XHJcbiAgICAgICAge2NoaWxkcmVufVxyXG4gICAgICA8L2J1dHRvbj5cclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBpZiAoaHJlZi5zdGFydHNXaXRoKCcvJykpIHtcclxuICAgIGhyZWYgPSBwYXNzdGhyb3VnaEZsYWdzKGhyZWYpO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxhIHsuLi5wcm9wc30gaHJlZj17aHJlZn0+XHJcbiAgICAgIHtjaGlsZHJlbn1cclxuICAgIDwvYT5cclxuICApO1xyXG59XHJcbiJdLCJmaWxlIjoiQzovVXNlcnMvYWludHJvbmEvRGVza3RvcC9BcHAvcmVhY3QvbmFqL2xpYnMvdXRpbC9zcmMvbGliL0FwcEFuY2hvci50c3gifQ==