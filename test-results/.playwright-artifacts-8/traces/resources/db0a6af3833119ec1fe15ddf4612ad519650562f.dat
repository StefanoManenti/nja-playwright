globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
export class StepPriority {
  constructor(baseValue) {
    this.baseValue = baseValue;
    this.values = [];
    this.reset();
  }
  static compare(a, b, i = 0) {
    const bi = b[i];
    const ai = a[i];
    if (bi == null) {
      if (ai == null) return 0;
      return -Infinity;
    }
    if (ai == null) return Infinity;
    if (ai === bi) return StepPriority.compare(a, b, i + 1);
    return ai - bi;
  }
  toString() {
    return this.values.join("/");
  }
  override(priority) {
    this.values = priority.values.concat([this.baseValue]);
  }
  reset() {
    this.values = [this.baseValue];
  }
  compare(b) {
    return StepPriority.compare(this.values, b.values, 0);
  }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFPLGFBQU1BLGFBQWE7QUFBQSxFQUd4QkMsWUFBbUJDLFdBQW1CO0FBQW5CQTtBQUZuQixTQUFRQyxTQUFtQjtBQUd6QixTQUFLQyxNQUFNO0FBQUEsRUFDYjtBQUFBLEVBRUEsT0FBZUMsUUFBUUMsR0FBYUMsR0FBYUMsSUFBSSxHQUFXO0FBQzlELFVBQU1DLEtBQUtGLEVBQUVDLENBQUM7QUFDZCxVQUFNRSxLQUFLSixFQUFFRSxDQUFDO0FBRWQsUUFBSUMsTUFBTSxNQUFNO0FBQ2QsVUFBSUMsTUFBTSxLQUFNLFFBQU87QUFDdkIsYUFBTztBQUFBLElBQ1Q7QUFDQSxRQUFJQSxNQUFNLEtBQU0sUUFBTztBQUN2QixRQUFJQSxPQUFPRCxHQUFJLFFBQU9ULGFBQWFLLFFBQVFDLEdBQUdDLEdBQUdDLElBQUksQ0FBQztBQUN0RCxXQUFPRSxLQUFLRDtBQUFBQSxFQUNkO0FBQUEsRUFFQUUsV0FBVztBQUNULFdBQU8sS0FBS1IsT0FBT1MsS0FBSyxHQUFHO0FBQUEsRUFDN0I7QUFBQSxFQUVBQyxTQUFTQyxVQUF3QjtBQUMvQixTQUFLWCxTQUFTVyxTQUFTWCxPQUFPWSxPQUFPLENBQUMsS0FBS2IsU0FBUyxDQUFDO0FBQUEsRUFDdkQ7QUFBQSxFQUVBRSxRQUFRO0FBQ04sU0FBS0QsU0FBUyxDQUFDLEtBQUtELFNBQVM7QUFBQSxFQUMvQjtBQUFBLEVBRUFHLFFBQVFFLEdBQWlCO0FBQ3ZCLFdBQU9QLGFBQWFLLFFBQVEsS0FBS0YsUUFBUUksRUFBRUosUUFBUSxDQUFDO0FBQUEsRUFDdEQ7QUFDRiIsIm5hbWVzIjpbIlN0ZXBQcmlvcml0eSIsImNvbnN0cnVjdG9yIiwiYmFzZVZhbHVlIiwidmFsdWVzIiwicmVzZXQiLCJjb21wYXJlIiwiYSIsImIiLCJpIiwiYmkiLCJhaSIsInRvU3RyaW5nIiwiam9pbiIsIm92ZXJyaWRlIiwicHJpb3JpdHkiLCJjb25jYXQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiU3RlcFByaW9yaXR5LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgU3RlcFByaW9yaXR5IHtcclxuICBwcml2YXRlIHZhbHVlczogbnVtYmVyW10gPSBbXTtcclxuXHJcbiAgY29uc3RydWN0b3IocHVibGljIGJhc2VWYWx1ZTogbnVtYmVyKSB7XHJcbiAgICB0aGlzLnJlc2V0KCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHN0YXRpYyBjb21wYXJlKGE6IG51bWJlcltdLCBiOiBudW1iZXJbXSwgaSA9IDApOiBudW1iZXIge1xyXG4gICAgY29uc3QgYmkgPSBiW2ldO1xyXG4gICAgY29uc3QgYWkgPSBhW2ldO1xyXG5cclxuICAgIGlmIChiaSA9PSBudWxsKSB7XHJcbiAgICAgIGlmIChhaSA9PSBudWxsKSByZXR1cm4gMDtcclxuICAgICAgcmV0dXJuIC1JbmZpbml0eTtcclxuICAgIH1cclxuICAgIGlmIChhaSA9PSBudWxsKSByZXR1cm4gK0luZmluaXR5O1xyXG4gICAgaWYgKGFpID09PSBiaSkgcmV0dXJuIFN0ZXBQcmlvcml0eS5jb21wYXJlKGEsIGIsIGkgKyAxKTtcclxuICAgIHJldHVybiBhaSAtIGJpO1xyXG4gIH1cclxuXHJcbiAgdG9TdHJpbmcoKSB7XHJcbiAgICByZXR1cm4gdGhpcy52YWx1ZXMuam9pbignLycpO1xyXG4gIH1cclxuXHJcbiAgb3ZlcnJpZGUocHJpb3JpdHk6IFN0ZXBQcmlvcml0eSkge1xyXG4gICAgdGhpcy52YWx1ZXMgPSBwcmlvcml0eS52YWx1ZXMuY29uY2F0KFt0aGlzLmJhc2VWYWx1ZV0pO1xyXG4gIH1cclxuXHJcbiAgcmVzZXQoKSB7XHJcbiAgICB0aGlzLnZhbHVlcyA9IFt0aGlzLmJhc2VWYWx1ZV07XHJcbiAgfVxyXG5cclxuICBjb21wYXJlKGI6IFN0ZXBQcmlvcml0eSkge1xyXG4gICAgcmV0dXJuIFN0ZXBQcmlvcml0eS5jb21wYXJlKHRoaXMudmFsdWVzLCBiLnZhbHVlcywgMCk7XHJcbiAgfVxyXG59XHJcbiJdLCJmaWxlIjoiQzovVXNlcnMvYWludHJvbmEvRGVza3RvcC9BcHAvcmVhY3QvbmFqL2xpYnMvZW5naW5lL3NyYy9saWIvU3RlcFByaW9yaXR5LnRzeCJ9