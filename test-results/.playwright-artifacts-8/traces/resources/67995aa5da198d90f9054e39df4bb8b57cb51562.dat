globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || {
  cache: /* @__PURE__ */ new Map(),
  get(name, inst) {
    if (this.cache.has(name)) {
      return this.cache.get(name);
    }
    this.cache.set(name, inst);
    return inst;
  }
};
import { checkMattoncini } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/offerta/corrispettivi/coupon.ts";
import { PriceCalculatorV2 } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/offerta/corrispettivi/utils.ts";
import { parseCommercializzazioneVendita } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/offerta/corrispettivi/commercializzazione-vendita.ts";
export function generaCorrispettiviTrend(offer, opzioni, scontistica = {}) {
  const toReturn = {
    prices: [],
    discounts: {},
    texts: {},
    greenEnergyIncluded: offer.verde.luceInclusa
  };
  if (opzioni.pagamento === "DOMICILIAZIONE") {
    if (offer.codice.match(/OPEN/)) {
      toReturn.texts.billAndPayment = "Le bollette saranno disponibili online all’interno dell’Area Personale. Ricorda che verranno addebitate direttamente sul conto corrente.";
    }
  }
  const activeDomiciliazione = opzioni.pagamento === "DOMICILIAZIONE";
  if (offer.codice.match(/FINETUTELA/)) {
    toReturn.discounts.domiciliazioneFisso = {
      active: activeDomiciliazione,
      price: "0,5",
      // offer.luce && offer.gas ? "2" : "1",
      unit: "€/mese"
    };
  } else {
    toReturn.discounts.domiciliazioneFisso = {
      active: activeDomiciliazione,
      price: "1",
      // offer.luce && offer.gas ? "2" : "1",
      unit: "€/mese"
    };
  }
  let extraLuce = null;
  if (offer.costiDiCommercializzazione.luce) {
    const parsed = parseCommercializzazioneVendita(offer.costiDiCommercializzazione.luce, "POWER", scontistica);
    if (parsed) {
      extraLuce = [parsed];
    }
  }
  let extraGas = null;
  if (offer.costiDiCommercializzazione.gas) {
    const parsed = parseCommercializzazioneVendita(offer.costiDiCommercializzazione.gas, "GAS", scontistica);
    if (parsed) {
      extraGas = [parsed];
    }
  }
  {
    const p = new PriceCalculatorV2(!!scontistica.prezziBarratiLuce).setTag("after-discounts").addDiscount({
      condition: false,
      percent: scontistica.coupon?.infoLuce?.percentValue,
      from: "after-discounts"
    }).addDiscount({
      condition: checkMattoncini(scontistica.coupon?.infoLuce, "LS005", "LS006"),
      amount: scontistica.coupon?.infoLuce?.listPrice
    });
    const items = {
      rows: [{
        name: {
          main: "LUCE",
          descriptions: ["", ""],
          tooltip: "Il prezzo all’ingrosso luce è il Corrispettivo luce Index, aggiornato mensilmente e pari, per ciascun mese di fornitura, alla media del PUN (Prezzo Unico Nazionale dell'energia elettrica) determinato dal gestore dei mercati energetici."
        },
        price: {
          type: "variable",
          base: "Prezzo all’ingrosso",
          ...p.apply(offer.prezzi.luce?.monoraria),
          unit: "€/kWh",
          info: "Contributo al consumo",
          ingrosso: "PUN",
          tooltip: "Il prezzo all’ingrosso luce è il Corrispettivo luce Index, aggiornato mensilmente e pari, per ciascun mese di fornitura, alla media del PUN (Prezzo Unico Nazionale dell'energia elettrica) determinato dal gestore dei mercati energetici."
        }
      }]
    };
    if (extraLuce) items.extra = extraLuce;
    toReturn.prices.push(items);
  }
  {
    const p = new PriceCalculatorV2(!!scontistica.prezziBarratiGas).setTag("after-discounts").addDiscount({
      condition: checkMattoncini(scontistica.coupon?.infoGas, "GS001"),
      percent: scontistica.coupon?.infoGas?.percentValue,
      from: "after-discounts"
    }).addDiscount({
      condition: checkMattoncini(scontistica.coupon?.infoGas, "GS004", "GS009"),
      amount: scontistica.coupon?.infoGas?.listPrice
    });
    const items = {
      rows: [{
        name: {
          main: "GAS",
          descriptions: ["", ""],
          tooltip: "Il prezzo all’ingrosso è il Corrispettivo gas Index, pari all'indice PSV (PSV Day Ahead Heren Mid) che corrisponde al prezzo del gas naturale all’ingrosso al PSV (Punto di Scambio Virtuale). L'indice è calcolato mensilmente come media dei prezzi Bid e Offer da ICIS Heren."
        },
        price: {
          type: "variable",
          base: "Prezzo all’ingrosso",
          ...p.apply(offer.prezzi.gas),
          unit: "€/Smc",
          info: "Contributo al consumo",
          ingrosso: "PSV",
          tooltip: "Il prezzo all’ingrosso è il Corrispettivo gas Index, pari all'indice PSV (PSV Day Ahead Heren Mid) che corrisponde al prezzo del gas naturale all’ingrosso al PSV (Punto di Scambio Virtuale). L'indice è calcolato mensilmente come media dei prezzi Bid e Offer da ICIS Heren."
        }
      }]
    };
    if (extraGas) items.extra = extraGas;
    toReturn.prices.push(items);
  }
  if (offer.verde.luceInclusa) {
    toReturn.prices.push({
      rows: [{
        name: {
          main: "ENERGIA VERDE"
        },
        price: {
          type: "included",
          info: "Inclusa"
        }
      }]
    });
  }
  if (offer.verde.gasIncluso) {
    toReturn.prices.push({
      rows: [{
        name: {
          main: "Gas con CO₂ compensata"
        },
        price: {
          type: "included",
          info: "Incluso"
        }
      }]
    });
  }
  return toReturn;
}

//# sourceMappingURL=data:application/json;base64,