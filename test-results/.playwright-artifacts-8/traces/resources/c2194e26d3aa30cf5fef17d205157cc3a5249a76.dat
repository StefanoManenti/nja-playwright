import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const Fragment = __vite__cjsImport0_react_jsxDevRuntime["Fragment"]; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$();
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import {
  addressAtom,
  businessNameAtom,
  consentPhoneContactAtom,
  customerAtom,
  emailAtom,
  emailCryptAtom,
  legalFormAtom,
  LegaLFormOptions,
  normalizeAddress,
  pecBusinessAtom,
  profile$,
  saveContracts$,
  sdiBusinessAtom,
  Segment,
  shippingAddressSelectedAtom,
  shouldOtpPhone,
  taxIdAtom,
  vatNumberAtom
} from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/index.ts";
import { useEngine } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/engine/src/index.ts";
import { FormError, useFormErrors } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/form-errors/src/index.ts";
import {
  GlobalTrackingState,
  useTrackingWeborderUnicoPage,
  WeborderTrackingState
} from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/tracking-app/src/index.ts";
import { FormControlLabel, TextField } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/index.ts";
import {
  emailRegisterOptions,
  ERROR_FIELD_DEFAULT,
  registerBusinessTaxId,
  registerEmail,
  registerMobilePhone,
  registerPhoneCountryCode,
  registerVatNumber,
  sdiRegisterOptions,
  SelectControlled
} from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-fields/src/index.ts";
import { StepContainer, StepFieldset, StepTitle } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-molecules/src/index.ts";
import { StepCtaConnected, StepLayout } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/index.ts";
import { ModalCancelledError, tryToClearError } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/index.ts";
import { atom, useAtomValue } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/jotai.js?v=0189a8d1";
import { useAtomCallback } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/jotai_utils.js?v=0189a8d1";
import __vite__cjsImport14_react from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react.js?v=0189a8d1"; const useCallback = __vite__cjsImport14_react["useCallback"]; const useId = __vite__cjsImport14_react["useId"];
import {
  Controller,
  FormProvider,
  useForm
} from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react-hook-form.js?v=0189a8d1";
import { AddressInput } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressInput.tsx";
import { ENABLE_PEC_SDI } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/flags.ts";
import { ContactAlert } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/ContactAlert.tsx";
import { EmailChangedAlert } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/EmailChangedAlert.tsx";
import { PhoneFieldContainer } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/PhoneFieldContainer.tsx";
import { useNewCustomerModals } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/useNewCustomerModals.tsx";
const defaultValues$ = globalThis.jotaiAtomCache.get(
  "C:\\Users\\aintrona\\Desktop\\App\\react\\naj\\libs\\steps\\src\\lib\\customer\\NewBusinessStep.tsx/defaultValues$",
  atom(async (get) => {
    const address = await get(addressAtom);
    const email = await get(emailAtom);
    const vatNumber = await get(vatNumberAtom);
    const taxId = await get(taxIdAtom);
    const profile = await get(profile$);
    const { telephone, country } = await get(profile.telephoneWithCountryCode$);
    const consentPhoneContact = get(consentPhoneContactAtom);
    const pec = get(pecBusinessAtom);
    const sdi = get(sdiBusinessAtom);
    const legalForm = await get(legalFormAtom);
    const businessName = await get(businessNameAtom);
    return {
      legalForm: legalForm ?? "",
      businessName: businessName ?? "",
      address: address?.asSuggestion(),
      email: email ?? "",
      vatNumber: vatNumber ?? "",
      vatNotEqualsTaxId: vatNumber !== taxId,
      taxId: taxId ?? "",
      telephone: telephone ?? "",
      telephoneCountryCode: country?.phone ?? "+39",
      consentPhoneContact: consentPhoneContact ?? false,
      pec: pec ?? "",
      sdi: sdi ?? ""
    };
  })
);
defaultValues$.debugLabel = "defaultValues$";
export default function AddressBusinessStepWrapped() {
  return /* @__PURE__ */ jsxDEV(GlobalTrackingState, { children: /* @__PURE__ */ jsxDEV(
    WeborderTrackingState,
    {
      macro_step: "address_business",
      micro_step: "inserisci_address_business",
      children: /* @__PURE__ */ jsxDEV(NewBusinessStep, {}, void 0, false, {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
        lineNumber: 114,
        columnNumber: 9
      }, this)
    },
    void 0,
    false,
    {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
      lineNumber: 110,
      columnNumber: 7
    },
    this
  ) }, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
    lineNumber: 109,
    columnNumber: 5
  }, this);
}
_c = AddressBusinessStepWrapped;
function NewBusinessStep() {
  _s();
  useTrackingWeborderUnicoPage();
  const { next } = useEngine();
  const formId = useId();
  const methods = useForm({
    defaultValues: useAtomValue(defaultValues$, { delay: 0 }),
    mode: "onTouched"
  });
  const {
    handleSubmit,
    register,
    formState: { errors },
    watch,
    setError
  } = methods;
  const { openModalEmailChanged, openModalOtp, modals } = useNewCustomerModals();
  const setFormError = useFormErrors(setError);
  const onSubmit = useAtomCallback(
    useCallback(
      async (get, set, data) => {
        await set(saveContracts$);
        const {
          legalForm,
          businessName,
          address,
          email,
          vatNumber,
          taxId,
          telephone,
          telephoneCountryCode,
          consentPhoneContact,
          pec,
          sdi,
          vatNotEqualsTaxId: vatNotEqualsTaxId2
        } = data;
        let emailChanged;
        try {
          const result = await set(customerAtom, {
            segment: Segment.SMALL,
            email,
            taxId: vatNotEqualsTaxId2 ? taxId : vatNumber,
            vatNumber
          });
          emailChanged = result.emailChanged;
        } catch (e) {
          set(tryToClearError, e);
          setFormError("vatNumber", e);
          return;
        }
        await set(legalFormAtom, legalForm);
        await set(businessNameAtom, businessName);
        const egonAddress = await normalizeAddress(address);
        await set(addressAtom, egonAddress);
        await set(shippingAddressSelectedAtom, egonAddress);
        set(pecBusinessAtom, pec);
        set(sdiBusinessAtom, sdi);
        set(consentPhoneContactAtom, consentPhoneContact);
        const {
          profile: { telephoneWithCountryCode$ }
        } = await get(customerAtom);
        const { verified: phoneVerified } = await set(
          telephoneWithCountryCode$,
          {
            action: "SET",
            countryCode: telephoneCountryCode,
            telephone
          }
        );
        try {
          if (emailChanged) {
            await openModalEmailChanged({ email: emailChanged });
          }
          const checkTelephoneWithOtp = !phoneVerified && get(shouldOtpPhone);
          if (checkTelephoneWithOtp) {
            await openModalOtp({
              telephone$: telephoneWithCountryCode$
            });
          }
          next();
        } catch (e) {
          if (!(e instanceof ModalCancelledError)) {
            throw e;
          }
        }
        await set(saveContracts$);
        next();
      },
      [next, openModalEmailChanged, openModalOtp, setFormError]
    )
  );
  const alertEmailChanged = !!useAtomValue(emailCryptAtom, { delay: 0 });
  const vatNotEqualsTaxId = watch("vatNotEqualsTaxId");
  return /* @__PURE__ */ jsxDEV(FormProvider, { ...methods, children: [
    modals,
    /* @__PURE__ */ jsxDEV(StepLayout, { cta: /* @__PURE__ */ jsxDEV(StepCtaConnected, { form: formId }, void 0, false, {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
      lineNumber: 241,
      columnNumber: 24
    }, this), children: /* @__PURE__ */ jsxDEV("form", { id: formId, onSubmit: handleSubmit(onSubmit), children: /* @__PURE__ */ jsxDEV(StepContainer, { everything: true, children: [
      /* @__PURE__ */ jsxDEV(StepContainer, { children: [
        /* @__PURE__ */ jsxDEV(
          StepTitle,
          {
            title: /* @__PURE__ */ jsxDEV(Fragment, { children: "A chi verrà intestata la fornitura?" }, void 0, false, {
              fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
              lineNumber: 246,
              columnNumber: 24
            }, this),
            subtitle: /* @__PURE__ */ jsxDEV(Fragment, { children: "Inserisci la tipologia e il nome dell'attività o dell'azienda." }, void 0, false, {
              fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
              lineNumber: 248,
              columnNumber: 17
            }, this)
          },
          void 0,
          false,
          {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
            lineNumber: 245,
            columnNumber: 15
          },
          this
        ),
        /* @__PURE__ */ jsxDEV(StepFieldset, { children: /* @__PURE__ */ jsxDEV(
          SelectControlled,
          {
            name: "legalForm",
            control: methods.control,
            rules: { required: ERROR_FIELD_DEFAULT },
            label: "Forma giuridica",
            showClear: true,
            placeHolder: "Seleziona una forma giuridica",
            fullWidth: true,
            hasFilter: true,
            options: LegaLFormOptions
          },
          void 0,
          false,
          {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
            lineNumber: 255,
            columnNumber: 17
          },
          this
        ) }, void 0, false, {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
          lineNumber: 254,
          columnNumber: 15
        }, this),
        /* @__PURE__ */ jsxDEV(StepFieldset, { children: /* @__PURE__ */ jsxDEV(
          TextField,
          {
            ...register("businessName", {
              required: ERROR_FIELD_DEFAULT
            }),
            label: "Ragione sociale",
            placeholder: "Inserisci la ragione sociale",
            fullWidth: true,
            error: !!errors.businessName,
            helperText: !!errors.businessName && errors.businessName.message
          },
          void 0,
          false,
          {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
            lineNumber: 269,
            columnNumber: 17
          },
          this
        ) }, void 0, false, {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
          lineNumber: 268,
          columnNumber: 15
        }, this)
      ] }, void 0, true, {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
        lineNumber: 244,
        columnNumber: 13
      }, this),
      /* @__PURE__ */ jsxDEV(StepContainer, { children: [
        /* @__PURE__ */ jsxDEV(
          StepTitle,
          {
            title2: /* @__PURE__ */ jsxDEV(Fragment, { children: "Inserisci l’indirizzo della sede legale" }, void 0, false, {
              fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
              lineNumber: 286,
              columnNumber: 25
            }, this),
            subtitle: /* @__PURE__ */ jsxDEV(Fragment, { children: "Inserisci il tuo indirizzo e selezionalo dalla lista sottostante." }, void 0, false, {
              fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
              lineNumber: 288,
              columnNumber: 17
            }, this)
          },
          void 0,
          false,
          {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
            lineNumber: 285,
            columnNumber: 15
          },
          this
        ),
        /* @__PURE__ */ jsxDEV(StepFieldset, { children: /* @__PURE__ */ jsxDEV(
          Controller,
          {
            name: "address",
            control: methods.control,
            rules: AddressInput.rules,
            render: ({ field, formState, fieldState }) => /* @__PURE__ */ jsxDEV(
              AddressInput,
              {
                myRef: field.ref,
                label: "Indirizzo sede legale",
                error: fieldState.error,
                ...field,
                ...fieldState
              },
              void 0,
              false,
              {
                fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
                lineNumber: 301,
                columnNumber: 19
              },
              this
            )
          },
          void 0,
          false,
          {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
            lineNumber: 296,
            columnNumber: 17
          },
          this
        ) }, void 0, false, {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
          lineNumber: 295,
          columnNumber: 15
        }, this),
        /* @__PURE__ */ jsxDEV(StepTitle, { title2: "Indica i relativi contatti" }, void 0, false, {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
          lineNumber: 313,
          columnNumber: 15
        }, this),
        /* @__PURE__ */ jsxDEV(StepFieldset, { children: /* @__PURE__ */ jsxDEV(
          PhoneFieldContainer,
          {
            prefix: /* @__PURE__ */ jsxDEV(
              TextField,
              {
                ...registerPhoneCountryCode(
                  methods,
                  "telephoneCountryCode"
                ),
                autoComplete: "mobile tel-country-code"
              },
              "telephoneCountryCode",
              false,
              {
                fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
                lineNumber: 317,
                columnNumber: 19
              },
              this
            ),
            phone: /* @__PURE__ */ jsxDEV(
              TextField,
              {
                ...registerMobilePhone(methods, "telephone", {
                  countryCodeName: "telephoneCountryCode"
                }),
                autoComplete: "mobile tel-national"
              },
              "telephone",
              false,
              {
                fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
                lineNumber: 327,
                columnNumber: 19
              },
              this
            ),
            checkbox: /* @__PURE__ */ jsxDEV(
              FormControlLabel,
              {
                type: "checkbox",
                label: /* @__PURE__ */ jsxDEV(Fragment, { children: "In caso di necessità, acconsento a ricevere supporto telefonico a questo numero per completare l'attivazione. In alternativa, contatterò direttamente io il servizio clienti se dovessi aver bisogno di supporto." }, void 0, false, {
                  fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
                  lineNumber: 339,
                  columnNumber: 21
                }, this),
                variant: "caption1",
                inputProps: { ...register("consentPhoneContact") }
              },
              void 0,
              false,
              {
                fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
                lineNumber: 336,
                columnNumber: 19
              },
              this
            )
          },
          void 0,
          false,
          {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
            lineNumber: 315,
            columnNumber: 17
          },
          this
        ) }, void 0, false, {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
          lineNumber: 314,
          columnNumber: 15
        }, this),
        /* @__PURE__ */ jsxDEV(
          TextField,
          {
            ...registerEmail(methods, "email"),
            disabled: alertEmailChanged
          },
          void 0,
          false,
          {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
            lineNumber: 354,
            columnNumber: 15
          },
          this
        ),
        alertEmailChanged && /* @__PURE__ */ jsxDEV(EmailChangedAlert, {}, void 0, false, {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
          lineNumber: 358,
          columnNumber: 37
        }, this),
        /* @__PURE__ */ jsxDEV(ContactAlert, {}, void 0, false, {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
          lineNumber: 359,
          columnNumber: 15
        }, this),
        ENABLE_PEC_SDI && /* @__PURE__ */ jsxDEV(
          TextField,
          {
            ...register("pec", emailRegisterOptions),
            label: "PEC",
            placeholder: "Inserisci qui la tua PEC",
            type: "email",
            fullWidth: true,
            error: !!errors.pec,
            helperText: !!errors.pec && errors.pec.message
          },
          void 0,
          false,
          {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
            lineNumber: 362,
            columnNumber: 15
          },
          this
        ),
        ENABLE_PEC_SDI && /* @__PURE__ */ jsxDEV(
          TextField,
          {
            ...register("sdi", sdiRegisterOptions),
            label: "SDI",
            placeholder: "Inserisci qui il tua codice SDI",
            type: "text",
            fullWidth: true,
            error: !!errors.sdi,
            helperText: !!errors.sdi && errors.sdi.message
          },
          void 0,
          false,
          {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
            lineNumber: 374,
            columnNumber: 15
          },
          this
        )
      ] }, void 0, true, {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
        lineNumber: 284,
        columnNumber: 13
      }, this),
      /* @__PURE__ */ jsxDEV(StepContainer, { children: [
        /* @__PURE__ */ jsxDEV(
          StepTitle,
          {
            title2: "Inserisci partita IVA e codice fiscale",
            subtitle: "Inserisci i dati presenti nell’ultima bolletta."
          },
          void 0,
          false,
          {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
            lineNumber: 388,
            columnNumber: 15
          },
          this
        ),
        /* @__PURE__ */ jsxDEV(StepFieldset, { children: [
          /* @__PURE__ */ jsxDEV(TextField, { ...registerVatNumber(methods, "vatNumber") }, void 0, false, {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
            lineNumber: 393,
            columnNumber: 17
          }, this),
          /* @__PURE__ */ jsxDEV(FormError, { name: "vatNumber" }, void 0, false, {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
            lineNumber: 394,
            columnNumber: 17
          }, this),
          /* @__PURE__ */ jsxDEV(
            FormControlLabel,
            {
              type: "checkbox",
              label: /* @__PURE__ */ jsxDEV(Fragment, { children: "Il codice fiscale della società è diverso dalla partita IVA" }, void 0, false, {
                fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
                lineNumber: 398,
                columnNumber: 19
              }, this),
              variant: "caption1",
              inputProps: { ...register("vatNotEqualsTaxId") }
            },
            void 0,
            false,
            {
              fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
              lineNumber: 395,
              columnNumber: 17
            },
            this
          ),
          vatNotEqualsTaxId && /* @__PURE__ */ jsxDEV(TextField, { ...registerBusinessTaxId(methods, "taxId") }, void 0, false, {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
            lineNumber: 408,
            columnNumber: 17
          }, this)
        ] }, void 0, true, {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
          lineNumber: 392,
          columnNumber: 15
        }, this)
      ] }, void 0, true, {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
        lineNumber: 387,
        columnNumber: 13
      }, this)
    ] }, void 0, true, {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
      lineNumber: 243,
      columnNumber: 11
    }, this) }, void 0, false, {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
      lineNumber: 242,
      columnNumber: 9
    }, this) }, void 0, false, {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
      lineNumber: 241,
      columnNumber: 7
    }, this)
  ] }, void 0, true, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx",
    lineNumber: 238,
    columnNumber: 5
  }, this);
}
_s(NewBusinessStep, "o1Ni5CQ8wArI00p5F4dHu24BuHk=", false, function() {
  return [useTrackingWeborderUnicoPage, useEngine, useId, useForm, useAtomValue, useNewCustomerModals, useFormErrors, useAtomCallback, useAtomValue];
});
_c2 = NewBusinessStep;
var _c, _c2;
$RefreshReg$(_c, "AddressBusinessStepWrapped");
$RefreshReg$(_c2, "NewBusinessStep");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,