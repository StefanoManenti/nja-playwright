import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/engine/src/lib/engine.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/engine/src/lib/engine.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$(), _s2 = $RefreshSig$();
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import __vite__cjsImport3_react from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react.js?v=0189a8d1"; const createContext = __vite__cjsImport3_react["createContext"]; const useCallback = __vite__cjsImport3_react["useCallback"]; const useEffect = __vite__cjsImport3_react["useEffect"]; const useMemo = __vite__cjsImport3_react["useMemo"]




;
import { useStepsCollection } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/engine/src/lib/useStepsCollection.ts";
const defaultState = {
  currentStep: void 0,
  progress: 0,
  lastDirection: 1,
  // eslint-disable-next-line @typescript-eslint/no-empty-function
  prev: () => {
  },
  // eslint-disable-next-line @typescript-eslint/no-empty-function
  next: () => {
  },
  // eslint-disable-next-line @typescript-eslint/no-empty-function
  edit: () => {
  },
  isPending: false
};
export const EngineContext = createContext(defaultState);
export default function Engine(props) {
  _s();
  const {
    isPending,
    progress,
    currentStep,
    lastDirection,
    goToNextStep,
    goToStepThatProvides,
    startSubflow,
    error,
    clearError
  } = useStepsCollection(props.stepsCollectionsAtoms);
  const next = useCallback(() => {
    goToNextStep(1);
  }, [goToNextStep]);
  const prev = useCallback(() => {
    goToNextStep(-1);
  }, [goToNextStep]);
  const contextValue = useMemo(
    () => {
      return {
        progress,
        currentStep,
        lastDirection,
        isPending,
        next,
        prev,
        edit: goToStepThatProvides,
        startSubflow
      };
    },
    [
      progress,
      currentStep,
      lastDirection,
      isPending,
      next,
      prev,
      goToStepThatProvides,
      startSubflow
    ]
  );
  useEffect(() => {
    window.scrollTo({ top: 0, left: 0, behavior: "instant" });
  }, [currentStep]);
  const element = useStepComponent(currentStep);
  if (props.renderFallback && error) {
    return props.renderFallback({ error, retry: clearError, retryable: true });
  }
  return /* @__PURE__ */ jsxDEV(EngineContext.Provider, { value: contextValue, children: [
    props.extra,
    element || false
  ] }, void 0, true, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/engine/src/lib/engine.tsx",
    lineNumber: 105,
    columnNumber: 5
  }, this);
}
_s(Engine, "2LwtgeFpp7WejwnkkZWu8IrQeXM=", false, function() {
  return [useStepsCollection, useStepComponent];
});
_c = Engine;
function useStepComponent(currentStep) {
  _s2();
  return useMemo(() => {
    if (currentStep == null) {
      return;
    }
    return currentStep.render();
  }, [currentStep]);
}
_s2(useStepComponent, "nwk+m61qLgjDVUp4IGV/072DDN4=");
var _c;
$RefreshReg$(_c, "Engine");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/engine/src/lib/engine.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,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c0NvbGxlY3Rpb24iLCJkZWZhdWx0U3RhdGUiLCJjdXJyZW50U3RlcCIsInVuZGVmaW5lZCIsInByb2dyZXNzIiwibGFzdERpcmVjdGlvbiIsInByZXYiLCJuZXh0IiwiZWRpdCIsImlzUGVuZGluZyIsIkVuZ2luZUNvbnRleHQiLCJFbmdpbmUiLCJwcm9wcyIsIl9zIiwiZ29Ub05leHRTdGVwIiwiZ29Ub1N0ZXBUaGF0UHJvdmlkZXMiLCJzdGFydFN1YmZsb3ciLCJlcnJvciIsImNsZWFyRXJyb3IiLCJzdGVwc0NvbGxlY3Rpb25zQXRvbXMiLCJjb250ZXh0VmFsdWUiLCJ3aW5kb3ciLCJzY3JvbGxUbyIsInRvcCIsImxlZnQiLCJiZWhhdmlvciIsImVsZW1lbnQiLCJ1c2VTdGVwQ29tcG9uZW50IiwicmVuZGVyRmFsbGJhY2siLCJyZXRyeSIsInJldHJ5YWJsZSIsImV4dHJhIiwiX2MiLCJfczIiLCJyZW5kZXIiLCIkUmVmcmVzaFJlZyQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiZW5naW5lLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHtcclxuICBjcmVhdGVDb250ZXh0LFxyXG4gIFJlYWN0Tm9kZSxcclxuICB1c2VDYWxsYmFjayxcclxuICB1c2VFZmZlY3QsXHJcbiAgdXNlTWVtbyxcclxufSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IFN0ZXBzQ29sbGVjdGlvbkF0b21zIH0gZnJvbSAnLi9nZXRTdGVwc0NvbGxlY3Rpb25BdG9tcyc7XHJcbmltcG9ydCB7IERhdGFLZXksIFN0ZXAgfSBmcm9tICcuL1N0ZXAnO1xyXG5pbXBvcnQgeyB1c2VTdGVwc0NvbGxlY3Rpb24gfSBmcm9tICcuL3VzZVN0ZXBzQ29sbGVjdGlvbic7XHJcblxyXG50eXBlIFByb3BzID0ge1xyXG4gIHN0ZXBzQ29sbGVjdGlvbnNBdG9tczogU3RlcHNDb2xsZWN0aW9uQXRvbXM7XHJcbiAgZXh0cmE/OiBSZWFjdE5vZGU7XHJcbiAgcmVuZGVyRmFsbGJhY2s/OiAocHJvcHM6IHtcclxuICAgIGVycm9yOiB1bmtub3duO1xyXG4gICAgcmV0cnk6ICgpID0+IHZvaWQ7XHJcbiAgICByZXRyeWFibGU6IGJvb2xlYW47XHJcbiAgfSkgPT4gUmVhY3ROb2RlO1xyXG59O1xyXG5cclxudHlwZSBTdGF0ZSA9IHtcclxuICBjdXJyZW50U3RlcDogU3RlcCB8IHVuZGVmaW5lZDtcclxuICBwcm9ncmVzczogbnVtYmVyO1xyXG4gIGxhc3REaXJlY3Rpb246IDEgfCAtMTtcclxuXHJcbiAgcHJldjogKCkgPT4gdm9pZDtcclxuICBuZXh0OiAoKSA9PiB2b2lkO1xyXG4gIGVkaXQ6IChkYXRhOiBEYXRhS2V5KSA9PiB2b2lkO1xyXG5cclxuICBpc1BlbmRpbmc6IGJvb2xlYW47XHJcbn07XHJcblxyXG5jb25zdCBkZWZhdWx0U3RhdGU6IFN0YXRlID0ge1xyXG4gIGN1cnJlbnRTdGVwOiB1bmRlZmluZWQsXHJcbiAgcHJvZ3Jlc3M6IDAsXHJcbiAgbGFzdERpcmVjdGlvbjogMSxcclxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWZ1bmN0aW9uXHJcbiAgcHJldjogKCkgPT4ge30sXHJcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1mdW5jdGlvblxyXG4gIG5leHQ6ICgpID0+IHt9LFxyXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktZnVuY3Rpb25cclxuICBlZGl0OiAoKSA9PiB7fSxcclxuICBpc1BlbmRpbmc6IGZhbHNlLFxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IEVuZ2luZUNvbnRleHQgPSBjcmVhdGVDb250ZXh0PFN0YXRlPihkZWZhdWx0U3RhdGUpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRW5naW5lKHByb3BzOiBQcm9wcykge1xyXG4gIGNvbnN0IHtcclxuICAgIGlzUGVuZGluZyxcclxuICAgIHByb2dyZXNzLFxyXG4gICAgY3VycmVudFN0ZXAsXHJcbiAgICBsYXN0RGlyZWN0aW9uLFxyXG4gICAgZ29Ub05leHRTdGVwLFxyXG4gICAgZ29Ub1N0ZXBUaGF0UHJvdmlkZXMsXHJcbiAgICBzdGFydFN1YmZsb3csXHJcbiAgICBlcnJvcixcclxuICAgIGNsZWFyRXJyb3IsXHJcbiAgfSA9IHVzZVN0ZXBzQ29sbGVjdGlvbihwcm9wcy5zdGVwc0NvbGxlY3Rpb25zQXRvbXMpO1xyXG5cclxuICBjb25zdCBuZXh0ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgZ29Ub05leHRTdGVwKDEpO1xyXG4gIH0sIFtnb1RvTmV4dFN0ZXBdKTtcclxuXHJcbiAgY29uc3QgcHJldiA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIGdvVG9OZXh0U3RlcCgtMSk7XHJcbiAgfSwgW2dvVG9OZXh0U3RlcF0pO1xyXG5cclxuICBjb25zdCBjb250ZXh0VmFsdWUgPSB1c2VNZW1vKCgpID0+IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHByb2dyZXNzLFxyXG4gICAgICBjdXJyZW50U3RlcCxcclxuICAgICAgbGFzdERpcmVjdGlvbixcclxuICAgICAgaXNQZW5kaW5nLFxyXG4gICAgICBuZXh0LFxyXG4gICAgICBwcmV2LFxyXG4gICAgICBlZGl0OiBnb1RvU3RlcFRoYXRQcm92aWRlcyxcclxuICAgICAgc3RhcnRTdWJmbG93OiBzdGFydFN1YmZsb3csXHJcbiAgICB9IGFzIFN0YXRlO1xyXG4gIH0sIFtcclxuICAgIHByb2dyZXNzLFxyXG4gICAgY3VycmVudFN0ZXAsXHJcbiAgICBsYXN0RGlyZWN0aW9uLFxyXG4gICAgaXNQZW5kaW5nLFxyXG4gICAgbmV4dCxcclxuICAgIHByZXYsXHJcbiAgICBnb1RvU3RlcFRoYXRQcm92aWRlcyxcclxuICAgIHN0YXJ0U3ViZmxvdyxcclxuICBdKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHdpbmRvdy5zY3JvbGxUbyh7IHRvcDogMCwgbGVmdDogMCwgYmVoYXZpb3I6ICdpbnN0YW50JyB9KTtcclxuICB9LCBbY3VycmVudFN0ZXBdKTtcclxuXHJcbiAgY29uc3QgZWxlbWVudCA9IHVzZVN0ZXBDb21wb25lbnQoY3VycmVudFN0ZXApO1xyXG5cclxuICAvLyB1c2VTdGVwc1ByZWxvYWRlcihzdGVwcyk7XHJcblxyXG4gIGlmIChwcm9wcy5yZW5kZXJGYWxsYmFjayAmJiBlcnJvcikge1xyXG4gICAgcmV0dXJuIHByb3BzLnJlbmRlckZhbGxiYWNrKHsgZXJyb3IsIHJldHJ5OiBjbGVhckVycm9yLCByZXRyeWFibGU6IHRydWUgfSk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPEVuZ2luZUNvbnRleHQuUHJvdmlkZXIgdmFsdWU9e2NvbnRleHRWYWx1ZX0+XHJcbiAgICAgIHtwcm9wcy5leHRyYX1cclxuICAgICAge2VsZW1lbnQgfHwgZmFsc2V9XHJcbiAgICA8L0VuZ2luZUNvbnRleHQuUHJvdmlkZXI+XHJcbiAgKTtcclxufVxyXG5cclxuZnVuY3Rpb24gdXNlU3RlcENvbXBvbmVudChjdXJyZW50U3RlcDogU3RlcCB8IHVuZGVmaW5lZCkge1xyXG4gIHJldHVybiB1c2VNZW1vKCgpID0+IHtcclxuICAgIGlmIChjdXJyZW50U3RlcCA9PSBudWxsKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gY3VycmVudFN0ZXAucmVuZGVyKCk7XHJcbiAgfSwgW2N1cnJlbnRTdGVwXSk7XHJcbn1cclxuIl0sImZpbGUiOiJDOi9Vc2Vycy9haW50cm9uYS9EZXNrdG9wL0FwcC9yZWFjdC9uYWovbGlicy9lbmdpbmUvc3JjL2xpYi9lbmdpbmUudHN4In0=