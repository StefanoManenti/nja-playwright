import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/tracking-app/src/lib/cart-state.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/tracking-app/src/lib/cart-state.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$(), _s2 = $RefreshSig$();
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import { useTracking } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/tracking-react/src/index.ts";
import __vite__cjsImport4_react from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react.js?v=0189a8d1"; const createContext = __vite__cjsImport4_react["createContext"]; const useCallback = __vite__cjsImport4_react["useCallback"]; const useContext = __vite__cjsImport4_react["useContext"]; const useEffect = __vite__cjsImport4_react["useEffect"]; const useMemo = __vite__cjsImport4_react["useMemo"]; const useState = __vite__cjsImport4_react["useState"]






;
import { useApp, useAppEvent } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/index.ts";
const CartContext = createContext(void 0);
export function CartStateProvider({ children }) {
  _s();
  const [cartAvailable, setCartAvailable] = useState(true);
  const [cartShown, setCartShown] = useState(false);
  const tracking = useTracking();
  const hideCart = useCallback(() => {
    setCartShown(false);
    window.scrollTo(0, 0);
  }, [setCartShown]);
  const showCart = useCallback(() => {
    tracking.push({
      event: "cart_step",
      step_funnel: "riepilogo",
      selezione: "mobile_riepilogo"
    });
    setCartShown(true);
    window.scrollTo(0, 0);
  }, [setCartShown, tracking]);
  useAppEvent(
    "setRecapOverlay",
    useCallback(
      function(args) {
        switch (args) {
          case "open":
            showCart();
            break;
          case "closed":
            hideCart();
            break;
        }
      },
      [hideCart, showCart]
    )
  );
  const cartButton = useMemo(() => {
    return cartShown ? "close" : cartAvailable ? "open" : "hidden";
  }, [cartAvailable, cartShown]);
  const app = useApp();
  useEffect(() => {
    app?.setRecapButton(cartButton);
  }, [cartButton, app]);
  const value = useMemo(
    () => ({ cartShown, showCart, hideCart, cartButton, setCartAvailable }),
    [cartShown, hideCart, showCart, cartButton, setCartAvailable]
  );
  return /* @__PURE__ */ jsxDEV(CartContext.Provider, { value, children }, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/tracking-app/src/lib/cart-state.tsx",
    lineNumber: 76,
    columnNumber: 10
  }, this);
}
_s(CartStateProvider, "oiYYqUKqSMsvP5TM8qfphOGgtpE=", false, function() {
  return [useTracking, useAppEvent, useApp];
});
_c = CartStateProvider;
export function useCartState() {
  _s2();
  return useContext(CartContext);
}
_s2(useCartState, "gDsCjeeItUuvgOWf1v4qoK9RF6k=");
var _c;
$RefreshReg$(_c, "CartStateProvider");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/tracking-app/src/lib/cart-state.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBMkVTOzs7Ozs7d0RBM0VtQjtBQUFBLGNBQXdCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNwRDtBQUFBLEVBQ0VBO0FBQUFBLEVBRUFDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDO0FBQUFBLE9BQ0s7QUFDUCxTQUFTQyxRQUFRQyxtQkFBbUI7QUFVcEMsTUFBTUMsY0FBY1IsY0FBZ0NTLE1BQWdCO0FBRTdELGdCQUFTQyxrQkFBa0IsRUFBRUMsU0FBa0MsR0FBRztBQUFBQyxLQUFBO0FBQ3ZFLFFBQU0sQ0FBQ0MsZUFBZUMsZ0JBQWdCLElBQUlULFNBQVMsSUFBSTtBQUN2RCxRQUFNLENBQUNVLFdBQVdDLFlBQVksSUFBSVgsU0FBUyxLQUFLO0FBRWhELFFBQU1ZLFdBQVdDLFlBQVk7QUFFN0IsUUFBTUMsV0FBV2xCLFlBQVksTUFBTTtBQUNqQ2UsaUJBQWEsS0FBSztBQUVsQkksV0FBT0MsU0FBUyxHQUFHLENBQUM7QUFBQSxFQUN0QixHQUFHLENBQUNMLFlBQVksQ0FBQztBQUVqQixRQUFNTSxXQUFXckIsWUFBWSxNQUFNO0FBQ2pDZ0IsYUFBU00sS0FBSztBQUFBLE1BQ1pDLE9BQU87QUFBQSxNQUNQQyxhQUFhO0FBQUEsTUFDYkMsV0FBVztBQUFBLElBQ2IsQ0FBQztBQUNEVixpQkFBYSxJQUFJO0FBQ2pCSSxXQUFPQyxTQUFTLEdBQUcsQ0FBQztBQUFBLEVBQ3RCLEdBQUcsQ0FBQ0wsY0FBY0MsUUFBUSxDQUFDO0FBRTNCVjtBQUFBQSxJQUNFO0FBQUEsSUFDQU47QUFBQUEsTUFDRSxTQUFVMEIsTUFBTTtBQUNkLGdCQUFRQSxNQUFJO0FBQUEsVUFDVixLQUFLO0FBQ0hMLHFCQUFTO0FBQ1Q7QUFBQSxVQUNGLEtBQUs7QUFDSEgscUJBQVM7QUFDVDtBQUFBLFFBQ0o7QUFBQSxNQUNGO0FBQUEsTUFDQSxDQUFDQSxVQUFVRyxRQUFRO0FBQUEsSUFDckI7QUFBQSxFQUNGO0FBRUEsUUFBTU0sYUFBYXhCLFFBQVEsTUFBTTtBQUMvQixXQUFPVyxZQUFZLFVBQVVGLGdCQUFnQixTQUFTO0FBQUEsRUFDeEQsR0FBRyxDQUFDQSxlQUFlRSxTQUFTLENBQUM7QUFFN0IsUUFBTWMsTUFBTXZCLE9BQU87QUFDbkJILFlBQVUsTUFBTTtBQUNkMEIsU0FBS0MsZUFBZUYsVUFBVTtBQUFBLEVBQ2hDLEdBQUcsQ0FBQ0EsWUFBWUMsR0FBRyxDQUFDO0FBRXBCLFFBQU1FLFFBQTBCM0I7QUFBQUEsSUFDOUIsT0FBTyxFQUFFVyxXQUFXTyxVQUFVSCxVQUFVUyxZQUFZZCxpQkFBaUI7QUFBQSxJQUNyRSxDQUFDQyxXQUFXSSxVQUFVRyxVQUFVTSxZQUFZZCxnQkFBZ0I7QUFBQSxFQUM5RDtBQUVBLFNBQU8sdUJBQUMsWUFBWSxVQUFaLEVBQXFCLE9BQWVILFlBQXJDO0FBQUE7QUFBQTtBQUFBO0FBQUEsU0FBOEM7QUFDdkQ7QUFBQ0MsR0F0RGVGLG1CQUFpQjtBQUFBLFVBSWRRLGFBa0JqQlgsYUFxQllELE1BQU07QUFBQTtBQUFBMEIsS0EzQ0p0QjtBQXdEVCxnQkFBU3VCLGVBQWU7QUFBQUMsTUFBQTtBQUM3QixTQUFPaEMsV0FBV00sV0FBVztBQUMvQjtBQUFDMEIsSUFGZUQsY0FBWTtBQUFBLElBQUFEO0FBQUFHLGFBQUFILElBQUEiLCJuYW1lcyI6WyJjcmVhdGVDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlTWVtbyIsInVzZVN0YXRlIiwidXNlQXBwIiwidXNlQXBwRXZlbnQiLCJDYXJ0Q29udGV4dCIsInVuZGVmaW5lZCIsIkNhcnRTdGF0ZVByb3ZpZGVyIiwiY2hpbGRyZW4iLCJfcyIsImNhcnRBdmFpbGFibGUiLCJzZXRDYXJ0QXZhaWxhYmxlIiwiY2FydFNob3duIiwic2V0Q2FydFNob3duIiwidHJhY2tpbmciLCJ1c2VUcmFja2luZyIsImhpZGVDYXJ0Iiwid2luZG93Iiwic2Nyb2xsVG8iLCJzaG93Q2FydCIsInB1c2giLCJldmVudCIsInN0ZXBfZnVubmVsIiwic2VsZXppb25lIiwiYXJncyIsImNhcnRCdXR0b24iLCJhcHAiLCJzZXRSZWNhcEJ1dHRvbiIsInZhbHVlIiwiX2MiLCJ1c2VDYXJ0U3RhdGUiLCJfczIiLCIkUmVmcmVzaFJlZyQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiY2FydC1zdGF0ZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlVHJhY2tpbmcgfSBmcm9tICdAbmFqLXdvL3RyYWNraW5nLXJlYWN0JztcclxuaW1wb3J0IHtcclxuICBjcmVhdGVDb250ZXh0LFxyXG4gIFJlYWN0Tm9kZSxcclxuICB1c2VDYWxsYmFjayxcclxuICB1c2VDb250ZXh0LFxyXG4gIHVzZUVmZmVjdCxcclxuICB1c2VNZW1vLFxyXG4gIHVzZVN0YXRlLFxyXG59IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlQXBwLCB1c2VBcHBFdmVudCB9IGZyb20gJ0BuYWotd28vdXRpbCc7XHJcblxyXG50eXBlIENhcnRDb250ZXh0VmFsdWUgPSB7XHJcbiAgY2FydFNob3duOiBib29sZWFuO1xyXG4gIGhpZGVDYXJ0OiAoKSA9PiB2b2lkO1xyXG4gIHNob3dDYXJ0OiAoKSA9PiB2b2lkO1xyXG4gIGNhcnRCdXR0b246ICdvcGVuJyB8ICdjbG9zZScgfCAnaGlkZGVuJztcclxuICBzZXRDYXJ0QXZhaWxhYmxlOiAoYXZhaWxhYmxlOiBib29sZWFuKSA9PiB2b2lkO1xyXG59O1xyXG5cclxuY29uc3QgQ2FydENvbnRleHQgPSBjcmVhdGVDb250ZXh0PENhcnRDb250ZXh0VmFsdWU+KHVuZGVmaW5lZCBhcyBhbnkpO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIENhcnRTdGF0ZVByb3ZpZGVyKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3ROb2RlIH0pIHtcclxuICBjb25zdCBbY2FydEF2YWlsYWJsZSwgc2V0Q2FydEF2YWlsYWJsZV0gPSB1c2VTdGF0ZSh0cnVlKTtcclxuICBjb25zdCBbY2FydFNob3duLCBzZXRDYXJ0U2hvd25dID0gdXNlU3RhdGUoZmFsc2UpO1xyXG5cclxuICBjb25zdCB0cmFja2luZyA9IHVzZVRyYWNraW5nKCk7XHJcblxyXG4gIGNvbnN0IGhpZGVDYXJ0ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgc2V0Q2FydFNob3duKGZhbHNlKTtcclxuICAgIC8vIFRPRE8gc2Nyb2xsIG9uIHByZXZpb3VzIHBvc2l0aW9uXHJcbiAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgMCk7XHJcbiAgfSwgW3NldENhcnRTaG93bl0pO1xyXG5cclxuICBjb25zdCBzaG93Q2FydCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIHRyYWNraW5nLnB1c2goe1xyXG4gICAgICBldmVudDogJ2NhcnRfc3RlcCcsXHJcbiAgICAgIHN0ZXBfZnVubmVsOiAncmllcGlsb2dvJyxcclxuICAgICAgc2VsZXppb25lOiAnbW9iaWxlX3JpZXBpbG9nbycsXHJcbiAgICB9KTtcclxuICAgIHNldENhcnRTaG93bih0cnVlKTtcclxuICAgIHdpbmRvdy5zY3JvbGxUbygwLCAwKTtcclxuICB9LCBbc2V0Q2FydFNob3duLCB0cmFja2luZ10pO1xyXG5cclxuICB1c2VBcHBFdmVudChcclxuICAgICdzZXRSZWNhcE92ZXJsYXknLFxyXG4gICAgdXNlQ2FsbGJhY2soXHJcbiAgICAgIGZ1bmN0aW9uIChhcmdzKSB7XHJcbiAgICAgICAgc3dpdGNoIChhcmdzKSB7XHJcbiAgICAgICAgICBjYXNlICdvcGVuJzpcclxuICAgICAgICAgICAgc2hvd0NhcnQoKTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICBjYXNlICdjbG9zZWQnOlxyXG4gICAgICAgICAgICBoaWRlQ2FydCgpO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIFtoaWRlQ2FydCwgc2hvd0NhcnRdXHJcbiAgICApXHJcbiAgKTtcclxuXHJcbiAgY29uc3QgY2FydEJ1dHRvbiA9IHVzZU1lbW8oKCkgPT4ge1xyXG4gICAgcmV0dXJuIGNhcnRTaG93biA/ICdjbG9zZScgOiBjYXJ0QXZhaWxhYmxlID8gJ29wZW4nIDogJ2hpZGRlbic7XHJcbiAgfSwgW2NhcnRBdmFpbGFibGUsIGNhcnRTaG93bl0pO1xyXG5cclxuICBjb25zdCBhcHAgPSB1c2VBcHAoKTtcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgYXBwPy5zZXRSZWNhcEJ1dHRvbihjYXJ0QnV0dG9uKTtcclxuICB9LCBbY2FydEJ1dHRvbiwgYXBwXSk7XHJcblxyXG4gIGNvbnN0IHZhbHVlOiBDYXJ0Q29udGV4dFZhbHVlID0gdXNlTWVtbyhcclxuICAgICgpID0+ICh7IGNhcnRTaG93biwgc2hvd0NhcnQsIGhpZGVDYXJ0LCBjYXJ0QnV0dG9uLCBzZXRDYXJ0QXZhaWxhYmxlIH0pLFxyXG4gICAgW2NhcnRTaG93biwgaGlkZUNhcnQsIHNob3dDYXJ0LCBjYXJ0QnV0dG9uLCBzZXRDYXJ0QXZhaWxhYmxlXVxyXG4gICk7XHJcblxyXG4gIHJldHVybiA8Q2FydENvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3ZhbHVlfT57Y2hpbGRyZW59PC9DYXJ0Q29udGV4dC5Qcm92aWRlcj47XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VDYXJ0U3RhdGUoKSB7XHJcbiAgcmV0dXJuIHVzZUNvbnRleHQoQ2FydENvbnRleHQpO1xyXG59XHJcbiJdLCJmaWxlIjoiQzovVXNlcnMvYWludHJvbmEvRGVza3RvcC9BcHAvcmVhY3QvbmFqL2xpYnMvdHJhY2tpbmctYXBwL3NyYy9saWIvY2FydC1zdGF0ZS50c3gifQ==