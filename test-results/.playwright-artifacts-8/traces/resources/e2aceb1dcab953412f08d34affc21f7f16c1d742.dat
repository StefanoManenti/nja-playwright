globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import {
  operativeModeEnabled$,
  workingOnBroadbandAtom
} from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/index.ts";
import { Step, StepPriority } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/engine/src/index.ts";
import { StepDependencies } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/StepDependencies.ts";
import StepErrorBoundary from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/StepErrorBoundary.tsx";
class Contract extends Step {
  constructor() {
    super(...arguments);
    this.priority = new StepPriority(90);
    this.lazy = () => import("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/contracts/ContractStep.tsx");
    this.WrapperComponent = StepErrorBoundary;
  }
  toString() {
    return "contract";
  }
  depends() {
    return [];
  }
  provides() {
    return [StepDependencies.CONTRACT];
  }
  isInFlux(get) {
    if (get(workingOnBroadbandAtom)) {
      return true;
    }
    return get(operativeModeEnabled$);
  }
  toDo(get) {
    return false;
  }
}
export const contract = new Contract();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQUEsRUFDRUE7QUFBQUEsRUFDQUM7QUFBQUEsT0FDSztBQUNQLFNBQVNDLE1BQU1DLG9CQUFvQjtBQUVuQyxTQUFTQyx3QkFBd0I7QUFDakMsT0FBT0MsdUJBQXVCO0FBRTlCLE1BQU1DLGlCQUFpQkosS0FBSztBQUFBLEVBQTVCO0FBQUE7QUFDRUssb0JBQVcsSUFBSUosYUFBYSxFQUFFO0FBRTlCSyxnQkFBT0EsTUFBTSxPQUFPLGdCQUFnQjtBQUNwQ0MsNEJBQW1CSjtBQUFBQTtBQUFBQSxFQUVuQkssV0FBVztBQUNULFdBQU87QUFBQSxFQUNUO0FBQUEsRUFFQUMsVUFBVTtBQUNSLFdBQU87QUFBQSxFQUNUO0FBQUEsRUFFQUMsV0FBVztBQUNULFdBQU8sQ0FBQ1IsaUJBQWlCUyxRQUFRO0FBQUEsRUFDbkM7QUFBQSxFQUVVQyxTQUFTQyxLQUFhO0FBQzlCLFFBQUlBLElBQUlkLHNCQUFzQixHQUFHO0FBQy9CLGFBQU87QUFBQSxJQUNUO0FBQ0EsV0FBT2MsSUFBSWYscUJBQXFCO0FBQUEsRUFDbEM7QUFBQSxFQUVVZ0IsS0FBS0QsS0FBYTtBQUUxQixXQUFPO0FBQUEsRUFDVDtBQUNGO0FBRU8sYUFBTUUsV0FBVyxJQUFJWCxTQUFTIiwibmFtZXMiOlsib3BlcmF0aXZlTW9kZUVuYWJsZWQkIiwid29ya2luZ09uQnJvYWRiYW5kQXRvbSIsIlN0ZXAiLCJTdGVwUHJpb3JpdHkiLCJTdGVwRGVwZW5kZW5jaWVzIiwiU3RlcEVycm9yQm91bmRhcnkiLCJDb250cmFjdCIsInByaW9yaXR5IiwibGF6eSIsIldyYXBwZXJDb21wb25lbnQiLCJ0b1N0cmluZyIsImRlcGVuZHMiLCJwcm92aWRlcyIsIkNPTlRSQUNUIiwiaXNJbkZsdXgiLCJnZXQiLCJ0b0RvIiwiY29udHJhY3QiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiY29udHJhY3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgb3BlcmF0aXZlTW9kZUVuYWJsZWQkLFxyXG4gIHdvcmtpbmdPbkJyb2FkYmFuZEF0b20sXHJcbn0gZnJvbSAnQG5hai13by9kYXRhLWFjY2Vzcyc7XHJcbmltcG9ydCB7IFN0ZXAsIFN0ZXBQcmlvcml0eSB9IGZyb20gJ0BuYWotd28vZW5naW5lJztcclxuaW1wb3J0IHsgR2V0dGVyIH0gZnJvbSAnam90YWkvdmFuaWxsYS90eXBlVXRpbHMnO1xyXG5pbXBvcnQgeyBTdGVwRGVwZW5kZW5jaWVzIH0gZnJvbSAnLi4vU3RlcERlcGVuZGVuY2llcyc7XHJcbmltcG9ydCBTdGVwRXJyb3JCb3VuZGFyeSBmcm9tICcuLi9TdGVwRXJyb3JCb3VuZGFyeSc7XHJcblxyXG5jbGFzcyBDb250cmFjdCBleHRlbmRzIFN0ZXAge1xyXG4gIHByaW9yaXR5ID0gbmV3IFN0ZXBQcmlvcml0eSg5MCk7XHJcblxyXG4gIGxhenkgPSAoKSA9PiBpbXBvcnQoJy4vQ29udHJhY3RTdGVwJyk7XHJcbiAgV3JhcHBlckNvbXBvbmVudCA9IFN0ZXBFcnJvckJvdW5kYXJ5O1xyXG5cclxuICB0b1N0cmluZygpIHtcclxuICAgIHJldHVybiAnY29udHJhY3QnO1xyXG4gIH1cclxuXHJcbiAgZGVwZW5kcygpIHtcclxuICAgIHJldHVybiBbXTtcclxuICB9XHJcblxyXG4gIHByb3ZpZGVzKCkge1xyXG4gICAgcmV0dXJuIFtTdGVwRGVwZW5kZW5jaWVzLkNPTlRSQUNUXTtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBpc0luRmx1eChnZXQ6IEdldHRlcikge1xyXG4gICAgaWYgKGdldCh3b3JraW5nT25Ccm9hZGJhbmRBdG9tKSkge1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIHJldHVybiBnZXQob3BlcmF0aXZlTW9kZUVuYWJsZWQkKTtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCB0b0RvKGdldDogR2V0dGVyKSB7XHJcbiAgICAvLyBUT0RPIGRhIGZhcmUgc2UgaSBjb250cmF0dGkgbm9uIHNvbm8gc3RhdGkgYWNjZXR0YXRpXHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgY29udHJhY3QgPSBuZXcgQ29udHJhY3QoKTtcclxuIl0sImZpbGUiOiJDOi9Vc2Vycy9haW50cm9uYS9EZXNrdG9wL0FwcC9yZWFjdC9uYWovbGlicy9zdGVwcy9zcmMvbGliL2NvbnRyYWN0cy9jb250cmFjdC50c3gifQ==