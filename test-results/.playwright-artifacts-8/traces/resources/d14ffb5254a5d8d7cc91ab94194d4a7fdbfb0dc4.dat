globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import {
  customerSegmentAtom,
  OperativeMode,
  operativeModeAtom,
  operativeModeEnabled$,
  Segment,
  workingOnBroadbandAtom,
  workingOnPanelStandaloneAtom
} from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/index.ts";
import { Step, StepPriority } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/engine/src/index.ts";
import StepErrorBoundary from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/StepErrorBoundary.tsx";
class NewBusiness extends Step {
  constructor() {
    super(...arguments);
    this.priority = new StepPriority(11);
    this.lazy = () => import("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/NewBusinessStep.tsx");
    this.WrapperComponent = StepErrorBoundary;
  }
  toString() {
    return "address-business";
  }
  async isInFlux(get) {
    const operativeMode = get(operativeModeAtom);
    return operativeMode !== OperativeMode.CHANGE_OFFER && !get(workingOnPanelStandaloneAtom) && (get(workingOnBroadbandAtom) || get(operativeModeEnabled$)) && await get(customerSegmentAtom) === Segment.SMALL;
  }
  depends() {
    return [];
  }
  provides() {
    return ["AddressBusiness"];
  }
}
export const newBusiness = new NewBusiness();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQUEsRUFDRUE7QUFBQUEsRUFDQUM7QUFBQUEsRUFDQUM7QUFBQUEsRUFDQUM7QUFBQUEsRUFDQUM7QUFBQUEsRUFDQUM7QUFBQUEsRUFDQUM7QUFBQUEsT0FDSztBQUNQLFNBQVNDLE1BQU1DLG9CQUFvQjtBQUVuQyxPQUFPQyx1QkFBdUI7QUFFOUIsTUFBTUMsb0JBQW9CSCxLQUFLO0FBQUEsRUFBL0I7QUFBQTtBQUNFSSxvQkFBVyxJQUFJSCxhQUFhLEVBQUU7QUFFOUJJLGdCQUFPQSxNQUFNLE9BQU8sbUJBQW1CO0FBQ3ZDQyw0QkFBbUJKO0FBQUFBO0FBQUFBLEVBRW5CSyxXQUFXO0FBQ1QsV0FBTztBQUFBLEVBQ1Q7QUFBQSxFQUVBLE1BQWdCQyxTQUFTQyxLQUFhO0FBQ3BDLFVBQU1DLGdCQUFnQkQsSUFBSWQsaUJBQWlCO0FBRTNDLFdBQ0VlLGtCQUFrQmhCLGNBQWNpQixnQkFDaEMsQ0FBQ0YsSUFBSVYsNEJBQTRCLE1BQ2hDVSxJQUFJWCxzQkFBc0IsS0FBS1csSUFBSWIscUJBQXFCLE1BQ3hELE1BQU1hLElBQUloQixtQkFBbUIsTUFBT0ksUUFBUWU7QUFBQUEsRUFFakQ7QUFBQSxFQUVBQyxVQUFVO0FBQ1IsV0FBTztBQUFBLEVBQ1Q7QUFBQSxFQUVBQyxXQUFXO0FBQ1QsV0FBTyxDQUFDLGlCQUFpQjtBQUFBLEVBQzNCO0FBQ0Y7QUFFTyxhQUFNQyxjQUFjLElBQUlaLFlBQVkiLCJuYW1lcyI6WyJjdXN0b21lclNlZ21lbnRBdG9tIiwiT3BlcmF0aXZlTW9kZSIsIm9wZXJhdGl2ZU1vZGVBdG9tIiwib3BlcmF0aXZlTW9kZUVuYWJsZWQkIiwiU2VnbWVudCIsIndvcmtpbmdPbkJyb2FkYmFuZEF0b20iLCJ3b3JraW5nT25QYW5lbFN0YW5kYWxvbmVBdG9tIiwiU3RlcCIsIlN0ZXBQcmlvcml0eSIsIlN0ZXBFcnJvckJvdW5kYXJ5IiwiTmV3QnVzaW5lc3MiLCJwcmlvcml0eSIsImxhenkiLCJXcmFwcGVyQ29tcG9uZW50IiwidG9TdHJpbmciLCJpc0luRmx1eCIsImdldCIsIm9wZXJhdGl2ZU1vZGUiLCJDSEFOR0VfT0ZGRVIiLCJTTUFMTCIsImRlcGVuZHMiLCJwcm92aWRlcyIsIm5ld0J1c2luZXNzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbIm5ldy1idXNpbmVzcy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBjdXN0b21lclNlZ21lbnRBdG9tLFxyXG4gIE9wZXJhdGl2ZU1vZGUsXHJcbiAgb3BlcmF0aXZlTW9kZUF0b20sXHJcbiAgb3BlcmF0aXZlTW9kZUVuYWJsZWQkLFxyXG4gIFNlZ21lbnQsXHJcbiAgd29ya2luZ09uQnJvYWRiYW5kQXRvbSxcclxuICB3b3JraW5nT25QYW5lbFN0YW5kYWxvbmVBdG9tLFxyXG59IGZyb20gJ0BuYWotd28vZGF0YS1hY2Nlc3MnO1xyXG5pbXBvcnQgeyBTdGVwLCBTdGVwUHJpb3JpdHkgfSBmcm9tICdAbmFqLXdvL2VuZ2luZSc7XHJcbmltcG9ydCB7IEdldHRlciB9IGZyb20gJ2pvdGFpL3ZhbmlsbGEvdHlwZVV0aWxzJztcclxuaW1wb3J0IFN0ZXBFcnJvckJvdW5kYXJ5IGZyb20gJy4uL1N0ZXBFcnJvckJvdW5kYXJ5JztcclxuXHJcbmNsYXNzIE5ld0J1c2luZXNzIGV4dGVuZHMgU3RlcCB7XHJcbiAgcHJpb3JpdHkgPSBuZXcgU3RlcFByaW9yaXR5KDExKTtcclxuXHJcbiAgbGF6eSA9ICgpID0+IGltcG9ydCgnLi9OZXdCdXNpbmVzc1N0ZXAnKTtcclxuICBXcmFwcGVyQ29tcG9uZW50ID0gU3RlcEVycm9yQm91bmRhcnk7XHJcblxyXG4gIHRvU3RyaW5nKCkge1xyXG4gICAgcmV0dXJuICdhZGRyZXNzLWJ1c2luZXNzJztcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBhc3luYyBpc0luRmx1eChnZXQ6IEdldHRlcikge1xyXG4gICAgY29uc3Qgb3BlcmF0aXZlTW9kZSA9IGdldChvcGVyYXRpdmVNb2RlQXRvbSk7XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgb3BlcmF0aXZlTW9kZSAhPT0gT3BlcmF0aXZlTW9kZS5DSEFOR0VfT0ZGRVIgJiZcclxuICAgICAgIWdldCh3b3JraW5nT25QYW5lbFN0YW5kYWxvbmVBdG9tKSAmJlxyXG4gICAgICAoZ2V0KHdvcmtpbmdPbkJyb2FkYmFuZEF0b20pIHx8IGdldChvcGVyYXRpdmVNb2RlRW5hYmxlZCQpKSAmJlxyXG4gICAgICAoYXdhaXQgZ2V0KGN1c3RvbWVyU2VnbWVudEF0b20pKSA9PT0gU2VnbWVudC5TTUFMTFxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGRlcGVuZHMoKSB7XHJcbiAgICByZXR1cm4gW107XHJcbiAgfVxyXG5cclxuICBwcm92aWRlcygpIHtcclxuICAgIHJldHVybiBbJ0FkZHJlc3NCdXNpbmVzcyddO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IG5ld0J1c2luZXNzID0gbmV3IE5ld0J1c2luZXNzKCk7XHJcbiJdLCJmaWxlIjoiQzovVXNlcnMvYWludHJvbmEvRGVza3RvcC9BcHAvcmVhY3QvbmFqL2xpYnMvc3RlcHMvc3JjL2xpYi9jdXN0b21lci9uZXctYnVzaW5lc3MudHN4In0=