globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import { workingOnBroadbandAtom } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/index.ts";
import { Step, StepPriority } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/engine/src/index.ts";
import StepErrorBoundary from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/StepErrorBoundary.tsx";
import { StepDependencies } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/StepDependencies.ts";
class BroadbandOptionsStep extends Step {
  constructor() {
    super(...arguments);
    this.priority = new StepPriority(9);
    this.WrapperComponent = StepErrorBoundary;
    this.lazy = () => import("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/broadband/BroadbandOptionsStep.tsx");
  }
  toString() {
    return "broadbandOptions";
  }
  depends() {
    return [];
  }
  provides() {
    return [StepDependencies.BROADBAND_OPTIONS];
  }
  isInFlux(get) {
    return get(workingOnBroadbandAtom);
  }
}
export const broadbandOptions = new BroadbandOptionsStep();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLFNBQVNBLDhCQUE4QjtBQUN2QyxTQUFTQyxNQUFNQyxvQkFBb0I7QUFFbkMsT0FBT0MsdUJBQXVCO0FBQzlCLFNBQVNDLHdCQUF3QjtBQUVqQyxNQUFNQyw2QkFBNkJKLEtBQUs7QUFBQSxFQUF4QztBQUFBO0FBQ0VLLG9CQUFXLElBQUlKLGFBQWEsQ0FBQztBQUM3QkssNEJBQW1CSjtBQUVuQkssZ0JBQU9BLE1BQU0sT0FBTyx3QkFBd0I7QUFBQTtBQUFBLEVBRTVDQyxXQUFXO0FBQ1QsV0FBTztBQUFBLEVBQ1Q7QUFBQSxFQUVBQyxVQUFVO0FBQ1IsV0FBTztBQUFBLEVBQ1Q7QUFBQSxFQUVBQyxXQUFXO0FBQ1QsV0FBTyxDQUFDUCxpQkFBaUJRLGlCQUFpQjtBQUFBLEVBQzVDO0FBQUEsRUFFVUMsU0FBU0MsS0FBYTtBQUM5QixXQUFPQSxJQUFJZCxzQkFBc0I7QUFBQSxFQUNuQztBQUNGO0FBRU8sYUFBTWUsbUJBQW1CLElBQUlWLHFCQUFxQiIsIm5hbWVzIjpbIndvcmtpbmdPbkJyb2FkYmFuZEF0b20iLCJTdGVwIiwiU3RlcFByaW9yaXR5IiwiU3RlcEVycm9yQm91bmRhcnkiLCJTdGVwRGVwZW5kZW5jaWVzIiwiQnJvYWRiYW5kT3B0aW9uc1N0ZXAiLCJwcmlvcml0eSIsIldyYXBwZXJDb21wb25lbnQiLCJsYXp5IiwidG9TdHJpbmciLCJkZXBlbmRzIiwicHJvdmlkZXMiLCJCUk9BREJBTkRfT1BUSU9OUyIsImlzSW5GbHV4IiwiZ2V0IiwiYnJvYWRiYW5kT3B0aW9ucyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJicm9hZGJhbmQtb3B0aW9ucy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd29ya2luZ09uQnJvYWRiYW5kQXRvbSB9IGZyb20gJ0BuYWotd28vZGF0YS1hY2Nlc3MnO1xyXG5pbXBvcnQgeyBTdGVwLCBTdGVwUHJpb3JpdHkgfSBmcm9tICdAbmFqLXdvL2VuZ2luZSc7XHJcbmltcG9ydCB7IEdldHRlciB9IGZyb20gJ2pvdGFpL3ZhbmlsbGEvdHlwZVV0aWxzJztcclxuaW1wb3J0IFN0ZXBFcnJvckJvdW5kYXJ5IGZyb20gJy4uL1N0ZXBFcnJvckJvdW5kYXJ5JztcclxuaW1wb3J0IHsgU3RlcERlcGVuZGVuY2llcyB9IGZyb20gJy4uL1N0ZXBEZXBlbmRlbmNpZXMnO1xyXG5cclxuY2xhc3MgQnJvYWRiYW5kT3B0aW9uc1N0ZXAgZXh0ZW5kcyBTdGVwIHtcclxuICBwcmlvcml0eSA9IG5ldyBTdGVwUHJpb3JpdHkoOSk7XHJcbiAgV3JhcHBlckNvbXBvbmVudCA9IFN0ZXBFcnJvckJvdW5kYXJ5O1xyXG5cclxuICBsYXp5ID0gKCkgPT4gaW1wb3J0KCcuL0Jyb2FkYmFuZE9wdGlvbnNTdGVwJyk7XHJcblxyXG4gIHRvU3RyaW5nKCkge1xyXG4gICAgcmV0dXJuICdicm9hZGJhbmRPcHRpb25zJztcclxuICB9XHJcblxyXG4gIGRlcGVuZHMoKSB7XHJcbiAgICByZXR1cm4gW107XHJcbiAgfVxyXG5cclxuICBwcm92aWRlcygpIHtcclxuICAgIHJldHVybiBbU3RlcERlcGVuZGVuY2llcy5CUk9BREJBTkRfT1BUSU9OU107XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgaXNJbkZsdXgoZ2V0OiBHZXR0ZXIpIHtcclxuICAgIHJldHVybiBnZXQod29ya2luZ09uQnJvYWRiYW5kQXRvbSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgYnJvYWRiYW5kT3B0aW9ucyA9IG5ldyBCcm9hZGJhbmRPcHRpb25zU3RlcCgpO1xyXG4iXSwiZmlsZSI6IkM6L1VzZXJzL2FpbnRyb25hL0Rlc2t0b3AvQXBwL3JlYWN0L25hai9saWJzL3N0ZXBzL3NyYy9saWIvYnJvYWRiYW5kL2Jyb2FkYmFuZC1vcHRpb25zLnRzeCJ9