import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/useNewCustomerModals.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/useNewCustomerModals.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$();
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import { useModalAsPromise } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/index.ts";
import { ModalOtp } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/ModalOtp.tsx";
import { ModalEmailChanged, ModalWrapper } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/index.ts";
export function useNewCustomerModals() {
  _s();
  const [modalEmailChangedProps, openModalEmailChanged] = useModalAsPromise();
  const [modalOtpProps, openModalOtp] = useModalAsPromise();
  return {
    openModalEmailChanged,
    openModalOtp,
    modals: /* @__PURE__ */ jsxDEV(ModalWrapper, { children: [
      modalEmailChangedProps && /* @__PURE__ */ jsxDEV(
        ModalEmailChanged,
        {
          email: modalEmailChangedProps.email,
          resolve: modalEmailChangedProps.resolve
        },
        void 0,
        false,
        {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/useNewCustomerModals.tsx",
          lineNumber: 18,
          columnNumber: 7
        },
        this
      ),
      modalOtpProps && /* @__PURE__ */ jsxDEV(ModalOtp, { ...modalOtpProps }, void 0, false, {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/useNewCustomerModals.tsx",
        lineNumber: 23,
        columnNumber: 27
      }, this)
    ] }, void 0, true, {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/useNewCustomerModals.tsx",
      lineNumber: 16,
      columnNumber: 5
    }, this)
  };
}
_s(useNewCustomerModals, "AhcxlUyY3AFd4UrqqYqhCKQucew=", false, function() {
  return [useModalAsPromise, useModalAsPromise];
});
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/useNewCustomerModals.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBaUJVOzs7OztxQ0FqQlY7QUFBQSxPQUFTQSxpREFBdUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDaEQsU0FBU0MsZ0JBQStCO0FBQ3hDLFNBQVNDLG1CQUFtQkMsb0JBQW9CO0FBRXpDLGdCQUFTQyx1QkFBdUI7QUFBQUMsS0FBQTtBQUNyQyxRQUFNLENBQUNDLHdCQUF3QkMscUJBQXFCLElBQUlQLGtCQUdyRDtBQUNILFFBQU0sQ0FBQ1EsZUFBZUMsWUFBWSxJQUFJVCxrQkFBaUM7QUFFdkUsU0FBTztBQUFBLElBQ0xPO0FBQUFBLElBQ0FFO0FBQUFBLElBQ0FDLFFBQ0UsdUJBQUMsZ0JBQ0VKO0FBQUFBLGdDQUNDO0FBQUEsUUFBQztBQUFBO0FBQUEsVUFDQyxPQUFPQSx1QkFBdUJLO0FBQUFBLFVBQzlCLFNBQVNMLHVCQUF1Qk07QUFBQUE7QUFBQUEsUUFGbEM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE1BRTBDO0FBQUEsTUFHM0NKLGlCQUFpQix1QkFBQyxZQUFTLEdBQUlBLGlCQUFkO0FBQUE7QUFBQTtBQUFBO0FBQUEsYUFBNEI7QUFBQSxTQVBoRDtBQUFBO0FBQUE7QUFBQTtBQUFBLFdBUUE7QUFBQSxFQUVKO0FBQ0Y7QUFBQ0gsR0F0QmVELHNCQUFvQjtBQUFBLFVBQ3NCSixtQkFJbEJBLGlCQUFpQjtBQUFBIiwibmFtZXMiOlsidXNlTW9kYWxBc1Byb21pc2UiLCJNb2RhbE90cCIsIk1vZGFsRW1haWxDaGFuZ2VkIiwiTW9kYWxXcmFwcGVyIiwidXNlTmV3Q3VzdG9tZXJNb2RhbHMiLCJfcyIsIm1vZGFsRW1haWxDaGFuZ2VkUHJvcHMiLCJvcGVuTW9kYWxFbWFpbENoYW5nZWQiLCJtb2RhbE90cFByb3BzIiwib3Blbk1vZGFsT3RwIiwibW9kYWxzIiwiZW1haWwiLCJyZXNvbHZlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbInVzZU5ld0N1c3RvbWVyTW9kYWxzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VNb2RhbEFzUHJvbWlzZSB9IGZyb20gJ0BuYWotd28vdXRpbCc7XHJcbmltcG9ydCB7IE1vZGFsT3RwLCBNb2RhbE90cFByb3BzIH0gZnJvbSAnLi9Nb2RhbE90cCc7XHJcbmltcG9ydCB7IE1vZGFsRW1haWxDaGFuZ2VkLCBNb2RhbFdyYXBwZXIgfSBmcm9tICdAbmFqLXdvL3VpLWF0b21zJztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VOZXdDdXN0b21lck1vZGFscygpIHtcclxuICBjb25zdCBbbW9kYWxFbWFpbENoYW5nZWRQcm9wcywgb3Blbk1vZGFsRW1haWxDaGFuZ2VkXSA9IHVzZU1vZGFsQXNQcm9taXNlPHtcclxuICAgIGVtYWlsOiBzdHJpbmc7XHJcbiAgICByZXNvbHZlOiAoKSA9PiB2b2lkO1xyXG4gIH0+KCk7XHJcbiAgY29uc3QgW21vZGFsT3RwUHJvcHMsIG9wZW5Nb2RhbE90cF0gPSB1c2VNb2RhbEFzUHJvbWlzZTxNb2RhbE90cFByb3BzPigpO1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgb3Blbk1vZGFsRW1haWxDaGFuZ2VkLFxyXG4gICAgb3Blbk1vZGFsT3RwLFxyXG4gICAgbW9kYWxzOiAoXHJcbiAgICAgIDxNb2RhbFdyYXBwZXI+XHJcbiAgICAgICAge21vZGFsRW1haWxDaGFuZ2VkUHJvcHMgJiYgKFxyXG4gICAgICAgICAgPE1vZGFsRW1haWxDaGFuZ2VkXHJcbiAgICAgICAgICAgIGVtYWlsPXttb2RhbEVtYWlsQ2hhbmdlZFByb3BzLmVtYWlsfVxyXG4gICAgICAgICAgICByZXNvbHZlPXttb2RhbEVtYWlsQ2hhbmdlZFByb3BzLnJlc29sdmV9XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgICl9XHJcbiAgICAgICAge21vZGFsT3RwUHJvcHMgJiYgPE1vZGFsT3RwIHsuLi5tb2RhbE90cFByb3BzfSAvPn1cclxuICAgICAgPC9Nb2RhbFdyYXBwZXI+XHJcbiAgICApLFxyXG4gIH07XHJcbn1cclxuIl0sImZpbGUiOiJDOi9Vc2Vycy9haW50cm9uYS9EZXNrdG9wL0FwcC9yZWFjdC9uYWovbGlicy9zdGVwcy9zcmMvbGliL2N1c3RvbWVyL3VzZU5ld0N1c3RvbWVyTW9kYWxzLnRzeCJ9