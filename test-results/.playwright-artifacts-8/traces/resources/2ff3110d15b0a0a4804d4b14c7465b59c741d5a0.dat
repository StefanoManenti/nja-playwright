globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || {
  cache: /* @__PURE__ */ new Map(),
  get(name, inst) {
    if (this.cache.has(name)) {
      return this.cache.get(name);
    }
    this.cache.set(name, inst);
    return inst;
  }
};
import { atomWithMutation } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/jotai-tanstack-query.js?v=0189a8d1";
import { atomWithLazy } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/jotai_utils.js?v=0189a8d1";
import { restoreCvtFromUrl } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/troubleshooting/state-url.ts";
import { fetchContractCode, fetchLeadByCvt, insertLead, updateBulkOrder, updateLead } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/api/lead/lead-services.ts";
export const fetchContractCodeAtom = globalThis.jotaiAtomCache.get("C:\\Users\\aintrona\\Desktop\\App\\react\\naj\\libs\\data-access\\src\\lib\\api\\lead\\lead-services-atoms.ts/fetchContractCodeAtom", atomWithMutation(() => ({
  mutationKey: ["fetchContractCode"],
  mutationFn: fetchContractCode
})));
fetchContractCodeAtom.debugLabel = "fetchContractCodeAtom";
export const cvtAtom = globalThis.jotaiAtomCache.get("C:\\Users\\aintrona\\Desktop\\App\\react\\naj\\libs\\data-access\\src\\lib\\api\\lead\\lead-services-atoms.ts/cvtAtom", atomWithLazy(restoreCvtFromUrl));
cvtAtom.debugLabel = "cvtAtom";
export const fetchLeadByCvtMutationAtom = globalThis.jotaiAtomCache.get("C:\\Users\\aintrona\\Desktop\\App\\react\\naj\\libs\\data-access\\src\\lib\\api\\lead\\lead-services-atoms.ts/fetchLeadByCvtMutationAtom", atomWithMutation(() => ({
  mutationKey: ["fetchLead"],
  mutationFn: fetchLeadByCvt
})));
fetchLeadByCvtMutationAtom.debugLabel = "fetchLeadByCvtMutationAtom";
export const insertLeadMutationAtom = globalThis.jotaiAtomCache.get("C:\\Users\\aintrona\\Desktop\\App\\react\\naj\\libs\\data-access\\src\\lib\\api\\lead\\lead-services-atoms.ts/insertLeadMutationAtom", atomWithMutation(() => ({
  mutationKey: ["insertLead"],
  mutationFn: insertLead
})));
insertLeadMutationAtom.debugLabel = "insertLeadMutationAtom";
export const updateLeadMutationAtom = globalThis.jotaiAtomCache.get("C:\\Users\\aintrona\\Desktop\\App\\react\\naj\\libs\\data-access\\src\\lib\\api\\lead\\lead-services-atoms.ts/updateLeadMutationAtom", atomWithMutation(() => ({
  mutationKey: ["updateLead"],
  mutationFn: updateLead
})));
updateLeadMutationAtom.debugLabel = "updateLeadMutationAtom";
export const updateBulkOrderMutationAtom = globalThis.jotaiAtomCache.get("C:\\Users\\aintrona\\Desktop\\App\\react\\naj\\libs\\data-access\\src\\lib\\api\\lead\\lead-services-atoms.ts/updateBulkOrderMutationAtom", atomWithMutation(() => ({
  mutationKey: ["updateBulkOrder"],
  mutationFn: updateBulkOrder
})));
updateBulkOrderMutationAtom.debugLabel = "updateBulkOrderMutationAtom";

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLFNBQVNBLHdCQUF3QjtBQUNqQyxTQUFTQyxvQkFBb0I7QUFDN0IsU0FBU0MseUJBQXlCO0FBQ2xDLFNBQ0VDLG1CQUNBQyxnQkFDQUMsWUFDQUMsaUJBQ0FDLGtCQUNLO0FBRVAsYUFBQUMsd0JBQUFDLFdBQUFDLGVBQUFDLElBQUEsdUlBQXFDWCxpQkFBaUIsT0FBTztBQUFBLEVBQzNEWSxhQUFhLENBQUMsbUJBQW1CO0FBQUEsRUFDakNDLFlBQVlWO0FBQ2QsRUFBRSxDQUFDO0FBQUNLLHNCQUFBTSxhQUFBO0FBRUosYUFBQUMsVUFBQU4sV0FBQUMsZUFBQUMsSUFBQSx5SEFBdUJWLGFBQXFCQyxpQkFBaUIsQ0FBQztBQUFDYSxRQUFBRCxhQUFBO0FBRS9ELGFBQUFFLDZCQUFBUCxXQUFBQyxlQUFBQyxJQUFBLDRJQUEwQ1gsaUJBQWlCLE9BQU87QUFBQSxFQUNoRVksYUFBYSxDQUFDLFdBQVc7QUFBQSxFQUN6QkMsWUFBWVQ7QUFDZCxFQUFFLENBQUM7QUFBQ1ksMkJBQUFGLGFBQUE7QUFFSixhQUFBRyx5QkFBQVIsV0FBQUMsZUFBQUMsSUFBQSx3SUFBc0NYLGlCQUFpQixPQUFPO0FBQUEsRUFDNURZLGFBQWEsQ0FBQyxZQUFZO0FBQUEsRUFDMUJDLFlBQVlSO0FBQ2QsRUFBRSxDQUFDO0FBQUNZLHVCQUFBSCxhQUFBO0FBRUosYUFBQUkseUJBQUFULFdBQUFDLGVBQUFDLElBQUEsd0lBQXNDWCxpQkFBaUIsT0FBTztBQUFBLEVBQzVEWSxhQUFhLENBQUMsWUFBWTtBQUFBLEVBQzFCQyxZQUFZTjtBQUNkLEVBQUUsQ0FBQztBQUFDVyx1QkFBQUosYUFBQTtBQUVKLGFBQUFLLDhCQUFBVixXQUFBQyxlQUFBQyxJQUFBLDZJQUEyQ1gsaUJBQWlCLE9BQU87QUFBQSxFQUNqRVksYUFBYSxDQUFDLGlCQUFpQjtBQUFBLEVBQy9CQyxZQUFZUDtBQUNkLEVBQUUsQ0FBQztBQUFDYSw0QkFBQUwsYUFBQSIsIm5hbWVzIjpbImF0b21XaXRoTXV0YXRpb24iLCJhdG9tV2l0aExhenkiLCJyZXN0b3JlQ3Z0RnJvbVVybCIsImZldGNoQ29udHJhY3RDb2RlIiwiZmV0Y2hMZWFkQnlDdnQiLCJpbnNlcnRMZWFkIiwidXBkYXRlQnVsa09yZGVyIiwidXBkYXRlTGVhZCIsImZldGNoQ29udHJhY3RDb2RlQXRvbSIsImdsb2JhbFRoaXMiLCJqb3RhaUF0b21DYWNoZSIsImdldCIsIm11dGF0aW9uS2V5IiwibXV0YXRpb25GbiIsImRlYnVnTGFiZWwiLCJjdnRBdG9tIiwiZmV0Y2hMZWFkQnlDdnRNdXRhdGlvbkF0b20iLCJpbnNlcnRMZWFkTXV0YXRpb25BdG9tIiwidXBkYXRlTGVhZE11dGF0aW9uQXRvbSIsInVwZGF0ZUJ1bGtPcmRlck11dGF0aW9uQXRvbSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJsZWFkLXNlcnZpY2VzLWF0b21zLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGF0b21XaXRoTXV0YXRpb24gfSBmcm9tICdqb3RhaS10YW5zdGFjay1xdWVyeSc7XHJcbmltcG9ydCB7IGF0b21XaXRoTGF6eSB9IGZyb20gJ2pvdGFpL3V0aWxzJztcclxuaW1wb3J0IHsgcmVzdG9yZUN2dEZyb21VcmwgfSBmcm9tICcuLi8uLi90cm91Ymxlc2hvb3Rpbmcvc3RhdGUtdXJsJztcclxuaW1wb3J0IHtcclxuICBmZXRjaENvbnRyYWN0Q29kZSxcclxuICBmZXRjaExlYWRCeUN2dCxcclxuICBpbnNlcnRMZWFkLFxyXG4gIHVwZGF0ZUJ1bGtPcmRlcixcclxuICB1cGRhdGVMZWFkLFxyXG59IGZyb20gJy4vbGVhZC1zZXJ2aWNlcyc7XHJcblxyXG5leHBvcnQgY29uc3QgZmV0Y2hDb250cmFjdENvZGVBdG9tID0gYXRvbVdpdGhNdXRhdGlvbigoKSA9PiAoe1xyXG4gIG11dGF0aW9uS2V5OiBbJ2ZldGNoQ29udHJhY3RDb2RlJ10sXHJcbiAgbXV0YXRpb25GbjogZmV0Y2hDb250cmFjdENvZGUsXHJcbn0pKTtcclxuXHJcbmV4cG9ydCBjb25zdCBjdnRBdG9tID0gYXRvbVdpdGhMYXp5PHN0cmluZz4ocmVzdG9yZUN2dEZyb21VcmwpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGZldGNoTGVhZEJ5Q3Z0TXV0YXRpb25BdG9tID0gYXRvbVdpdGhNdXRhdGlvbigoKSA9PiAoe1xyXG4gIG11dGF0aW9uS2V5OiBbJ2ZldGNoTGVhZCddLFxyXG4gIG11dGF0aW9uRm46IGZldGNoTGVhZEJ5Q3Z0LFxyXG59KSk7XHJcblxyXG5leHBvcnQgY29uc3QgaW5zZXJ0TGVhZE11dGF0aW9uQXRvbSA9IGF0b21XaXRoTXV0YXRpb24oKCkgPT4gKHtcclxuICBtdXRhdGlvbktleTogWydpbnNlcnRMZWFkJ10sXHJcbiAgbXV0YXRpb25GbjogaW5zZXJ0TGVhZCxcclxufSkpO1xyXG5cclxuZXhwb3J0IGNvbnN0IHVwZGF0ZUxlYWRNdXRhdGlvbkF0b20gPSBhdG9tV2l0aE11dGF0aW9uKCgpID0+ICh7XHJcbiAgbXV0YXRpb25LZXk6IFsndXBkYXRlTGVhZCddLFxyXG4gIG11dGF0aW9uRm46IHVwZGF0ZUxlYWQsXHJcbn0pKTtcclxuXHJcbmV4cG9ydCBjb25zdCB1cGRhdGVCdWxrT3JkZXJNdXRhdGlvbkF0b20gPSBhdG9tV2l0aE11dGF0aW9uKCgpID0+ICh7XHJcbiAgbXV0YXRpb25LZXk6IFsndXBkYXRlQnVsa09yZGVyJ10sXHJcbiAgbXV0YXRpb25GbjogdXBkYXRlQnVsa09yZGVyLFxyXG59KSk7XHJcbiJdLCJmaWxlIjoiQzovVXNlcnMvYWludHJvbmEvRGVza3RvcC9BcHAvcmVhY3QvbmFqL2xpYnMvZGF0YS1hY2Nlc3Mvc3JjL2xpYi9hcGkvbGVhZC9sZWFkLXNlcnZpY2VzLWF0b21zLnRzIn0=