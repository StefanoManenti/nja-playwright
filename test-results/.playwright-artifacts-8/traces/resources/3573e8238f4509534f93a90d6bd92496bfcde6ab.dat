import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/FormControlLabel.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/FormControlLabel.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$();
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import { CheckboxIcon, RadioIcon } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-icons/src/index.ts";
import clsx from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/clsx.js?v=0189a8d1";
import __vite__cjsImport5_react from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react.js?v=0189a8d1"; const cloneElement = __vite__cjsImport5_react["cloneElement"]; const useId = __vite__cjsImport5_react["useId"]


;
import classes from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/FormControlLabel.module.less";
import { Typography } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Typography.tsx";
export function FormControlLabel({
  className,
  label,
  type,
  inputProps = {},
  variant = "body2"
}) {
  _s();
  const id = useId();
  const icon = type === "checkbox" ? /* @__PURE__ */ jsxDEV(CheckboxIcon, {}, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/FormControlLabel.tsx",
    lineNumber: 31,
    columnNumber: 3
  }, this) : type === "radio" ? /* @__PURE__ */ jsxDEV(RadioIcon, {}, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/FormControlLabel.tsx",
    lineNumber: 33,
    columnNumber: 3
  }, this) : void 0;
  return /* @__PURE__ */ jsxDEV("div", { className: clsx(classes.root, className), children: [
    /* @__PURE__ */ jsxDEV(
      "input",
      {
        id,
        className: clsx("pln-control-input"),
        type,
        ...inputProps
      },
      void 0,
      false,
      {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/FormControlLabel.tsx",
        lineNumber: 38,
        columnNumber: 7
      },
      this
    ),
    /* @__PURE__ */ jsxDEV("label", { className: clsx("pln-control-label", classes.label), htmlFor: id, children: [
      /* @__PURE__ */ jsxDEV("div", { className: classes.iconContainer, children: icon && cloneElement(icon, {
        className: clsx(icon?.props.className, classes.icon)
      }) }, void 0, false, {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/FormControlLabel.tsx",
        lineNumber: 45,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ jsxDEV("div", { className: classes.labelContainer, children: /* @__PURE__ */ jsxDEV(Typography, { variant, component: "span", children: label }, void 0, false, {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/FormControlLabel.tsx",
        lineNumber: 52,
        columnNumber: 11
      }, this) }, void 0, false, {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/FormControlLabel.tsx",
        lineNumber: 51,
        columnNumber: 9
      }, this)
    ] }, void 0, true, {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/FormControlLabel.tsx",
      lineNumber: 44,
      columnNumber: 7
    }, this)
  ] }, void 0, true, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/FormControlLabel.tsx",
    lineNumber: 37,
    columnNumber: 5
  }, this);
}
_s(FormControlLabel, "WhsuKpSQZEWeFcB7gWlfDRQktoQ=", false, function() {
  return [useId];
});
_c = FormControlLabel;
var _c;
$RefreshReg$(_c, "FormControlLabel");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/FormControlLabel.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBOEJNOzs7OztxQ0E5Qk47QUFBQSxPQUFTQSxpREFBaUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDMUQsT0FBT0MsVUFBVTtBQUNqQjtBQUFBLEVBQ0VDO0FBQUFBLEVBR0FDO0FBQUFBLE9BQ0s7QUFDUCxPQUFPQyxhQUFhO0FBQ3BCLFNBQVNDLGtCQUFtQztBQVVyQyxnQkFBU0MsaUJBQWlCO0FBQUEsRUFDL0JDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDLGFBQWEsQ0FBQztBQUFBLEVBQ2RDLFVBQVU7QUFDTCxHQUFHO0FBQUFDLEtBQUE7QUFDUixRQUFNQyxLQUFLVixNQUFNO0FBRWpCLFFBQU1XLE9BQ0pMLFNBQVMsYUFDUCx1QkFBQyxrQkFBRDtBQUFBO0FBQUE7QUFBQTtBQUFBLFNBQWEsSUFDWEEsU0FBUyxVQUNYLHVCQUFDLGVBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQSxTQUFVLElBQ1JNO0FBRU4sU0FDRSx1QkFBQyxTQUFJLFdBQVdkLEtBQUtHLFFBQVFZLE1BQU1ULFNBQVMsR0FDMUM7QUFBQTtBQUFBLE1BQUM7QUFBQTtBQUFBLFFBQ0M7QUFBQSxRQUNBLFdBQVdOLEtBQUssbUJBQW1CO0FBQUEsUUFDbkM7QUFBQSxRQUNBLEdBQUlTO0FBQUFBO0FBQUFBLE1BSk47QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLElBSWlCO0FBQUEsSUFFakIsdUJBQUMsV0FBTSxXQUFXVCxLQUFLLHFCQUFxQkcsUUFBUUksS0FBSyxHQUFHLFNBQVNLLElBQ25FO0FBQUEsNkJBQUMsU0FBSSxXQUFXVCxRQUFRYSxlQUNyQkgsa0JBQ0NaLGFBQWFZLE1BQU07QUFBQSxRQUNqQlAsV0FBV04sS0FBS2EsTUFBTUksTUFBTVgsV0FBV0gsUUFBUVUsSUFBSTtBQUFBLE1BQ3JELENBQUMsS0FKTDtBQUFBO0FBQUE7QUFBQTtBQUFBLGFBS0E7QUFBQSxNQUNBLHVCQUFDLFNBQUksV0FBV1YsUUFBUWUsZ0JBQ3RCLGlDQUFDLGNBQVcsU0FBa0IsV0FBVSxRQUNyQ1gsbUJBREg7QUFBQTtBQUFBO0FBQUE7QUFBQSxhQUVBLEtBSEY7QUFBQTtBQUFBO0FBQUE7QUFBQSxhQUlBO0FBQUEsU0FYRjtBQUFBO0FBQUE7QUFBQTtBQUFBLFdBWUE7QUFBQSxPQW5CRjtBQUFBO0FBQUE7QUFBQTtBQUFBLFNBb0JBO0FBRUo7QUFBQ0ksR0F2Q2VOLGtCQUFnQjtBQUFBLFVBT25CSCxLQUFLO0FBQUE7QUFBQWlCLEtBUEZkO0FBQWdCLElBQUFjO0FBQUFDLGFBQUFELElBQUEiLCJuYW1lcyI6WyJDaGVja2JveEljb24iLCJjbHN4IiwiY2xvbmVFbGVtZW50IiwidXNlSWQiLCJjbGFzc2VzIiwiVHlwb2dyYXBoeSIsIkZvcm1Db250cm9sTGFiZWwiLCJjbGFzc05hbWUiLCJsYWJlbCIsInR5cGUiLCJpbnB1dFByb3BzIiwidmFyaWFudCIsIl9zIiwiaWQiLCJpY29uIiwidW5kZWZpbmVkIiwicm9vdCIsImljb25Db250YWluZXIiLCJwcm9wcyIsImxhYmVsQ29udGFpbmVyIiwiX2MiLCIkUmVmcmVzaFJlZyQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiRm9ybUNvbnRyb2xMYWJlbC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hlY2tib3hJY29uLCBSYWRpb0ljb24gfSBmcm9tICdAbmFqLXdvL3VpLWljb25zJztcclxuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XHJcbmltcG9ydCBSZWFjdCwge1xyXG4gIGNsb25lRWxlbWVudCxcclxuICB0eXBlIENvbXBvbmVudFByb3BzLFxyXG4gIFJlYWN0Tm9kZSxcclxuICB1c2VJZCxcclxufSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBjbGFzc2VzIGZyb20gJy4vRm9ybUNvbnRyb2xMYWJlbC5tb2R1bGUubGVzcyc7XHJcbmltcG9ydCB7IFR5cG9ncmFwaHksIFR5cG9ncmFwaHlQcm9wcyB9IGZyb20gJy4vVHlwb2dyYXBoeSc7XHJcblxyXG50eXBlIFByb3BzID0ge1xyXG4gIHR5cGU6ICdjaGVja2JveCcgfCAncmFkaW8nO1xyXG4gIGxhYmVsOiBSZWFjdE5vZGU7XHJcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xyXG4gIGlucHV0UHJvcHM/OiBDb21wb25lbnRQcm9wczwnaW5wdXQnPjtcclxuICB2YXJpYW50PzogVHlwb2dyYXBoeVByb3BzWyd2YXJpYW50J107XHJcbn07XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gRm9ybUNvbnRyb2xMYWJlbCh7XHJcbiAgY2xhc3NOYW1lLFxyXG4gIGxhYmVsLFxyXG4gIHR5cGUsXHJcbiAgaW5wdXRQcm9wcyA9IHt9LFxyXG4gIHZhcmlhbnQgPSAnYm9keTInLFxyXG59OiBQcm9wcykge1xyXG4gIGNvbnN0IGlkID0gdXNlSWQoKTtcclxuXHJcbiAgY29uc3QgaWNvbiA9XHJcbiAgICB0eXBlID09PSAnY2hlY2tib3gnID8gKFxyXG4gICAgICA8Q2hlY2tib3hJY29uIC8+XHJcbiAgICApIDogdHlwZSA9PT0gJ3JhZGlvJyA/IChcclxuICAgICAgPFJhZGlvSWNvbiAvPlxyXG4gICAgKSA6IHVuZGVmaW5lZDtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPXtjbHN4KGNsYXNzZXMucm9vdCwgY2xhc3NOYW1lKX0+XHJcbiAgICAgIDxpbnB1dFxyXG4gICAgICAgIGlkPXtpZH1cclxuICAgICAgICBjbGFzc05hbWU9e2Nsc3goJ3Bsbi1jb250cm9sLWlucHV0Jyl9XHJcbiAgICAgICAgdHlwZT17dHlwZX1cclxuICAgICAgICB7Li4uaW5wdXRQcm9wc31cclxuICAgICAgLz5cclxuICAgICAgPGxhYmVsIGNsYXNzTmFtZT17Y2xzeCgncGxuLWNvbnRyb2wtbGFiZWwnLCBjbGFzc2VzLmxhYmVsKX0gaHRtbEZvcj17aWR9PlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc2VzLmljb25Db250YWluZXJ9PlxyXG4gICAgICAgICAge2ljb24gJiZcclxuICAgICAgICAgICAgY2xvbmVFbGVtZW50KGljb24sIHtcclxuICAgICAgICAgICAgICBjbGFzc05hbWU6IGNsc3goaWNvbj8ucHJvcHMuY2xhc3NOYW1lLCBjbGFzc2VzLmljb24pLFxyXG4gICAgICAgICAgICB9KX1cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3Nlcy5sYWJlbENvbnRhaW5lcn0+XHJcbiAgICAgICAgICA8VHlwb2dyYXBoeSB2YXJpYW50PXt2YXJpYW50fSBjb21wb25lbnQ9XCJzcGFuXCI+XHJcbiAgICAgICAgICAgIHtsYWJlbH1cclxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9sYWJlbD5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn1cclxuIl0sImZpbGUiOiJDOi9Vc2Vycy9haW50cm9uYS9EZXNrdG9wL0FwcC9yZWFjdC9uYWovbGlicy91aS1hdG9tcy9zcmMvbGliL0Zvcm1Db250cm9sTGFiZWwudHN4In0=