globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import {
  operativeModeEnabled$,
  workingOnBroadbandAtom
} from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/index.ts";
import { Step, StepPriority } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/engine/src/index.ts";
import StepErrorBoundary from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/StepErrorBoundary.tsx";
class Typ extends Step {
  constructor() {
    super(...arguments);
    this.priority = new StepPriority(110);
    this.lazy = () => import("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/typ/TypStep.tsx");
    this.WrapperComponent = StepErrorBoundary;
  }
  toString() {
    return "typ";
  }
  isInFlux(get) {
    if (get(workingOnBroadbandAtom)) {
      return true;
    }
    return get(operativeModeEnabled$);
  }
}
export const typ = new Typ();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQUEsRUFDRUE7QUFBQUEsRUFDQUM7QUFBQUEsT0FDSztBQUNQLFNBQVNDLE1BQU1DLG9CQUFvQjtBQUNuQyxPQUFPQyx1QkFBdUI7QUFHOUIsTUFBTUMsWUFBWUgsS0FBSztBQUFBLEVBQXZCO0FBQUE7QUFDRUksb0JBQVcsSUFBSUgsYUFBYSxHQUFHO0FBRS9CSSxnQkFBT0EsTUFBTSxPQUFPLFdBQVc7QUFDL0JDLDRCQUFtQko7QUFBQUE7QUFBQUEsRUFFbkJLLFdBQVc7QUFDVCxXQUFPO0FBQUEsRUFDVDtBQUFBLEVBRVVDLFNBQVNDLEtBQWE7QUFDOUIsUUFBSUEsSUFBSVYsc0JBQXNCLEdBQUc7QUFDL0IsYUFBTztBQUFBLElBQ1Q7QUFDQSxXQUFPVSxJQUFJWCxxQkFBcUI7QUFBQSxFQUNsQztBQUNGO0FBRU8sYUFBTVksTUFBTSxJQUFJUCxJQUFJIiwibmFtZXMiOlsib3BlcmF0aXZlTW9kZUVuYWJsZWQkIiwid29ya2luZ09uQnJvYWRiYW5kQXRvbSIsIlN0ZXAiLCJTdGVwUHJpb3JpdHkiLCJTdGVwRXJyb3JCb3VuZGFyeSIsIlR5cCIsInByaW9yaXR5IiwibGF6eSIsIldyYXBwZXJDb21wb25lbnQiLCJ0b1N0cmluZyIsImlzSW5GbHV4IiwiZ2V0IiwidHlwIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbInR5cC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBvcGVyYXRpdmVNb2RlRW5hYmxlZCQsXHJcbiAgd29ya2luZ09uQnJvYWRiYW5kQXRvbSxcclxufSBmcm9tICdAbmFqLXdvL2RhdGEtYWNjZXNzJztcclxuaW1wb3J0IHsgU3RlcCwgU3RlcFByaW9yaXR5IH0gZnJvbSAnQG5hai13by9lbmdpbmUnO1xyXG5pbXBvcnQgU3RlcEVycm9yQm91bmRhcnkgZnJvbSAnLi4vU3RlcEVycm9yQm91bmRhcnknO1xyXG5pbXBvcnQgeyBHZXR0ZXIgfSBmcm9tICdqb3RhaS92YW5pbGxhL3R5cGVVdGlscyc7XHJcblxyXG5jbGFzcyBUeXAgZXh0ZW5kcyBTdGVwIHtcclxuICBwcmlvcml0eSA9IG5ldyBTdGVwUHJpb3JpdHkoMTEwKTtcclxuXHJcbiAgbGF6eSA9ICgpID0+IGltcG9ydCgnLi9UeXBTdGVwJyk7XHJcbiAgV3JhcHBlckNvbXBvbmVudCA9IFN0ZXBFcnJvckJvdW5kYXJ5O1xyXG5cclxuICB0b1N0cmluZygpIHtcclxuICAgIHJldHVybiAndHlwJztcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBpc0luRmx1eChnZXQ6IEdldHRlcikge1xyXG4gICAgaWYgKGdldCh3b3JraW5nT25Ccm9hZGJhbmRBdG9tKSkge1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIHJldHVybiBnZXQob3BlcmF0aXZlTW9kZUVuYWJsZWQkKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCB0eXAgPSBuZXcgVHlwKCk7XHJcbiJdLCJmaWxlIjoiQzovVXNlcnMvYWludHJvbmEvRGVza3RvcC9BcHAvcmVhY3QvbmFqL2xpYnMvc3RlcHMvc3JjL2xpYi90eXAvdHlwLnRzeCJ9