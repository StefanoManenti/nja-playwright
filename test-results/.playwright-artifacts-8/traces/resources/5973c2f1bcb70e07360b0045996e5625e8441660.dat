import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/ButtonPln.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/ButtonPln.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import clsx from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/clsx.js?v=0189a8d1";
import { Spinner } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-icons/src/index.ts";
export function ButtonPln({
  // @ts-expect-error cannot resolve this
  component: Component = "button",
  className,
  children,
  color,
  size,
  iconPosition,
  icon: Icon,
  loading,
  ...otherProps
}) {
  if (loading) {
    iconPosition = "before";
    Icon = Spinner;
  }
  return (
    // @ts-expect-error cannot resolve this
    /* @__PURE__ */ jsxDEV(
      Component,
      {
        "data-pln-atom": "button",
        className: clsx(color, size, className),
        ...otherProps,
        children: [
          Icon && iconPosition === "before" && /* @__PURE__ */ jsxDEV(Icon, {}, void 0, false, {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/ButtonPln.tsx",
            lineNumber: 41,
            columnNumber: 45
          }, this),
          size !== "icon-only" ? children : "",
          Icon && iconPosition === "after" && /* @__PURE__ */ jsxDEV(Icon, {}, void 0, false, {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/ButtonPln.tsx",
            lineNumber: 43,
            columnNumber: 44
          }, this)
        ]
      },
      void 0,
      true,
      {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/ButtonPln.tsx",
        lineNumber: 36,
        columnNumber: 5
      },
      this
    )
  );
}
_c = ButtonPln;
var _c;
$RefreshReg$(_c, "ButtonPln");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/ButtonPln.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBd0M0Qzs7Ozs7Z0JBeEM1QyxPQUFPQSxDQUFLLGFBQUlDO0FBQVcsY0FBUSwwQ0FBTztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQzFDLE9BQU9DLFVBQVU7QUFDakIsU0FBU0MsZUFBZTtBQWNqQixnQkFBU0MsVUFBK0M7QUFBQTtBQUFBLEVBRTdEQyxXQUFXQyxZQUFZO0FBQUEsRUFDdkJDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDLE1BQU1DO0FBQUFBLEVBQ05DO0FBQUFBLEVBQ0EsR0FBR0M7QUFDYyxHQUFHO0FBQ3BCLE1BQUlELFNBQVM7QUFDWEgsbUJBQWU7QUFDZkUsV0FBT1Y7QUFBQUEsRUFDVDtBQUVBO0FBQUE7QUFBQSxJQUVFO0FBQUEsTUFBQztBQUFBO0FBQUEsUUFDQyxpQkFBYztBQUFBLFFBQ2QsV0FBV0QsS0FBS08sT0FBT0MsTUFBTUgsU0FBUztBQUFBLFFBQ3RDLEdBQUlRO0FBQUFBLFFBRUhGO0FBQUFBLGtCQUFRRixpQkFBaUIsWUFBWSx1QkFBQyxVQUFEO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBQUs7QUFBQSxVQUMxQ0QsU0FBUyxjQUFjRixXQUFXO0FBQUEsVUFDbENLLFFBQVFGLGlCQUFpQixXQUFXLHVCQUFDLFVBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQSxpQkFBSztBQUFBO0FBQUE7QUFBQSxNQVA1QztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsSUFRQTtBQUFBO0FBRUo7QUFBQ0ssS0E3QmVaO0FBQVMsSUFBQVk7QUFBQUMsYUFBQUQsSUFBQSIsIm5hbWVzIjpbIlJlYWN0IiwiRWxlbWVudFR5cGUiLCJjbHN4IiwiU3Bpbm5lciIsIkJ1dHRvblBsbiIsImNvbXBvbmVudCIsIkNvbXBvbmVudCIsImNsYXNzTmFtZSIsImNoaWxkcmVuIiwiY29sb3IiLCJzaXplIiwiaWNvblBvc2l0aW9uIiwiaWNvbiIsIkljb24iLCJsb2FkaW5nIiwib3RoZXJQcm9wcyIsIl9jIiwiJFJlZnJlc2hSZWckIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbIkJ1dHRvblBsbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEVsZW1lbnRUeXBlIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcclxuaW1wb3J0IHsgU3Bpbm5lciB9IGZyb20gJ0BuYWotd28vdWktaWNvbnMnO1xyXG5cclxudHlwZSBCdXR0b25QbG5Qcm9wczxUIGV4dGVuZHMgJ2J1dHRvbicgfCAnYSc+ID0gT3duUHJvcHMgJiB7XHJcbiAgY29tcG9uZW50PzogVDtcclxufSAmIE9taXQ8UmVhY3QuQ29tcG9uZW50UHJvcHM8VD4sIGtleW9mIE93blByb3BzPjtcclxuXHJcbnR5cGUgT3duUHJvcHMgPSB7XHJcbiAgY29sb3I/OiAncHJpbWFyeScgfCAnc2Vjb25kYXJ5JztcclxuICBzaXplPzogJ2RlZmF1bHQnIHwgJ3NtYWxsJyB8ICdpY29uLW9ubHknO1xyXG4gIGljb25Qb3NpdGlvbj86ICdub25lJyB8ICdiZWZvcmUnIHwgJ2FmdGVyJztcclxuICBpY29uPzogRWxlbWVudFR5cGU7XHJcbiAgbG9hZGluZz86IGJvb2xlYW47XHJcbn07XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gQnV0dG9uUGxuPFQgZXh0ZW5kcyAnYnV0dG9uJyB8ICdhJyA9ICdidXR0b24nPih7XHJcbiAgLy8gQHRzLWV4cGVjdC1lcnJvciBjYW5ub3QgcmVzb2x2ZSB0aGlzXHJcbiAgY29tcG9uZW50OiBDb21wb25lbnQgPSAnYnV0dG9uJyxcclxuICBjbGFzc05hbWUsXHJcbiAgY2hpbGRyZW4sXHJcbiAgY29sb3IsXHJcbiAgc2l6ZSxcclxuICBpY29uUG9zaXRpb24sXHJcbiAgaWNvbjogSWNvbixcclxuICBsb2FkaW5nLFxyXG4gIC4uLm90aGVyUHJvcHNcclxufTogQnV0dG9uUGxuUHJvcHM8VD4pIHtcclxuICBpZiAobG9hZGluZykge1xyXG4gICAgaWNvblBvc2l0aW9uID0gJ2JlZm9yZScgYXMgY29uc3Q7XHJcbiAgICBJY29uID0gU3Bpbm5lcjtcclxuICB9XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIGNhbm5vdCByZXNvbHZlIHRoaXNcclxuICAgIDxDb21wb25lbnRcclxuICAgICAgZGF0YS1wbG4tYXRvbT1cImJ1dHRvblwiXHJcbiAgICAgIGNsYXNzTmFtZT17Y2xzeChjb2xvciwgc2l6ZSwgY2xhc3NOYW1lKX1cclxuICAgICAgey4uLm90aGVyUHJvcHN9XHJcbiAgICA+XHJcbiAgICAgIHtJY29uICYmIGljb25Qb3NpdGlvbiA9PT0gJ2JlZm9yZScgJiYgPEljb24gLz59XHJcbiAgICAgIHtzaXplICE9PSAnaWNvbi1vbmx5JyA/IGNoaWxkcmVuIDogJyd9XHJcbiAgICAgIHtJY29uICYmIGljb25Qb3NpdGlvbiA9PT0gJ2FmdGVyJyAmJiA8SWNvbiAvPn1cclxuICAgIDwvQ29tcG9uZW50PlxyXG4gICk7XHJcbn1cclxuIl0sImZpbGUiOiJDOi9Vc2Vycy9haW50cm9uYS9EZXNrdG9wL0FwcC9yZWFjdC9uYWovbGlicy91aS1hdG9tcy9zcmMvbGliL0J1dHRvblBsbi50c3gifQ==