globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || {
  cache: /* @__PURE__ */ new Map(),
  get(name, inst) {
    if (this.cache.has(name)) {
      return this.cache.get(name);
    }
    this.cache.set(name, inst);
    return inst;
  }
};
import { applicationMode } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/index.ts";
import { restoreDevModeFromUrl, restoreNewProductsFromUrl, restoreTestNewActivationsFromUrl } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/troubleshooting/state-url.ts";
export const onlyDev = restoreDevModeFromUrl();
const aba = restoreTestNewActivationsFromUrl();
export const ENABLE_SWITCH_IN = onlyDev;
export const ENABLE_SWITCH_IN_TRANSFER = onlyDev;
export const ENABLE_TRANSFER = onlyDev;
export const ENABLE_NEW_ACTIVATION = onlyDev || aba;
export const ENABLE_NEW_ACTIVATION_TS = onlyDev || applicationMode || aba;
export const ENABLE_CHANGE_OFFER = onlyDev;
export const ENABLE_NEW_PRODUCTS = restoreNewProductsFromUrl();
const canBypassChecks = onlyDev;
const bypassChecks = {
  current: false
};
export function areCheckBypassed() {
  if (!canBypassChecks) {
    return false;
  }
  return bypassChecks.current;
}
if (canBypassChecks) {
  window.bypassChecks = bypassChecks;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLFNBQVNBLHVCQUF1QjtBQUNoQyxTQUNFQyx1QkFDQUMsMkJBQ0FDLHdDQUNLO0FBRUEsYUFBTUMsVUFBVUgsc0JBQXNCO0FBQzdDLE1BQU1JLE1BQU1GLGlDQUFpQztBQUV0QyxhQUFNRyxtQkFBbUJGO0FBQ3pCLGFBQU1HLDRCQUE0Qkg7QUFDbEMsYUFBTUksa0JBQWtCSjtBQUN4QixhQUFNSyx3QkFBd0JMLFdBQVdDO0FBQ3pDLGFBQU1LLDJCQUEyQk4sV0FBV0osbUJBQW1CSztBQUMvRCxhQUFNTSxzQkFBc0JQO0FBRTVCLGFBQU1RLHNCQUFzQlYsMEJBQTBCO0FBRzdELE1BQU1XLGtCQUFrQlQ7QUFDeEIsTUFBTVUsZUFBZTtBQUFBLEVBQUVDLFNBQVM7QUFBTTtBQUUvQixnQkFBU0MsbUJBQW1CO0FBQ2pDLE1BQUksQ0FBQ0gsaUJBQWlCO0FBQ3BCLFdBQU87QUFBQSxFQUNUO0FBQ0EsU0FBT0MsYUFBYUM7QUFDdEI7QUFFQSxJQUFJRixpQkFBaUI7QUFDbkIsRUFBQ0ksT0FBZUgsZUFBZUE7QUFDakMiLCJuYW1lcyI6WyJhcHBsaWNhdGlvbk1vZGUiLCJyZXN0b3JlRGV2TW9kZUZyb21VcmwiLCJyZXN0b3JlTmV3UHJvZHVjdHNGcm9tVXJsIiwicmVzdG9yZVRlc3ROZXdBY3RpdmF0aW9uc0Zyb21VcmwiLCJvbmx5RGV2IiwiYWJhIiwiRU5BQkxFX1NXSVRDSF9JTiIsIkVOQUJMRV9TV0lUQ0hfSU5fVFJBTlNGRVIiLCJFTkFCTEVfVFJBTlNGRVIiLCJFTkFCTEVfTkVXX0FDVElWQVRJT04iLCJFTkFCTEVfTkVXX0FDVElWQVRJT05fVFMiLCJFTkFCTEVfQ0hBTkdFX09GRkVSIiwiRU5BQkxFX05FV19QUk9EVUNUUyIsImNhbkJ5cGFzc0NoZWNrcyIsImJ5cGFzc0NoZWNrcyIsImN1cnJlbnQiLCJhcmVDaGVja0J5cGFzc2VkIiwid2luZG93Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbImZsYWdzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFwcGxpY2F0aW9uTW9kZSB9IGZyb20gJ0BuYWotd28vdXRpbCc7XHJcbmltcG9ydCB7XHJcbiAgcmVzdG9yZURldk1vZGVGcm9tVXJsLFxyXG4gIHJlc3RvcmVOZXdQcm9kdWN0c0Zyb21VcmwsXHJcbiAgcmVzdG9yZVRlc3ROZXdBY3RpdmF0aW9uc0Zyb21VcmwsXHJcbn0gZnJvbSAnLi4vdHJvdWJsZXNob290aW5nL3N0YXRlLXVybCc7XHJcblxyXG5leHBvcnQgY29uc3Qgb25seURldiA9IHJlc3RvcmVEZXZNb2RlRnJvbVVybCgpOyAvLyBFbmFibGUgb25seSBpbiBkZXZlbG9wbWVudFxyXG5jb25zdCBhYmEgPSByZXN0b3JlVGVzdE5ld0FjdGl2YXRpb25zRnJvbVVybCgpO1xyXG5cclxuZXhwb3J0IGNvbnN0IEVOQUJMRV9TV0lUQ0hfSU4gPSBvbmx5RGV2O1xyXG5leHBvcnQgY29uc3QgRU5BQkxFX1NXSVRDSF9JTl9UUkFOU0ZFUiA9IG9ubHlEZXY7XHJcbmV4cG9ydCBjb25zdCBFTkFCTEVfVFJBTlNGRVIgPSBvbmx5RGV2O1xyXG5leHBvcnQgY29uc3QgRU5BQkxFX05FV19BQ1RJVkFUSU9OID0gb25seURldiB8fCBhYmE7XHJcbmV4cG9ydCBjb25zdCBFTkFCTEVfTkVXX0FDVElWQVRJT05fVFMgPSBvbmx5RGV2IHx8IGFwcGxpY2F0aW9uTW9kZSB8fCBhYmE7XHJcbmV4cG9ydCBjb25zdCBFTkFCTEVfQ0hBTkdFX09GRkVSID0gb25seURldjtcclxuXHJcbmV4cG9ydCBjb25zdCBFTkFCTEVfTkVXX1BST0RVQ1RTID0gcmVzdG9yZU5ld1Byb2R1Y3RzRnJvbVVybCgpO1xyXG4vKiBCWVBBU1MgQ0hFQ0tTICovXHJcblxyXG5jb25zdCBjYW5CeXBhc3NDaGVja3MgPSBvbmx5RGV2O1xyXG5jb25zdCBieXBhc3NDaGVja3MgPSB7IGN1cnJlbnQ6IGZhbHNlIH07XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYXJlQ2hlY2tCeXBhc3NlZCgpIHtcclxuICBpZiAoIWNhbkJ5cGFzc0NoZWNrcykge1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuICByZXR1cm4gYnlwYXNzQ2hlY2tzLmN1cnJlbnQ7XHJcbn1cclxuXHJcbmlmIChjYW5CeXBhc3NDaGVja3MpIHtcclxuICAod2luZG93IGFzIGFueSkuYnlwYXNzQ2hlY2tzID0gYnlwYXNzQ2hlY2tzO1xyXG59XHJcbiJdLCJmaWxlIjoiQzovVXNlcnMvYWludHJvbmEvRGVza3RvcC9BcHAvcmVhY3QvbmFqL2xpYnMvZGF0YS1hY2Nlc3Mvc3JjL2xpYi91dGlscy9mbGFncy50cyJ9