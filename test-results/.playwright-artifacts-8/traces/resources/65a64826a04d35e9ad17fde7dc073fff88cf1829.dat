import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/lib/errors/no-connection.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const Fragment = __vite__cjsImport0_react_jsxDevRuntime["Fragment"]; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/lib/errors/no-connection.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import { ButtonPln } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/index.ts";
import { WiFiIcon } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-icons/src/index.ts";
import { FullScreenError } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/lib/FullScreenError.tsx";
export function NoConnectionFullScreenError() {
  return /* @__PURE__ */ jsxDEV(
    FullScreenError,
    {
      icon: WiFiIcon,
      title: /* @__PURE__ */ jsxDEV(Fragment, { children: "Nessuna connessione disponibile" }, void 0, false, {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/lib/errors/no-connection.tsx",
        lineNumber: 9,
        columnNumber: 14
      }, this),
      description: /* @__PURE__ */ jsxDEV(Fragment, { children: "Verifica la tua connessione e prova a ricaricare la pagina." }, void 0, false, {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/lib/errors/no-connection.tsx",
        lineNumber: 11,
        columnNumber: 7
      }, this),
      cta: /* @__PURE__ */ jsxDEV(ButtonPln, { "data-cs-override-id": "NO_CONNECTION_ERROR", color: "primary", children: "Ricarica la pagina" }, void 0, false, {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/lib/errors/no-connection.tsx",
        lineNumber: 14,
        columnNumber: 7
      }, this)
    },
    void 0,
    false,
    {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/lib/errors/no-connection.tsx",
      lineNumber: 7,
      columnNumber: 5
    },
    this
  );
}
_c = NoConnectionFullScreenError;
var _c;
$RefreshReg$(_c, "NoConnectionFullScreenError");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/lib/errors/no-connection.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBUWE7Ozs7O2dCQVJiLE9BQVNBLGNBQVM7QUFBUSx3REFBa0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQzVDLFNBQVNDLGdCQUFnQjtBQUN6QixTQUFTQyx1QkFBdUI7QUFFekIsZ0JBQVNDLDhCQUE4QjtBQUM1QyxTQUNFO0FBQUEsSUFBQztBQUFBO0FBQUEsTUFDQyxNQUFNRjtBQUFBQSxNQUNOLE9BQU8sbUNBQUUsK0NBQUY7QUFBQTtBQUFBO0FBQUE7QUFBQSxhQUFpQztBQUFBLE1BQ3hDLGFBQ0UsbUNBQUUsMkVBQUY7QUFBQTtBQUFBO0FBQUE7QUFBQSxhQUE2RDtBQUFBLE1BRS9ELEtBQ0UsdUJBQUMsYUFBVSx1QkFBcUIsdUJBQXVCLE9BQU0sV0FBVSxrQ0FBdkU7QUFBQTtBQUFBO0FBQUE7QUFBQSxhQUVBO0FBQUE7QUFBQSxJQVRKO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQVVHO0FBR1A7QUFBQ0csS0FmZUQ7QUFBMkIsSUFBQUM7QUFBQUMsYUFBQUQsSUFBQSIsIm5hbWVzIjpbIkJ1dHRvblBsbiIsIldpRmlJY29uIiwiRnVsbFNjcmVlbkVycm9yIiwiTm9Db25uZWN0aW9uRnVsbFNjcmVlbkVycm9yIiwiX2MiLCIkUmVmcmVzaFJlZyQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsibm8tY29ubmVjdGlvbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnV0dG9uUGxuIH0gZnJvbSAnQG5hai13by91aS1hdG9tcyc7XHJcbmltcG9ydCB7IFdpRmlJY29uIH0gZnJvbSAnQG5hai13by91aS1pY29ucyc7XHJcbmltcG9ydCB7IEZ1bGxTY3JlZW5FcnJvciB9IGZyb20gJy4uL0Z1bGxTY3JlZW5FcnJvcic7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gTm9Db25uZWN0aW9uRnVsbFNjcmVlbkVycm9yKCkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8RnVsbFNjcmVlbkVycm9yXHJcbiAgICAgIGljb249e1dpRmlJY29ufVxyXG4gICAgICB0aXRsZT17PD5OZXNzdW5hIGNvbm5lc3Npb25lIGRpc3BvbmliaWxlPC8+fVxyXG4gICAgICBkZXNjcmlwdGlvbj17XHJcbiAgICAgICAgPD5WZXJpZmljYSBsYSB0dWEgY29ubmVzc2lvbmUgZSBwcm92YSBhIHJpY2FyaWNhcmUgbGEgcGFnaW5hLjwvPlxyXG4gICAgICB9XHJcbiAgICAgIGN0YT17XHJcbiAgICAgICAgPEJ1dHRvblBsbiBkYXRhLWNzLW92ZXJyaWRlLWlkPXsnTk9fQ09OTkVDVElPTl9FUlJPUid9IGNvbG9yPVwicHJpbWFyeVwiPlxyXG4gICAgICAgICAgUmljYXJpY2EgbGEgcGFnaW5hXHJcbiAgICAgICAgPC9CdXR0b25QbG4+XHJcbiAgICAgIH1cclxuICAgIC8+XHJcbiAgKTtcclxufVxyXG4iXSwiZmlsZSI6IkM6L1VzZXJzL2FpbnRyb25hL0Rlc2t0b3AvQXBwL3JlYWN0L25hai9saWJzL3VpLW9yZ2FuaXNtcy9zcmMvbGliL2Vycm9ycy9uby1jb25uZWN0aW9uLnRzeCJ9