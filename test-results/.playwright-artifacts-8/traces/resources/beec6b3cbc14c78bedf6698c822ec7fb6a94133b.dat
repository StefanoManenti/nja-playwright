import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/LinkContent.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/LinkContent.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import { NavigationIcon, Spinner } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-icons/src/index.ts";
import clsx from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/clsx.js?v=0189a8d1";
import classes from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/LinkContent.module.less";
export function LinkContent({
  children,
  external,
  icon,
  iconSize = "normal",
  underline,
  component: Component = "span",
  loading,
  withPadding,
  disabled,
  className,
  ...otherProps
}) {
  return /* @__PURE__ */ jsxDEV(
    Component,
    {
      ...otherProps,
      disabled: disabled || loading,
      className: clsx(
        classes.root,
        underline && classes.underline,
        withPadding && classes.withPadding,
        (icon || external || loading) && classes.withIcon,
        className
      ),
      children: [
        icon && /* @__PURE__ */ jsxDEV(
          "div",
          {
            className: clsx(
              classes.icon,
              iconSize === "large" && classes.iconSizeLarge
            ),
            children: icon
          },
          void 0,
          false,
          {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/LinkContent.tsx",
            lineNumber: 47,
            columnNumber: 7
          },
          this
        ),
        children,
        external && /* @__PURE__ */ jsxDEV(NavigationIcon, { "aria-label": "Apri in un nuovo tab" }, void 0, false, {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/LinkContent.tsx",
          lineNumber: 57,
          columnNumber: 20
        }, this),
        loading && /* @__PURE__ */ jsxDEV(Spinner, {}, void 0, false, {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/LinkContent.tsx",
          lineNumber: 58,
          columnNumber: 19
        }, this)
      ]
    },
    void 0,
    true,
    {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/LinkContent.tsx",
      lineNumber: 35,
      columnNumber: 5
    },
    this
  );
}
_c = LinkContent;
var _c;
$RefreshReg$(_c, "LinkContent");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/LinkContent.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBOENROzs7OztnQkE5Q1IsT0FBU0EsY0FBZ0JDO0FBQUFBLE1BQU8sUUFBUSwwQ0FBa0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQzFELE9BQU9DLFVBQVU7QUFNakIsT0FBT0MsYUFBYTtBQWFiLGdCQUFTQyxZQUFtQztBQUFBLEVBQ2pEQztBQUFBQSxFQUNBQztBQUFBQSxFQUNBQztBQUFBQSxFQUNBQyxXQUFXO0FBQUEsRUFDWEM7QUFBQUEsRUFDQUMsV0FBV0MsWUFBWTtBQUFBLEVBQ3ZCQztBQUFBQSxFQUNBQztBQUFBQSxFQUNBQztBQUFBQSxFQUNBQztBQUFBQSxFQUNBLEdBQUdDO0FBQ2dCLEdBQUc7QUFDdEIsU0FDRTtBQUFBLElBQUM7QUFBQTtBQUFBLE1BQ0MsR0FBSUE7QUFBQUEsTUFDSixVQUFVRixZQUFZRjtBQUFBQSxNQUN0QixXQUFXVjtBQUFBQSxRQUNUQyxRQUFRYztBQUFBQSxRQUNSUixhQUFhTixRQUFRTTtBQUFBQSxRQUNyQkksZUFBZVYsUUFBUVU7QUFBQUEsU0FDdEJOLFFBQVFELFlBQVlNLFlBQVlULFFBQVFlO0FBQUFBLFFBQ3pDSDtBQUFBQSxNQUNGO0FBQUEsTUFFQ1I7QUFBQUEsZ0JBQ0M7QUFBQSxVQUFDO0FBQUE7QUFBQSxZQUNDLFdBQVdMO0FBQUFBLGNBQ1RDLFFBQVFJO0FBQUFBLGNBQ1JDLGFBQWEsV0FBV0wsUUFBUWdCO0FBQUFBLFlBQ2xDO0FBQUEsWUFFQ1o7QUFBQUE7QUFBQUEsVUFOSDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsUUFPQTtBQUFBLFFBRURGO0FBQUFBLFFBQ0FDLFlBQVksdUJBQUMsa0JBQWUsY0FBVywwQkFBM0I7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQUFpRDtBQUFBLFFBQzdETSxXQUFXLHVCQUFDLGFBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQUFRO0FBQUE7QUFBQTtBQUFBLElBdkJ0QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUF3QkE7QUFFSjtBQUFDUSxLQXhDZWhCO0FBQVcsSUFBQWdCO0FBQUFDLGFBQUFELElBQUEiLCJuYW1lcyI6WyJOYXZpZ2F0aW9uSWNvbiIsIlNwaW5uZXIiLCJjbHN4IiwiY2xhc3NlcyIsIkxpbmtDb250ZW50IiwiY2hpbGRyZW4iLCJleHRlcm5hbCIsImljb24iLCJpY29uU2l6ZSIsInVuZGVybGluZSIsImNvbXBvbmVudCIsIkNvbXBvbmVudCIsImxvYWRpbmciLCJ3aXRoUGFkZGluZyIsImRpc2FibGVkIiwiY2xhc3NOYW1lIiwib3RoZXJQcm9wcyIsInJvb3QiLCJ3aXRoSWNvbiIsImljb25TaXplTGFyZ2UiLCJfYyIsIiRSZWZyZXNoUmVnJCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJMaW5rQ29udGVudC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmF2aWdhdGlvbkljb24sIFNwaW5uZXIgfSBmcm9tICdAbmFqLXdvL3VpLWljb25zJztcclxuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XHJcbmltcG9ydCB7XHJcbiAgdHlwZSBDb21wb25lbnRQcm9wcyxcclxuICB0eXBlIEVsZW1lbnRUeXBlLFxyXG4gIHR5cGUgUmVhY3ROb2RlLFxyXG59IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IGNsYXNzZXMgZnJvbSAnLi9MaW5rQ29udGVudC5tb2R1bGUubGVzcyc7XHJcblxyXG50eXBlIExpbmtDb250ZW50UHJvcHM8VCBleHRlbmRzIEVsZW1lbnRUeXBlPiA9IHtcclxuICBjaGlsZHJlbjogUmVhY3ROb2RlO1xyXG4gIGV4dGVybmFsPzogYm9vbGVhbjtcclxuICBpY29uPzogUmVhY3ROb2RlO1xyXG4gIGljb25TaXplPzogJ25vcm1hbCcgfCAnbGFyZ2UnO1xyXG4gIHVuZGVybGluZT86IGJvb2xlYW47XHJcbiAgbG9hZGluZz86IGJvb2xlYW47XHJcbiAgd2l0aFBhZGRpbmc/OiBib29sZWFuO1xyXG4gIGNvbXBvbmVudD86IFQ7XHJcbn0gJiBDb21wb25lbnRQcm9wczxUPjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBMaW5rQ29udGVudDxUIGV4dGVuZHMgRWxlbWVudFR5cGU+KHtcclxuICBjaGlsZHJlbixcclxuICBleHRlcm5hbCxcclxuICBpY29uLFxyXG4gIGljb25TaXplID0gJ25vcm1hbCcsXHJcbiAgdW5kZXJsaW5lLFxyXG4gIGNvbXBvbmVudDogQ29tcG9uZW50ID0gJ3NwYW4nLFxyXG4gIGxvYWRpbmcsXHJcbiAgd2l0aFBhZGRpbmcsXHJcbiAgZGlzYWJsZWQsXHJcbiAgY2xhc3NOYW1lLFxyXG4gIC4uLm90aGVyUHJvcHNcclxufTogTGlua0NvbnRlbnRQcm9wczxUPikge1xyXG4gIHJldHVybiAoXHJcbiAgICA8Q29tcG9uZW50XHJcbiAgICAgIHsuLi5vdGhlclByb3BzfVxyXG4gICAgICBkaXNhYmxlZD17ZGlzYWJsZWQgfHwgbG9hZGluZ31cclxuICAgICAgY2xhc3NOYW1lPXtjbHN4KFxyXG4gICAgICAgIGNsYXNzZXMucm9vdCxcclxuICAgICAgICB1bmRlcmxpbmUgJiYgY2xhc3Nlcy51bmRlcmxpbmUsXHJcbiAgICAgICAgd2l0aFBhZGRpbmcgJiYgY2xhc3Nlcy53aXRoUGFkZGluZyxcclxuICAgICAgICAoaWNvbiB8fCBleHRlcm5hbCB8fCBsb2FkaW5nKSAmJiBjbGFzc2VzLndpdGhJY29uLFxyXG4gICAgICAgIGNsYXNzTmFtZVxyXG4gICAgICApfVxyXG4gICAgPlxyXG4gICAgICB7aWNvbiAmJiAoXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY2xhc3NOYW1lPXtjbHN4KFxyXG4gICAgICAgICAgICBjbGFzc2VzLmljb24sXHJcbiAgICAgICAgICAgIGljb25TaXplID09PSAnbGFyZ2UnICYmIGNsYXNzZXMuaWNvblNpemVMYXJnZVxyXG4gICAgICAgICAgKX1cclxuICAgICAgICA+XHJcbiAgICAgICAgICB7aWNvbn1cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgKX1cclxuICAgICAge2NoaWxkcmVufVxyXG4gICAgICB7ZXh0ZXJuYWwgJiYgPE5hdmlnYXRpb25JY29uIGFyaWEtbGFiZWw9J0FwcmkgaW4gdW4gbnVvdm8gdGFiJy8+fVxyXG4gICAgICB7bG9hZGluZyAmJiA8U3Bpbm5lciAvPn1cclxuICAgIDwvQ29tcG9uZW50PlxyXG4gICk7XHJcbn1cclxuIl0sImZpbGUiOiJDOi9Vc2Vycy9haW50cm9uYS9EZXNrdG9wL0FwcC9yZWFjdC9uYWovbGlicy91aS1hdG9tcy9zcmMvbGliL0xpbmtDb250ZW50LnRzeCJ9