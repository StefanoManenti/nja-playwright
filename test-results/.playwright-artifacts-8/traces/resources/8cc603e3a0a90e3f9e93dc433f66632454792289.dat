import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/tracking-react/src/lib/tracking-page.tsx");import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/tracking-react/src/lib/tracking-page.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$(), _s2 = $RefreshSig$();
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import __vite__cjsImport2_react from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react.js?v=0189a8d1"; const useEffect = __vite__cjsImport2_react["useEffect"]; const useRef = __vite__cjsImport2_react["useRef"]; const useState = __vite__cjsImport2_react["useState"];
import { useTracking } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/tracking-react/src/lib/tracking-react.tsx";
import { useTrackingState } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/tracking-react/src/lib/tracking-state.tsx";
export function useTrackingPage(getEvent) {
  _s();
  const initialized = useRef(false);
  const tracking = useTracking();
  const { get } = useTrackingState();
  useEffect(() => {
    if (!initialized.current) {
      initialized.current = true;
      getEvent(get).then((event) => tracking.push(event));
    }
  }, []);
  return tracking;
}
_s(useTrackingPage, "7fmU7+Se/WDplgWQOOmy3MwNzsI=", false, function() {
  return [useTracking, useTrackingState];
});
export const useTagId = () => {
  _s2();
  const { get } = useTrackingState();
  const [tagId, setTagId] = useState("");
  useEffect(() => {
    const getTagId = async () => {
      const macroStep = await get("macro_step");
      const microStep = await get("micro_step");
      setTagId(`${macroStep?.toUpperCase()}_${microStep?.toUpperCase()}`);
    };
    getTagId();
  }, []);
  return tagId;
};
_s2(useTagId, "vcQ3sPsyMlFx+SbrZm8SblSh728=", false, function() {
  return [useTrackingState];
});
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/tracking-react/src/lib/tracking-page.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7d0RBQW9DO0FBQUEsVUFBUSxJQUFPO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNuRCxTQUFTQSxtQkFBbUI7QUFDNUIsU0FBbUJDLHdCQUF3QjtBQUVwQyxnQkFBU0MsZ0JBQWdCQyxVQUEwQztBQUFBQyxLQUFBO0FBQ3hFLFFBQU1DLGNBQWNDLE9BQU8sS0FBSztBQUNoQyxRQUFNQyxXQUFXUCxZQUFZO0FBQzdCLFFBQU0sRUFBRVEsSUFBSSxJQUFJUCxpQkFBaUI7QUFFakNRLFlBQVUsTUFBTTtBQUNkLFFBQUksQ0FBQ0osWUFBWUssU0FBUztBQUN4Qkwsa0JBQVlLLFVBQVU7QUFDdEJQLGVBQVNLLEdBQUcsRUFBRUcsS0FBSyxDQUFDQyxVQUFVTCxTQUFTTSxLQUFLRCxLQUFLLENBQUM7QUFBQSxJQUNwRDtBQUFBLEVBQ0YsR0FBRyxFQUFFO0FBRUwsU0FBT0w7QUFDVDtBQUFDSCxHQWJlRixpQkFBZTtBQUFBLFVBRVpGLGFBQ0RDLGdCQUFnQjtBQUFBO0FBWTNCLGFBQU1hLFdBQVdBLE1BQU07QUFBQUMsTUFBQTtBQUM1QixRQUFNLEVBQUVQLElBQUksSUFBSVAsaUJBQWlCO0FBQ2pDLFFBQU0sQ0FBQ2UsT0FBT0MsUUFBUSxJQUFJQyxTQUFTLEVBQUU7QUFFckNULFlBQVUsTUFBTTtBQUNkLFVBQU1VLFdBQVcsWUFBWTtBQUMzQixZQUFNQyxZQUFZLE1BQU1aLElBQUksWUFBWTtBQUN4QyxZQUFNYSxZQUFZLE1BQU1iLElBQUksWUFBWTtBQUV4Q1MsZUFBUyxHQUFHRyxXQUFXRSxZQUFZLENBQUMsSUFBSUQsV0FBV0MsWUFBWSxDQUFDLEVBQUU7QUFBQSxJQUNwRTtBQUNBSCxhQUFTO0FBQUEsRUFDWCxHQUFHLEVBQUU7QUFFTCxTQUFPSDtBQUNUO0FBQUVELElBZldELFVBQVE7QUFBQSxVQUNIYixnQkFBZ0I7QUFBQSIsIm5hbWVzIjpbInVzZVRyYWNraW5nIiwidXNlVHJhY2tpbmdTdGF0ZSIsInVzZVRyYWNraW5nUGFnZSIsImdldEV2ZW50IiwiX3MiLCJpbml0aWFsaXplZCIsInVzZVJlZiIsInRyYWNraW5nIiwiZ2V0IiwidXNlRWZmZWN0IiwiY3VycmVudCIsInRoZW4iLCJldmVudCIsInB1c2giLCJ1c2VUYWdJZCIsIl9zMiIsInRhZ0lkIiwic2V0VGFnSWQiLCJ1c2VTdGF0ZSIsImdldFRhZ0lkIiwibWFjcm9TdGVwIiwibWljcm9TdGVwIiwidG9VcHBlckNhc2UiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsidHJhY2tpbmctcGFnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VUcmFja2luZyB9IGZyb20gJy4vdHJhY2tpbmctcmVhY3QnO1xyXG5pbXBvcnQgeyB0eXBlIEdldCwgdXNlVHJhY2tpbmdTdGF0ZSB9IGZyb20gJy4vdHJhY2tpbmctc3RhdGUnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZVRyYWNraW5nUGFnZShnZXRFdmVudDogKGdldDogR2V0KSA9PiBQcm9taXNlPHVua25vd24+KSB7XHJcbiAgY29uc3QgaW5pdGlhbGl6ZWQgPSB1c2VSZWYoZmFsc2UpO1xyXG4gIGNvbnN0IHRyYWNraW5nID0gdXNlVHJhY2tpbmcoKTtcclxuICBjb25zdCB7IGdldCB9ID0gdXNlVHJhY2tpbmdTdGF0ZSgpO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgaWYgKCFpbml0aWFsaXplZC5jdXJyZW50KSB7XHJcbiAgICAgIGluaXRpYWxpemVkLmN1cnJlbnQgPSB0cnVlO1xyXG4gICAgICBnZXRFdmVudChnZXQpLnRoZW4oKGV2ZW50KSA9PiB0cmFja2luZy5wdXNoKGV2ZW50KSk7XHJcbiAgICB9XHJcbiAgfSwgW10pO1xyXG5cclxuICByZXR1cm4gdHJhY2tpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCB1c2VUYWdJZCA9ICgpID0+IHtcclxuICBjb25zdCB7IGdldCB9ID0gdXNlVHJhY2tpbmdTdGF0ZSgpO1xyXG4gIGNvbnN0IFt0YWdJZCwgc2V0VGFnSWRdID0gdXNlU3RhdGUoJycpO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgY29uc3QgZ2V0VGFnSWQgPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgIGNvbnN0IG1hY3JvU3RlcCA9IGF3YWl0IGdldCgnbWFjcm9fc3RlcCcpO1xyXG4gICAgICBjb25zdCBtaWNyb1N0ZXAgPSBhd2FpdCBnZXQoJ21pY3JvX3N0ZXAnKTtcclxuXHJcbiAgICAgIHNldFRhZ0lkKGAke21hY3JvU3RlcD8udG9VcHBlckNhc2UoKX1fJHttaWNyb1N0ZXA/LnRvVXBwZXJDYXNlKCl9YCk7XHJcbiAgICB9O1xyXG4gICAgZ2V0VGFnSWQoKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiB0YWdJZDtcclxufTtcclxuIl0sImZpbGUiOiJDOi9Vc2Vycy9haW50cm9uYS9EZXNrdG9wL0FwcC9yZWFjdC9uYWovbGlicy90cmFja2luZy1yZWFjdC9zcmMvbGliL3RyYWNraW5nLXBhZ2UudHN4In0=