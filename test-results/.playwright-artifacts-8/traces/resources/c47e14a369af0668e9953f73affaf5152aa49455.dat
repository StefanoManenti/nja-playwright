globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || {
  cache: /* @__PURE__ */ new Map(),
  get(name, inst) {
    if (this.cache.has(name)) {
      return this.cache.get(name);
    }
    this.cache.set(name, inst);
    return inst;
  }
};
import { checkMattoncini } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/offerta/corrispettivi/coupon.ts";
import { calcolaScontiProdotti } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/offerta/corrispettivi/sconti-prodotti.ts";
import { PriceCalculatorV2 } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/offerta/corrispettivi/utils.ts";
import { parseCommercializzazioneVendita } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/offerta/corrispettivi/commercializzazione-vendita.ts";
export function generaCorrispettiviFissiSmall(offer, opzioni, scontistica = {}) {
  const {
    discount,
    discounts,
    texts
  } = calcolaScontiProdotti(offer, opzioni);
  const toReturn = {
    prices: [],
    discounts,
    texts,
    greenEnergyIncluded: offer.verde.luceInclusa
    // greenEnergyPrice: {
    //   price: sconti?.prezzoEnergiaVerde.
    //   unit: sconti?.unitaEnergiaVerde,
    //   info: '(IVA ESCLUSA)',
    // },
  };
  let extraLuce = null;
  if (offer.costiDiCommercializzazione.luce) {
    const parsed = parseCommercializzazioneVendita(offer.costiDiCommercializzazione.luce, "POWER", scontistica);
    if (parsed) {
      extraLuce = [parsed];
    }
  }
  let extraGas = null;
  if (offer.costiDiCommercializzazione.gas) {
    const parsed = parseCommercializzazioneVendita(offer.costiDiCommercializzazione.gas, "GAS", scontistica);
    if (parsed) {
      extraGas = [parsed];
    }
  }
  {
    const p = new PriceCalculatorV2(!!scontistica.prezziBarratiLuce).addDiscount({
      from: "original",
      applyAlsoToOldPrice: true,
      condition: true,
      percent: discount,
      tag: "after-discounts"
    }).addDiscount({
      condition: checkMattoncini(scontistica.coupon?.infoLuce, "LS003"),
      percent: scontistica.coupon?.infoLuce?.percentValue,
      from: "after-discounts"
    }).addDiscount({
      condition: checkMattoncini(scontistica.coupon?.infoLuce, "LS005", "LS006"),
      amount: scontistica.coupon?.infoLuce?.listPrice
    });
    const itemsMono = {
      header: "LUCE Monoraria",
      rows: [{
        name: {
          main: "24h",
          descriptions: ["", "tutti i giorni"]
        },
        price: {
          type: "normal",
          unit: "€/kWh",
          ...p.apply(offer.prezzi.luce?.monoraria)
        }
      }]
    };
    const accorpaF1F2 = offer.prezzi.luce?.trioraria?.f1 === offer.prezzi.luce?.trioraria?.f2;
    const rows = accorpaF1F2 ? [{
      name: {
        main: "LUCE F1-F2",
        descriptions: ["07:00 - 23:00", "lun-sab escluse festività"]
      },
      price: {
        type: "normal",
        unit: "€/kWh",
        ...p.apply(offer.prezzi.luce?.trioraria?.f1)
      }
    }] : [{
      name: {
        main: "LUCE F1",
        descriptions: ["08:00 - 19:00", "lun-ven escluse festività"]
      },
      price: {
        type: "normal",
        unit: "€/kWh",
        ...p.apply(offer.prezzi.luce?.trioraria?.f1)
      }
    }, {
      name: {
        main: "LUCE F2",
        descriptions: ["", "07:00 - 08:00, 19:00 - 23:00 lun-ven; 07:00 - 23:00 sab; escluse festività"]
      },
      price: {
        type: "normal",
        unit: "€/kWh",
        ...p.apply(offer.prezzi.luce?.trioraria?.f2)
      }
    }];
    const itemsMulti = {
      header: accorpaF1F2 ? "LUCE Bioraria" : "LUCE Trioraria",
      rows: [...rows, {
        name: {
          main: "LUCE F3",
          descriptions: ["23:00 - 07:00", "domenica e festività"]
        },
        price: {
          type: "normal",
          unit: "€/kWh",
          ...p.apply(offer.prezzi.luce?.trioraria?.f3)
        }
      }]
    };
    if (extraLuce) {
      itemsMono.extra = extraLuce;
      itemsMulti.extra = extraLuce;
    }
    toReturn.prices.push(itemsMono);
    toReturn.prices.push(itemsMulti);
  }
  {
    const p = new PriceCalculatorV2(!!scontistica.prezziBarratiGas).addDiscount({
      from: "original",
      applyAlsoToOldPrice: true,
      condition: true,
      percent: discount,
      tag: "after-discounts"
    }).addDiscount({
      condition: checkMattoncini(scontistica.coupon?.infoGas, "GS001"),
      percent: scontistica.coupon?.infoGas?.percentValue,
      from: "after-discounts"
    }).addDiscount({
      condition: checkMattoncini(scontistica.coupon?.infoGas, "GS004", "GS009"),
      amount: scontistica.coupon?.infoGas?.listPrice
    });
    const items = {
      rows: [{
        name: {
          main: "GAS",
          descriptions: ["", ""]
        },
        price: {
          type: "normal",
          unit: "€/Smc",
          ...p.apply(offer.prezzi.gas)
        }
      }]
    };
    if (extraGas) items.extra = extraGas;
    toReturn.prices.push(items);
  }
  if (offer.verde.luceInclusa) {
    toReturn.prices.push({
      rows: [{
        name: {
          main: "ENERGIA VERDE"
        },
        price: {
          type: "included",
          info: "Inclusa"
        }
      }]
    });
  }
  if (offer.verde.gasIncluso) {
    toReturn.prices.push({
      rows: [{
        name: {
          main: "Gas con CO₂ compensata"
        },
        price: {
          type: "included",
          info: "Incluso"
        }
      }]
    });
  }
  return toReturn;
}

//# sourceMappingURL=data:application/json;base64,