import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const Fragment = __vite__cjsImport0_react_jsxDevRuntime["Fragment"]; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$();
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import {
  addressAtom,
  normalizeAddress,
  residentialAddressSameAsSupplyAtom,
  saveContracts$,
  supplyAddressSelectedAtom
} from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/index.ts";
import { useEngine } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/engine/src/index.ts";
import {
  GlobalTrackingState,
  useTrackingWeborderUnicoPage,
  WeborderTrackingState
} from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/tracking-app/src/index.ts";
import { HomeCityApartment, PlusCircle } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-icons/src/index.ts";
import {
  CardInput,
  StepContainer,
  StepFieldset,
  StepTitle
} from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-molecules/src/index.ts";
import { StepCtaConnected, StepLayout } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/index.ts";
import { atom, useAtomValue } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/jotai.js?v=0189a8d1";
import { useAtomCallback } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/jotai_utils.js?v=0189a8d1";
import __vite__cjsImport11_react from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react.js?v=0189a8d1"; const useCallback = __vite__cjsImport11_react["useCallback"]; const useId = __vite__cjsImport11_react["useId"];
import {
  Controller,
  FormProvider,
  useForm
} from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react-hook-form.js?v=0189a8d1";
import { AddressInput } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressInput.tsx";
import { fromYesNo, toYesNo } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/index.ts";
const defaultValuesAtom = globalThis.jotaiAtomCache.get(
  "C:\\Users\\aintrona\\Desktop\\App\\react\\naj\\libs\\steps\\src\\lib\\address\\AddressSwitchInStep.tsx/defaultValuesAtom",
  atom(async (get) => {
    const residentialAddress = await get(addressAtom);
    const addressSupply = await get(supplyAddressSelectedAtom);
    const residentialAddressSameAsSupply = await get(
      residentialAddressSameAsSupplyAtom
    );
    return [
      {
        addressSupply: addressSupply?.asSuggestion(),
        same: toYesNo(residentialAddressSameAsSupply)
      },
      {
        residentialAddressSuggestion: residentialAddress.asSuggestion()
      }
    ];
  })
);
defaultValuesAtom.debugLabel = "defaultValuesAtom";
export default function AddressSupplyStepWrapped() {
  return /* @__PURE__ */ jsxDEV(GlobalTrackingState, { children: /* @__PURE__ */ jsxDEV(
    WeborderTrackingState,
    {
      macro_step: "address_switch_in",
      micro_step: "address_switch_in",
      children: /* @__PURE__ */ jsxDEV(AddressSupplyStep, {}, void 0, false, {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
        lineNumber: 66,
        columnNumber: 9
      }, this)
    },
    void 0,
    false,
    {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
      lineNumber: 62,
      columnNumber: 7
    },
    this
  ) }, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
    lineNumber: 61,
    columnNumber: 5
  }, this);
}
_c = AddressSupplyStepWrapped;
function AddressSupplyStep() {
  _s();
  useTrackingWeborderUnicoPage();
  const { next } = useEngine();
  const formId = useId();
  const [defaultValues, { residentialAddressSuggestion }] = useAtomValue(
    defaultValuesAtom,
    { delay: 0 }
  );
  const methods = useForm({
    defaultValues,
    mode: "onChange"
  });
  const { register, handleSubmit, watch } = methods;
  const onSubmit = useAtomCallback(
    useCallback(
      async (get, set, data) => {
        const same = fromYesNo(data?.same);
        const egonAddress = same ? await get(addressAtom) : await normalizeAddress(data.addressSupply);
        await set(supplyAddressSelectedAtom, egonAddress);
        await set(saveContracts$);
        next();
      },
      [next]
    )
  );
  const isSame = watch("same") === "YES";
  return /* @__PURE__ */ jsxDEV(FormProvider, { ...methods, children: /* @__PURE__ */ jsxDEV(StepLayout, { cta: /* @__PURE__ */ jsxDEV(StepCtaConnected, { form: formId }, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
    lineNumber: 109,
    columnNumber: 24
  }, this), children: /* @__PURE__ */ jsxDEV("form", { id: formId, onSubmit: handleSubmit(onSubmit), children: /* @__PURE__ */ jsxDEV(StepContainer, { children: [
    /* @__PURE__ */ jsxDEV(
      StepTitle,
      {
        title: /* @__PURE__ */ jsxDEV(Fragment, { children: "Dove vuoi attivare la fornitura?" }, void 0, false, {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
          lineNumber: 113,
          columnNumber: 22
        }, this),
        subtitle: /* @__PURE__ */ jsxDEV(Fragment, { children: "Se l'azienda ha piÃ¹ sedi o punti di fornitura su cui vuoi attivare questa offerta, ti chiederemo le informazioni necessarie in seguito." }, void 0, false, {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
          lineNumber: 115,
          columnNumber: 15
        }, this)
      },
      void 0,
      false,
      {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
        lineNumber: 112,
        columnNumber: 13
      },
      this
    ),
    /* @__PURE__ */ jsxDEV(StepFieldset, { direction: "row", children: [
      /* @__PURE__ */ jsxDEV(
        CardInput,
        {
          labelIcon: /* @__PURE__ */ jsxDEV(HomeCityApartment, {}, void 0, false, {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
            lineNumber: 124,
            columnNumber: 28
          }, this),
          ...register("same", { required: true }),
          type: "radio",
          labelTitle: "Sede legale",
          value: "YES"
        },
        void 0,
        false,
        {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
          lineNumber: 123,
          columnNumber: 15
        },
        this
      ),
      /* @__PURE__ */ jsxDEV(
        CardInput,
        {
          labelIcon: /* @__PURE__ */ jsxDEV(PlusCircle, {}, void 0, false, {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
            lineNumber: 131,
            columnNumber: 28
          }, this),
          ...register("same"),
          type: "radio",
          labelTitle: "Altra sede",
          value: "NO"
        },
        void 0,
        false,
        {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
          lineNumber: 130,
          columnNumber: 15
        },
        this
      )
    ] }, void 0, true, {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
      lineNumber: 122,
      columnNumber: 13
    }, this),
    /* @__PURE__ */ jsxDEV(StepFieldset, { children: isSame ? (
      // @ts-expect-error disabled, this should be safe
      /* @__PURE__ */ jsxDEV(
        AddressInput,
        {
          label: "Indirizzo",
          value: residentialAddressSuggestion,
          disabled: true
        },
        void 0,
        false,
        {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
          lineNumber: 142,
          columnNumber: 15
        },
        this
      )
    ) : /* @__PURE__ */ jsxDEV(
      Controller,
      {
        render: ({ field: { ref, ...field }, fieldState }) => {
          return /* @__PURE__ */ jsxDEV(
            AddressInput,
            {
              label: "Indirizzo",
              myRef: ref,
              ...field,
              ...fieldState,
              value: field.value
            },
            void 0,
            false,
            {
              fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
              lineNumber: 151,
              columnNumber: 21
            },
            this
          );
        },
        rules: AddressInput.rules,
        control: methods.control,
        name: "addressSupply"
      },
      void 0,
      false,
      {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
        lineNumber: 148,
        columnNumber: 15
      },
      this
    ) }, void 0, false, {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
      lineNumber: 139,
      columnNumber: 13
    }, this)
  ] }, void 0, true, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
    lineNumber: 111,
    columnNumber: 11
  }, this) }, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
    lineNumber: 110,
    columnNumber: 9
  }, this) }, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
    lineNumber: 109,
    columnNumber: 7
  }, this) }, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx",
    lineNumber: 108,
    columnNumber: 5
  }, this);
}
_s(AddressSupplyStep, "p4/XaZ1edlIS06IaQRNeYigf6EE=", false, function() {
  return [useTrackingWeborderUnicoPage, useEngine, useId, useAtomValue, useForm, useAtomCallback];
});
_c2 = AddressSupplyStep;
var _c, _c2;
$RefreshReg$(_c, "AddressSupplyStepWrapped");
$RefreshReg$(_c2, "AddressSupplyStep");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/address/AddressSwitchInStep.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,