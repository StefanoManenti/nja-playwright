import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/modal/ModalCloseButton.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/modal/ModalCloseButton.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import { CloseIcon } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-icons/src/index.ts";
import clsx from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/clsx.js?v=0189a8d1";
import { IconButton } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/IconButton.tsx";
import classes from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/modal/Modal.module.less";
import { ModalBox } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/modal/ModalBox.tsx";
export function ModalCloseButton(props) {
  return /* @__PURE__ */ jsxDEV(ModalBox, { hPad: "close", children: /* @__PURE__ */ jsxDEV(IconButton, { className: clsx(classes.closeButton), onClick: props.onClick, children: /* @__PURE__ */ jsxDEV(CloseIcon, {}, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/modal/ModalCloseButton.tsx",
    lineNumber: 12,
    columnNumber: 9
  }, this) }, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/modal/ModalCloseButton.tsx",
    lineNumber: 11,
    columnNumber: 7
  }, this) }, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/modal/ModalCloseButton.tsx",
    lineNumber: 10,
    columnNumber: 5
  }, this);
}
_c = ModalCloseButton;
var _c;
$RefreshReg$(_c, "ModalCloseButton");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/modal/ModalCloseButton.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBV1E7Ozs7O2dCQVhSLE9BQVNBLGNBQVM7QUFBUSx3REFBa0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQzVDLE9BQU9DLFVBQVU7QUFFakIsU0FBU0Msa0JBQWtCO0FBQzNCLE9BQU9DLGFBQWE7QUFDcEIsU0FBU0MsZ0JBQWdCO0FBRWxCLGdCQUFTQyxpQkFBaUJDLE9BQWlDO0FBQ2hFLFNBQ0UsdUJBQUMsWUFBUyxNQUFLLFNBQ2IsaUNBQUMsY0FBVyxXQUFXTCxLQUFLRSxRQUFRSSxXQUFXLEdBQUcsU0FBU0QsTUFBTUUsU0FDL0QsaUNBQUMsZUFBRDtBQUFBO0FBQUE7QUFBQTtBQUFBLFNBQVUsS0FEWjtBQUFBO0FBQUE7QUFBQTtBQUFBLFNBRUEsS0FIRjtBQUFBO0FBQUE7QUFBQTtBQUFBLFNBSUE7QUFFSjtBQUFDQyxLQVJlSjtBQUFnQixJQUFBSTtBQUFBQyxhQUFBRCxJQUFBIiwibmFtZXMiOlsiQ2xvc2VJY29uIiwiY2xzeCIsIkljb25CdXR0b24iLCJjbGFzc2VzIiwiTW9kYWxCb3giLCJNb2RhbENsb3NlQnV0dG9uIiwicHJvcHMiLCJjbG9zZUJ1dHRvbiIsIm9uQ2xpY2siLCJfYyIsIiRSZWZyZXNoUmVnJCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJNb2RhbENsb3NlQnV0dG9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDbG9zZUljb24gfSBmcm9tICdAbmFqLXdvL3VpLWljb25zJztcclxuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IEljb25CdXR0b24gfSBmcm9tICcuLi9JY29uQnV0dG9uJztcclxuaW1wb3J0IGNsYXNzZXMgZnJvbSAnLi9Nb2RhbC5tb2R1bGUubGVzcyc7XHJcbmltcG9ydCB7IE1vZGFsQm94IH0gZnJvbSAnLi9Nb2RhbEJveCc7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gTW9kYWxDbG9zZUJ1dHRvbihwcm9wczogeyBvbkNsaWNrPzogKCkgPT4gdm9pZCB9KSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxNb2RhbEJveCBoUGFkPVwiY2xvc2VcIj5cclxuICAgICAgPEljb25CdXR0b24gY2xhc3NOYW1lPXtjbHN4KGNsYXNzZXMuY2xvc2VCdXR0b24pfSBvbkNsaWNrPXtwcm9wcy5vbkNsaWNrfT5cclxuICAgICAgICA8Q2xvc2VJY29uIC8+XHJcbiAgICAgIDwvSWNvbkJ1dHRvbj5cclxuICAgIDwvTW9kYWxCb3g+XHJcbiAgKTtcclxufVxyXG4iXSwiZmlsZSI6IkM6L1VzZXJzL2FpbnRyb25hL0Rlc2t0b3AvQXBwL3JlYWN0L25hai9saWJzL3VpLWF0b21zL3NyYy9saWIvbW9kYWwvTW9kYWxDbG9zZUJ1dHRvbi50c3gifQ==