globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || {
  cache: /* @__PURE__ */ new Map(),
  get(name, inst) {
    if (this.cache.has(name)) {
      return this.cache.get(name);
    }
    this.cache.set(name, inst);
    return inst;
  }
};
import { delay, http, HttpResponse } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/msw.js?v=0189a8d1";
export default http.get(/\/api\/webOrderCommonServices\/vas\/interattivo/, async (info) => {
  await delay();
  const url = new URL(info.request.url);
  const params = new URLSearchParams(url.search);
  const codiceVas = params.get("codiceVas");
  switch (codiceVas) {
    case "TRENI2023":
      return HttpResponse.json({
        classeVasInterattiva: null,
        listaProvinceFiltratePerRegioneJSON: null,
        defCampiVasInterattivo: [{
          codiceVAS: "TRENI2023",
          labelID: "ID1",
          label: "NOME INTESTATARIO",
          flagObbligatorio: true,
          infoEstese: null,
          flagVisualizza: true,
          regEx: null,
          maxLunghezza: 13,
          defaultValue: null
        }, {
          codiceVAS: "TRENI2023",
          labelID: "ID2",
          label: "COGNOME INTESTATARIO",
          flagObbligatorio: true,
          infoEstese: null,
          flagVisualizza: true,
          regEx: null,
          maxLunghezza: 40,
          defaultValue: null
        }, {
          codiceVAS: "TRENI2023",
          labelID: "ID3",
          label: "NUMERO CARTA FRECCIA",
          flagObbligatorio: true,
          infoEstese: null,
          flagVisualizza: true,
          regEx: null,
          maxLunghezza: 9,
          defaultValue: null
        }],
        campiVASInterattivo: null,
        infoEstese: {
          codiceVAS: "TRENI2023",
          titolo: "Inserisci i dati della carta Freccia",
          testoIntroduttivo: null,
          bloccoStile: null,
          bloccoScript: null,
          conferma: false,
          testoConferma: null,
          etichConfermaSi: null,
          etichConfermaNo: null,
          titoloIndirizzo: null
        }
      });
    case "ESSE19":
      return HttpResponse.json({
        classeVasInterattiva: null,
        listaProvinceFiltratePerRegioneJSON: null,
        defCampiVasInterattivo: [{
          codiceVAS: "ESSE19",
          labelID: "ID1",
          label: "NOME INTESTATARIO",
          flagObbligatorio: true,
          infoEstese: null,
          flagVisualizza: true,
          regEx: null,
          maxLunghezza: 13,
          defaultValue: null
        }, {
          codiceVAS: "ESSE19",
          labelID: "ID2",
          label: "COGNOME INTESTATARIO",
          flagObbligatorio: true,
          infoEstese: null,
          flagVisualizza: true,
          regEx: null,
          maxLunghezza: 40,
          defaultValue: null
        }, {
          codiceVAS: "ESSE19",
          labelID: "ID3",
          label: "NUMERO CARTA FIDATY",
          flagObbligatorio: true,
          infoEstese: null,
          flagVisualizza: true,
          regEx: null,
          maxLunghezza: 9,
          defaultValue: null
        }],
        campiVASInterattivo: null,
        infoEstese: {
          codiceVAS: "ESSE19",
          titolo: "Inserisci i dati della carta fidaty",
          testoIntroduttivo: null,
          bloccoStile: null,
          bloccoScript: null,
          conferma: false,
          testoConferma: null,
          etichConfermaSi: null,
          etichConfermaNo: null,
          titoloIndirizzo: null
        }
      });
    default:
      return HttpResponse.json({
        classeVasInterattiva: null,
        listaProvinceFiltratePerRegioneJSON: null,
        defCampiVasInterattivo: null,
        campiVASInterattivo: null,
        infoEstese: null
      });
  }
});

//# sourceMappingURL=data:application/json;base64,