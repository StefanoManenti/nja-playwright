globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import { shouldFetchVasAtom, vasInfo$ } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/index.ts";
import { Step, StepPriority } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/engine/src/index.ts";
import StepErrorBoundary from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/StepErrorBoundary.tsx";
import { ENABLE_VAS } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/flags.ts";
class Vas extends Step {
  constructor() {
    super(...arguments);
    this.priority = new StepPriority(8);
    this.WrapperComponent = StepErrorBoundary;
    this.lazy = () => import("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/vas/VasStep.tsx");
  }
  toString() {
    return "vas";
  }
  depends() {
    return [];
  }
  provides() {
    return ["vas"];
  }
  isInFlux(get) {
    if (!ENABLE_VAS) {
      return false;
    }
    if (get(shouldFetchVasAtom)) {
      return true;
    }
    return true;
  }
  async isAvailable(get) {
    return get(shouldFetchVasAtom) && (await get(vasInfo$)).enabled;
  }
}
export const vas = new Vas();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLFNBQVNBLG9CQUFvQkMsZ0JBQWdCO0FBQzdDLFNBQVNDLE1BQU1DLG9CQUFvQjtBQUNuQyxPQUFPQyx1QkFBdUI7QUFFOUIsU0FBU0Msa0JBQWtCO0FBRTNCLE1BQU1DLFlBQVlKLEtBQUs7QUFBQSxFQUF2QjtBQUFBO0FBQ0VLLG9CQUFXLElBQUlKLGFBQWEsQ0FBQztBQUM3QkssNEJBQW1CSjtBQUVuQkssZ0JBQU9BLE1BQU0sT0FBTyxXQUFXO0FBQUE7QUFBQSxFQUUvQkMsV0FBVztBQUNULFdBQU87QUFBQSxFQUNUO0FBQUEsRUFFQUMsVUFBVTtBQUNSLFdBQU87QUFBQSxFQUNUO0FBQUEsRUFFQUMsV0FBVztBQUNULFdBQU8sQ0FBQyxLQUFLO0FBQUEsRUFDZjtBQUFBLEVBRVVDLFNBQVNDLEtBQWE7QUFDOUIsUUFBSSxDQUFDVCxZQUFZO0FBQ2YsYUFBTztBQUFBLElBQ1Q7QUFDQSxRQUFJUyxJQUFJZCxrQkFBa0IsR0FBRztBQUMzQixhQUFPO0FBQUEsSUFDVDtBQUNBLFdBQU87QUFBQSxFQUNUO0FBQUEsRUFFQSxNQUFnQmUsWUFBWUQsS0FBYTtBQUN2QyxXQUFPQSxJQUFJZCxrQkFBa0IsTUFBTSxNQUFNYyxJQUFJYixRQUFRLEdBQUdlO0FBQUFBLEVBQzFEO0FBQ0Y7QUFFTyxhQUFNQyxNQUFNLElBQUlYLElBQUkiLCJuYW1lcyI6WyJzaG91bGRGZXRjaFZhc0F0b20iLCJ2YXNJbmZvJCIsIlN0ZXAiLCJTdGVwUHJpb3JpdHkiLCJTdGVwRXJyb3JCb3VuZGFyeSIsIkVOQUJMRV9WQVMiLCJWYXMiLCJwcmlvcml0eSIsIldyYXBwZXJDb21wb25lbnQiLCJsYXp5IiwidG9TdHJpbmciLCJkZXBlbmRzIiwicHJvdmlkZXMiLCJpc0luRmx1eCIsImdldCIsImlzQXZhaWxhYmxlIiwiZW5hYmxlZCIsInZhcyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJ2YXMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNob3VsZEZldGNoVmFzQXRvbSwgdmFzSW5mbyQgfSBmcm9tICdAbmFqLXdvL2RhdGEtYWNjZXNzJztcclxuaW1wb3J0IHsgU3RlcCwgU3RlcFByaW9yaXR5IH0gZnJvbSAnQG5hai13by9lbmdpbmUnO1xyXG5pbXBvcnQgU3RlcEVycm9yQm91bmRhcnkgZnJvbSAnLi4vU3RlcEVycm9yQm91bmRhcnknO1xyXG5pbXBvcnQgeyBHZXR0ZXIgfSBmcm9tICdqb3RhaS92YW5pbGxhL3R5cGVVdGlscyc7XHJcbmltcG9ydCB7IEVOQUJMRV9WQVMgfSBmcm9tICcuLi9mbGFncyc7XHJcblxyXG5jbGFzcyBWYXMgZXh0ZW5kcyBTdGVwIHtcclxuICBwcmlvcml0eSA9IG5ldyBTdGVwUHJpb3JpdHkoOCk7XHJcbiAgV3JhcHBlckNvbXBvbmVudCA9IFN0ZXBFcnJvckJvdW5kYXJ5O1xyXG5cclxuICBsYXp5ID0gKCkgPT4gaW1wb3J0KCcuL1Zhc1N0ZXAnKTtcclxuXHJcbiAgdG9TdHJpbmcoKSB7XHJcbiAgICByZXR1cm4gJ3Zhcyc7XHJcbiAgfVxyXG5cclxuICBkZXBlbmRzKCkge1xyXG4gICAgcmV0dXJuIFtdO1xyXG4gIH1cclxuXHJcbiAgcHJvdmlkZXMoKSB7XHJcbiAgICByZXR1cm4gWyd2YXMnXTtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBpc0luRmx1eChnZXQ6IEdldHRlcikge1xyXG4gICAgaWYgKCFFTkFCTEVfVkFTKSB7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIGlmIChnZXQoc2hvdWxkRmV0Y2hWYXNBdG9tKSkge1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGFzeW5jIGlzQXZhaWxhYmxlKGdldDogR2V0dGVyKSB7XHJcbiAgICByZXR1cm4gZ2V0KHNob3VsZEZldGNoVmFzQXRvbSkgJiYgKGF3YWl0IGdldCh2YXNJbmZvJCkpLmVuYWJsZWQ7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgdmFzID0gbmV3IFZhcygpO1xyXG4iXSwiZmlsZSI6IkM6L1VzZXJzL2FpbnRyb25hL0Rlc2t0b3AvQXBwL3JlYWN0L25hai9saWJzL3N0ZXBzL3NyYy9saWIvdmFzL3Zhcy50c3gifQ==