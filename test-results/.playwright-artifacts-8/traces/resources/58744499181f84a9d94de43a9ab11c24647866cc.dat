globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || {
  cache: /* @__PURE__ */ new Map(),
  get(name, inst) {
    if (this.cache.has(name)) {
      return this.cache.get(name);
    }
    this.cache.set(name, inst);
    return inst;
  }
};
import { ServiceUnhandledResponseError } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/index.ts";
import { API, generateOperationID } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/utils/index.ts";
export async function fetchVasInterattivo(params) {
  if (params.codiceTpCanale !== "CV") {
    return {
      enabled: false
    };
  }
  const logHash = generateOperationID();
  const qs = new URLSearchParams({
    codiceVas: params.codiceCanale,
    logHash
  });
  const response = await fetch(`${API}/webOrderCommonServices/vas/interattivo?${qs}`, {
    method: "GET",
    headers: {
      Accept: "application/json"
    }
  });
  if (response.status !== 200) {
    throw new ServiceUnhandledResponseError(response.statusText, logHash);
  }
  const data = await response.json();
  return {
    ...data,
    enabled: data.defCampiVasInterattivo != null
  };
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLFNBQVNBLHFDQUFxQztBQUM5QyxTQUFTQyxLQUFLQywyQkFBMkI7QUFxRHpDLHNCQUFzQkMsb0JBQ3BCQyxRQUlBO0FBQ0EsTUFBSUEsT0FBT0MsbUJBQW1CLE1BQU07QUFDbEMsV0FBTztBQUFBLE1BQUVDLFNBQVM7QUFBQSxJQUFNO0FBQUEsRUFDMUI7QUFFQSxRQUFNQyxVQUFVTCxvQkFBb0I7QUFDcEMsUUFBTU0sS0FBSyxJQUFJQyxnQkFBZ0I7QUFBQSxJQUM3QkMsV0FBV04sT0FBT087QUFBQUEsSUFDbEJKO0FBQUFBLEVBQ0YsQ0FBQztBQUVELFFBQU1LLFdBQVcsTUFBTUMsTUFDckIsR0FBR1osR0FBRywyQ0FBMkNPLEVBQUUsSUFDbkQ7QUFBQSxJQUNFTSxRQUFRO0FBQUEsSUFDUkMsU0FBUztBQUFBLE1BQ1BDLFFBQVE7QUFBQSxJQUNWO0FBQUEsRUFDRixDQUNGO0FBRUEsTUFBSUosU0FBU0ssV0FBVyxLQUFLO0FBQzNCLFVBQU0sSUFBSWpCLDhCQUE4QlksU0FBU00sWUFBWVgsT0FBTztBQUFBLEVBQ3RFO0FBRUEsUUFBTVksT0FBK0IsTUFBTVAsU0FBU1EsS0FBSztBQUN6RCxTQUFPO0FBQUEsSUFDTCxHQUFHRDtBQUFBQSxJQUNIYixTQUFTYSxLQUFLRSwwQkFBMEI7QUFBQSxFQUMxQztBQUNGIiwibmFtZXMiOlsiU2VydmljZVVuaGFuZGxlZFJlc3BvbnNlRXJyb3IiLCJBUEkiLCJnZW5lcmF0ZU9wZXJhdGlvbklEIiwiZmV0Y2hWYXNJbnRlcmF0dGl2byIsInBhcmFtcyIsImNvZGljZVRwQ2FuYWxlIiwiZW5hYmxlZCIsImxvZ0hhc2giLCJxcyIsIlVSTFNlYXJjaFBhcmFtcyIsImNvZGljZVZhcyIsImNvZGljZUNhbmFsZSIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiQWNjZXB0Iiwic3RhdHVzIiwic3RhdHVzVGV4dCIsImRhdGEiLCJqc29uIiwiZGVmQ2FtcGlWYXNJbnRlcmF0dGl2byJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJ2YXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2VydmljZVVuaGFuZGxlZFJlc3BvbnNlRXJyb3IgfSBmcm9tICdAbmFqLXdvL3V0aWwnO1xyXG5pbXBvcnQgeyBBUEksIGdlbmVyYXRlT3BlcmF0aW9uSUQgfSBmcm9tICcuLi8uLi91dGlscyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFZhc0ludGVyYXR0aXZvUmVzcG9uc2Uge1xyXG4gIGRlZkNhbXBpVmFzSW50ZXJhdHRpdm8/OiBWQVNDb25maWdEQltdIHwgbnVsbDtcclxuICBpbmZvRXN0ZXNlPzogSW5mb0NsYXNzZVZBU0VzdGVzZSB8IG51bGw7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVmFzSW50ZXJhdHRpdm9WYWx1ZSBleHRlbmRzIFZhc0ludGVyYXR0aXZvUmVzcG9uc2Uge1xyXG4gIGRlZkNhbXBpVmFzSW50ZXJhdHRpdm86IFZBU0NvbmZpZ0RCW107XHJcbiAgaW5mb0VzdGVzZTogSW5mb0NsYXNzZVZBU0VzdGVzZTtcclxufVxyXG5cclxudHlwZSBWQVNDb25maWdEQiA9IHtcclxuICBsYWJlbElEOiBzdHJpbmc7XHJcbiAgbGFiZWw6IHN0cmluZztcclxuICBmbGFnT2JibGlnYXRvcmlvPzogYm9vbGVhbjtcclxuICBpbmZvRXN0ZXNlPzogSW5mb0NhbXBvVkFTRXN0ZXNlO1xyXG4gIGZsYWdWaXN1YWxpenphPzogYm9vbGVhbjtcclxuICByZWdFeD86IHN0cmluZztcclxuICBtYXhMdW5naGV6emE/OiBudW1iZXI7XHJcbiAgZGVmYXVsdFZhbHVlPzogc3RyaW5nO1xyXG59O1xyXG5cclxudHlwZSBJbmZvQ2FtcG9WQVNFc3Rlc2UgPSB7XHJcbiAgdGlwb0NhbXBvPzogc3RyaW5nO1xyXG4gIGVsZW1lbnRpRWxlbmNvPzogRWxlbUNhbXBvVkFTRWxlbmNvW107XHJcbiAgcGxhY2Vob2xkZXI/OiBzdHJpbmc7XHJcbiAgcHJlY2FyaWM/OiBzdHJpbmc7XHJcbn07XHJcblxyXG50eXBlIEVsZW1DYW1wb1ZBU0VsZW5jbyA9IHtcclxuICBldGljaGV0dGE/OiBzdHJpbmc7XHJcbiAgdmFsb3JlPzogc3RyaW5nO1xyXG59O1xyXG5cclxudHlwZSBJbmZvQ2xhc3NlVkFTRXN0ZXNlID0ge1xyXG4gIGNvZGljZVZBUzogc3RyaW5nO1xyXG4gIHRpdG9sbzogc3RyaW5nO1xyXG4gIHRlc3RvSW50cm9kdXR0aXZvPzogc3RyaW5nO1xyXG4gIGJsb2Njb1N0aWxlPzogc3RyaW5nO1xyXG4gIGJsb2Njb1NjcmlwdD86IHN0cmluZztcclxuICBjb25mZXJtYTogYm9vbGVhbjtcclxuICB0ZXN0b0NvbmZlcm1hPzogc3RyaW5nO1xyXG4gIGV0aWNoQ29uZmVybWFTaT86IHN0cmluZztcclxuICBldGljaENvbmZlcm1hTm8/OiBzdHJpbmc7XHJcbiAgdGl0b2xvSW5kaXJpenpvPzogc3RyaW5nO1xyXG59O1xyXG5cclxudHlwZSBGZXRjaFZhc0ludGVyYXR0aXZvUGFyYW1zID0ge1xyXG4gIGNvZGljZUNhbmFsZTogc3RyaW5nO1xyXG4gIGNvZGljZVRwQ2FuYWxlOiBzdHJpbmc7XHJcbn07XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hWYXNJbnRlcmF0dGl2byhcclxuICBwYXJhbXM6IEZldGNoVmFzSW50ZXJhdHRpdm9QYXJhbXNcclxuKTogUHJvbWlzZTxcclxuICB8ICh7IGVuYWJsZWQ6IHRydWUgfSAmIFZhc0ludGVyYXR0aXZvVmFsdWUpXHJcbiAgfCAoeyBlbmFibGVkOiBmYWxzZSB9ICYgVmFzSW50ZXJhdHRpdm9SZXNwb25zZSlcclxuPiB7XHJcbiAgaWYgKHBhcmFtcy5jb2RpY2VUcENhbmFsZSAhPT0gJ0NWJykge1xyXG4gICAgcmV0dXJuIHsgZW5hYmxlZDogZmFsc2UgfTtcclxuICB9XHJcblxyXG4gIGNvbnN0IGxvZ0hhc2ggPSBnZW5lcmF0ZU9wZXJhdGlvbklEKCk7XHJcbiAgY29uc3QgcXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHtcclxuICAgIGNvZGljZVZhczogcGFyYW1zLmNvZGljZUNhbmFsZSxcclxuICAgIGxvZ0hhc2g6IGxvZ0hhc2gsXHJcbiAgfSk7XHJcblxyXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXHJcbiAgICBgJHtBUEl9L3dlYk9yZGVyQ29tbW9uU2VydmljZXMvdmFzL2ludGVyYXR0aXZvPyR7cXN9YCxcclxuICAgIHtcclxuICAgICAgbWV0aG9kOiAnR0VUJyxcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICB9LFxyXG4gICAgfVxyXG4gICk7XHJcblxyXG4gIGlmIChyZXNwb25zZS5zdGF0dXMgIT09IDIwMCkge1xyXG4gICAgdGhyb3cgbmV3IFNlcnZpY2VVbmhhbmRsZWRSZXNwb25zZUVycm9yKHJlc3BvbnNlLnN0YXR1c1RleHQsIGxvZ0hhc2gpO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgZGF0YTogVmFzSW50ZXJhdHRpdm9SZXNwb25zZSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICByZXR1cm4ge1xyXG4gICAgLi4uZGF0YSxcclxuICAgIGVuYWJsZWQ6IGRhdGEuZGVmQ2FtcGlWYXNJbnRlcmF0dGl2byAhPSBudWxsLFxyXG4gIH07XHJcbn1cclxuIl0sImZpbGUiOiJDOi9Vc2Vycy9haW50cm9uYS9EZXNrdG9wL0FwcC9yZWFjdC9uYWovbGlicy9kYXRhLWFjY2Vzcy9zcmMvbGliL2FwaS93ZWJvcmRlci92YXMudHMifQ==