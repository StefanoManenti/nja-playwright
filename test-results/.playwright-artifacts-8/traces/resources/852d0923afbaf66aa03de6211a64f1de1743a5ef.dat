import.meta.env = {"BASE_URL": "/", "DEV": true, "MODE": "development", "PROD": false, "SSR": false};globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || {
  cache: /* @__PURE__ */ new Map(),
  get(name, inst) {
    if (this.cache.has(name)) {
      return this.cache.get(name);
    }
    this.cache.set(name, inst);
    return inst;
  }
};
import __vite__cjsImport0_react from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react.js?v=0189a8d1"; const useCallback = __vite__cjsImport0_react["useCallback"];
import { link_accediAMyEni } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/lib/links.ts";
import { PATH_CAMBIO_PRODOTTO, PATH_CONFIGURA_OFFERTA, PATH_CONFIGURA_OFFERTA_TEST } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/lib/paths.ts";
export function goToPlenitude(href, newTab) {
  if (newTab) {
    throw Error("not implemented");
  }
  const link = document.createElement("a");
  link.href = getPlenitudeHref(href);
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
}
const PLN_DOMAIN = "https://eniplenitude.com";
export function getPlenitudeHref(href) {
  return passthroughFlags(href);
}
export function getPlenitudeImage(src) {
  const baseUrl = import.meta.env.DEV ? PLN_DOMAIN : "";
  return baseUrl + src;
}
export function useRedirectToLogin() {
  return useCallback(() => {
    const params = new URLSearchParams(document.location.search);
    params.set("redirPagina", getRedirPagina());
    params.set("chiamante", "null");
    goToPlenitude(`${link_accediAMyEni}?${params.toString()}`);
  }, []);
}
function getRedirPagina() {
  const pathname = document.location.pathname;
  switch (pathname) {
    case PATH_CONFIGURA_OFFERTA:
      return "38";
    case PATH_CONFIGURA_OFFERTA_TEST:
      return "41";
    case PATH_CAMBIO_PRODOTTO:
      return "26";
  }
  throw Error("Cannot determine 'redirPagina' value");
}
export function passthroughFlags(url) {
  const flags = ["abt", "abc", "app", "abu", "aba", "dev"];
  const params = new URLSearchParams(window.location.search);
  const flagsToPass = flags.filter((flag) => params.has(flag));
  if (flagsToPass.length === 0) return url;
  const urlObj = new URL(url, import.meta.env.DEV ? PLN_DOMAIN : window.location.origin);
  flagsToPass.forEach((flag) => {
    urlObj.searchParams.set(flag, params.get(flag));
  });
  return urlObj.toString();
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLFNBQVNBLG1CQUFtQjtBQUM1QixTQUFTQyx5QkFBeUI7QUFDbEMsU0FDRUMsc0JBQ0FDLHdCQUNBQyxtQ0FDSztBQUVBLGdCQUFTQyxjQUFjQyxNQUFjQyxRQUFrQjtBQUM1RCxNQUFJQSxRQUFRO0FBQ1YsVUFBTUMsTUFBTSxpQkFBaUI7QUFBQSxFQUMvQjtBQUVBLFFBQU1DLE9BQU9DLFNBQVNDLGNBQWMsR0FBRztBQUN2Q0YsT0FBS0gsT0FBT00saUJBQWlCTixJQUFJO0FBQ2pDSSxXQUFTRyxLQUFLQyxZQUFZTCxJQUFJO0FBQzlCQSxPQUFLTSxNQUFNO0FBQ1hMLFdBQVNHLEtBQUtHLFlBQVlQLElBQUk7QUFDaEM7QUFFQSxNQUFNUSxhQUFhO0FBRVosZ0JBQVNMLGlCQUFpQk4sTUFBYztBQUM3QyxTQUFPWSxpQkFBaUJaLElBQUk7QUFDOUI7QUFFTyxnQkFBU2Esa0JBQWtCQyxLQUFhO0FBQzdDLFFBQU1DLFVBQVVDLFlBQVlDLElBQUlDLE1BQU1QLGFBQWE7QUFDbkQsU0FBT0ksVUFBVUQ7QUFDbkI7QUFFTyxnQkFBU0sscUJBQXFCO0FBQ25DLFNBQU96QixZQUFZLE1BQU07QUFDdkIsVUFBTTBCLFNBQVMsSUFBSUMsZ0JBQWdCakIsU0FBU2tCLFNBQVNDLE1BQU07QUFDM0RILFdBQU9JLElBQUksZUFBZUMsZUFBZSxDQUFDO0FBQzFDTCxXQUFPSSxJQUFJLGFBQWEsTUFBTTtBQUM5QnpCLGtCQUFjLEdBQUdKLGlCQUFpQixJQUFJeUIsT0FBT00sU0FBUyxDQUFDLEVBQUU7QUFBQSxFQUMzRCxHQUFHLEVBQUU7QUFDUDtBQUVBLFNBQVNELGlCQUFpQjtBQUN4QixRQUFNRSxXQUFXdkIsU0FBU2tCLFNBQVNLO0FBQ25DLFVBQVFBLFVBQVE7QUFBQSxJQUNkLEtBQUs5QjtBQUNILGFBQU87QUFBQSxJQUNULEtBQUtDO0FBQ0gsYUFBTztBQUFBLElBQ1QsS0FBS0Y7QUFDSCxhQUFPO0FBQUEsRUFDWDtBQUNBLFFBQU1NLE1BQU0sc0NBQXNDO0FBQ3BEO0FBWU8sZ0JBQVNVLGlCQUFpQmdCLEtBQXFCO0FBQ3BELFFBQU1DLFFBQVEsQ0FBQyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sS0FBSztBQUN2RCxRQUFNVCxTQUFTLElBQUlDLGdCQUFnQlMsT0FBT1IsU0FBU0MsTUFBTTtBQUN6RCxRQUFNUSxjQUFjRixNQUFNRyxPQUFRQyxVQUFTYixPQUFPYyxJQUFJRCxJQUFJLENBQUM7QUFFM0QsTUFBSUYsWUFBWUksV0FBVyxFQUFHLFFBQU9QO0FBRXJDLFFBQU1RLFNBQVMsSUFBSUMsSUFDakJULEtBQ0FaLFlBQVlDLElBQUlDLE1BQU1QLGFBQWFtQixPQUFPUixTQUFTZ0IsTUFDckQ7QUFDQVAsY0FBWVEsUUFBU04sVUFBUztBQUM1QkcsV0FBT0ksYUFBYWhCLElBQUlTLE1BQU1iLE9BQU9xQixJQUFJUixJQUFJLENBQVc7QUFBQSxFQUMxRCxDQUFDO0FBRUQsU0FBT0csT0FBT1YsU0FBUztBQUN6QiIsIm5hbWVzIjpbInVzZUNhbGxiYWNrIiwibGlua19hY2NlZGlBTXlFbmkiLCJQQVRIX0NBTUJJT19QUk9ET1RUTyIsIlBBVEhfQ09ORklHVVJBX09GRkVSVEEiLCJQQVRIX0NPTkZJR1VSQV9PRkZFUlRBX1RFU1QiLCJnb1RvUGxlbml0dWRlIiwiaHJlZiIsIm5ld1RhYiIsIkVycm9yIiwibGluayIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImdldFBsZW5pdHVkZUhyZWYiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJjbGljayIsInJlbW92ZUNoaWxkIiwiUExOX0RPTUFJTiIsInBhc3N0aHJvdWdoRmxhZ3MiLCJnZXRQbGVuaXR1ZGVJbWFnZSIsInNyYyIsImJhc2VVcmwiLCJpbXBvcnQiLCJlbnYiLCJERVYiLCJ1c2VSZWRpcmVjdFRvTG9naW4iLCJwYXJhbXMiLCJVUkxTZWFyY2hQYXJhbXMiLCJsb2NhdGlvbiIsInNlYXJjaCIsInNldCIsImdldFJlZGlyUGFnaW5hIiwidG9TdHJpbmciLCJwYXRobmFtZSIsInVybCIsImZsYWdzIiwid2luZG93IiwiZmxhZ3NUb1Bhc3MiLCJmaWx0ZXIiLCJmbGFnIiwiaGFzIiwibGVuZ3RoIiwidXJsT2JqIiwiVVJMIiwib3JpZ2luIiwiZm9yRWFjaCIsInNlYXJjaFBhcmFtcyIsImdldCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJyZWRpcmVjdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgbGlua19hY2NlZGlBTXlFbmkgfSBmcm9tICcuL2xpbmtzJztcclxuaW1wb3J0IHtcclxuICBQQVRIX0NBTUJJT19QUk9ET1RUTyxcclxuICBQQVRIX0NPTkZJR1VSQV9PRkZFUlRBLFxyXG4gIFBBVEhfQ09ORklHVVJBX09GRkVSVEFfVEVTVCxcclxufSBmcm9tICcuL3BhdGhzJztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnb1RvUGxlbml0dWRlKGhyZWY6IHN0cmluZywgbmV3VGFiPzogYm9vbGVhbikge1xyXG4gIGlmIChuZXdUYWIpIHtcclxuICAgIHRocm93IEVycm9yKCdub3QgaW1wbGVtZW50ZWQnKTtcclxuICB9XHJcblxyXG4gIGNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XHJcbiAgbGluay5ocmVmID0gZ2V0UGxlbml0dWRlSHJlZihocmVmKTtcclxuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGxpbmspO1xyXG4gIGxpbmsuY2xpY2soKTtcclxuICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGxpbmspO1xyXG59XHJcblxyXG5jb25zdCBQTE5fRE9NQUlOID0gJ2h0dHBzOi8vZW5pcGxlbml0dWRlLmNvbSc7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0UGxlbml0dWRlSHJlZihocmVmOiBzdHJpbmcpIHtcclxuICByZXR1cm4gcGFzc3Rocm91Z2hGbGFncyhocmVmKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldFBsZW5pdHVkZUltYWdlKHNyYzogc3RyaW5nKSB7XHJcbiAgY29uc3QgYmFzZVVybCA9IGltcG9ydC5tZXRhLmVudi5ERVYgPyBQTE5fRE9NQUlOIDogJyc7XHJcbiAgcmV0dXJuIGJhc2VVcmwgKyBzcmM7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VSZWRpcmVjdFRvTG9naW4oKSB7XHJcbiAgcmV0dXJuIHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoZG9jdW1lbnQubG9jYXRpb24uc2VhcmNoKTtcclxuICAgIHBhcmFtcy5zZXQoJ3JlZGlyUGFnaW5hJywgZ2V0UmVkaXJQYWdpbmEoKSk7XHJcbiAgICBwYXJhbXMuc2V0KCdjaGlhbWFudGUnLCAnbnVsbCcpO1xyXG4gICAgZ29Ub1BsZW5pdHVkZShgJHtsaW5rX2FjY2VkaUFNeUVuaX0/JHtwYXJhbXMudG9TdHJpbmcoKX1gKTtcclxuICB9LCBbXSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldFJlZGlyUGFnaW5hKCkge1xyXG4gIGNvbnN0IHBhdGhuYW1lID0gZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWU7XHJcbiAgc3dpdGNoIChwYXRobmFtZSkge1xyXG4gICAgY2FzZSBQQVRIX0NPTkZJR1VSQV9PRkZFUlRBOlxyXG4gICAgICByZXR1cm4gJzM4JztcclxuICAgIGNhc2UgUEFUSF9DT05GSUdVUkFfT0ZGRVJUQV9URVNUOlxyXG4gICAgICByZXR1cm4gJzQxJztcclxuICAgIGNhc2UgUEFUSF9DQU1CSU9fUFJPRE9UVE86XHJcbiAgICAgIHJldHVybiAnMjYnO1xyXG4gIH1cclxuICB0aHJvdyBFcnJvcihcIkNhbm5vdCBkZXRlcm1pbmUgJ3JlZGlyUGFnaW5hJyB2YWx1ZVwiKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFRha2UgYW4gaHJlZiBhbmQgcGFzcyBmbGFncyBcImFidFwiLCBcImFiY1wiLCBcImFwcFwiLCBcImFidVwiLCBcImFiYVwiLCBcImRldlwiIGV2ZW50dWFsbHkgcHJlc2VudCBpbiB0aGUgY3VycmVudCBsb2NhdGlvbi5ocmVmXHJcbiAqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgLSBUaGUgVVJMIHRvIGFkZCBmbGFncyB0b1xyXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBVUkwgd2l0aCBmbGFncyBhcHBlbmRlZCBpZiB0aGV5IGV4aXN0IGluIGN1cnJlbnQgbG9jYXRpb25cclxuICogQGV4YW1wbGVcclxuICogLy8gSWYgbG9jYXRpb24uaHJlZiBjb250YWlucyA/YWJ0PTEyMyZhYmM9NDU2XHJcbiAqIGZsYWdzUGFzc3Rocm91Z2goJ2h0dHBzOi8vZXhhbXBsZS5jb20nKVxyXG4gKiAvLyBSZXR1cm5zICdodHRwczovL2V4YW1wbGUuY29tP2FidD0xMjMmYWJjPTQ1NidcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBwYXNzdGhyb3VnaEZsYWdzKHVybDogc3RyaW5nKTogc3RyaW5nIHtcclxuICBjb25zdCBmbGFncyA9IFsnYWJ0JywgJ2FiYycsICdhcHAnLCAnYWJ1JywgJ2FiYScsICdkZXYnXTtcclxuICBjb25zdCBwYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpO1xyXG4gIGNvbnN0IGZsYWdzVG9QYXNzID0gZmxhZ3MuZmlsdGVyKChmbGFnKSA9PiBwYXJhbXMuaGFzKGZsYWcpKTtcclxuXHJcbiAgaWYgKGZsYWdzVG9QYXNzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHVybDtcclxuXHJcbiAgY29uc3QgdXJsT2JqID0gbmV3IFVSTChcclxuICAgIHVybCxcclxuICAgIGltcG9ydC5tZXRhLmVudi5ERVYgPyBQTE5fRE9NQUlOIDogd2luZG93LmxvY2F0aW9uLm9yaWdpblxyXG4gICk7XHJcbiAgZmxhZ3NUb1Bhc3MuZm9yRWFjaCgoZmxhZykgPT4ge1xyXG4gICAgdXJsT2JqLnNlYXJjaFBhcmFtcy5zZXQoZmxhZywgcGFyYW1zLmdldChmbGFnKSBhcyBzdHJpbmcpO1xyXG4gIH0pO1xyXG5cclxuICByZXR1cm4gdXJsT2JqLnRvU3RyaW5nKCk7XHJcbn1cclxuIl0sImZpbGUiOiJDOi9Vc2Vycy9haW50cm9uYS9EZXNrdG9wL0FwcC9yZWFjdC9uYWovbGlicy91dGlsL3NyYy9saWIvcmVkaXJlY3QudHMifQ==