globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || {
  cache: /* @__PURE__ */ new Map(),
  get(name, inst) {
    if (this.cache.has(name)) {
      return this.cache.get(name);
    }
    this.cache.set(name, inst);
    return inst;
  }
};
export function applyDiscount(commodity, factor) {
  switch (commodity.tariffs_template) {
    case "FIX":
    case "DEFAULT":
      discountFixed(commodity.tariffs, factor);
      break;
    case "INDEX":
    case "INDEXED":
      discountIndexed(commodity.tariffs, factor);
      break;
    case "PLACET":
      break;
  }
}
function discountFixed(t, factor) {
  for (const k of ["24h", "f1", "f2", "f3"]) {
    const item = t[k];
    if (item && item.price) {
      item.price = mul(item.price, factor);
    }
  }
}
function discountIndexed(t, factor) {
  const index = t["index"];
  if (index && index.contributo_consumo) {
    index.contributo_consumo = mul(index.contributo_consumo, factor);
  }
}
function mul(priceStr, factor) {
  const num = +priceStr.replace(",", ".");
  if (!Number.isFinite(num)) return priceStr;
  const discountedValue = num * (1 - factor / 100);
  const out = discountedValue.toFixed(4);
  return priceStr.includes(",") ? out.replace(".", ",") : out;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQVFPLGdCQUFTQSxjQUNkQyxXQUNBQyxRQUNNO0FBQ04sVUFBUUQsVUFBVUUsa0JBQWdCO0FBQUEsSUFDaEMsS0FBSztBQUFBLElBQ0wsS0FBSztBQUNIQyxvQkFBY0gsVUFBVUksU0FBU0gsTUFBTTtBQUN2QztBQUFBLElBQ0YsS0FBSztBQUFBLElBQ0wsS0FBSztBQUNISSxzQkFBZ0JMLFVBQVVJLFNBQVNILE1BQU07QUFDekM7QUFBQSxJQUNGLEtBQUs7QUFFSDtBQUFBLEVBQ0o7QUFDRjtBQUdBLFNBQVNFLGNBQ1BHLEdBQ0FMLFFBQ0E7QUFDQSxhQUFXTSxLQUFLLENBQUMsT0FBTyxNQUFNLE1BQU0sSUFBSSxHQUFZO0FBQ2xELFVBQU1DLE9BQU9GLEVBQUVDLENBQUM7QUFDaEIsUUFBSUMsUUFBUUEsS0FBS0MsT0FBTztBQUN0QkQsV0FBS0MsUUFBUUMsSUFBSUYsS0FBS0MsT0FBT1IsTUFBTTtBQUFBLElBQ3JDO0FBQUEsRUFDRjtBQUNGO0FBRUEsU0FBU0ksZ0JBQ1BDLEdBQ0FMLFFBQ0E7QUFDQSxRQUFNVSxRQUFRTCxFQUFFLE9BQU87QUFDdkIsTUFBSUssU0FBU0EsTUFBTUMsb0JBQW9CO0FBQ3JDRCxVQUFNQyxxQkFBcUJGLElBQUlDLE1BQU1DLG9CQUFvQlgsTUFBTTtBQUFBLEVBQ2pFO0FBQ0Y7QUFFQSxTQUFTUyxJQUFJRyxVQUFrQlosUUFBd0I7QUFFckQsUUFBTWEsTUFBTSxDQUFDRCxTQUFTRSxRQUFRLEtBQUssR0FBRztBQUN0QyxNQUFJLENBQUNDLE9BQU9DLFNBQVNILEdBQUcsRUFBRyxRQUFPRDtBQUdsQyxRQUFNSyxrQkFBa0JKLE9BQU8sSUFBSWIsU0FBUztBQUM1QyxRQUFNa0IsTUFBTUQsZ0JBQWdCRSxRQUFRLENBQUM7QUFDckMsU0FBT1AsU0FBU1EsU0FBUyxHQUFHLElBQUlGLElBQUlKLFFBQVEsS0FBSyxHQUFHLElBQUlJO0FBQzFEIiwibmFtZXMiOlsiYXBwbHlEaXNjb3VudCIsImNvbW1vZGl0eSIsImZhY3RvciIsInRhcmlmZnNfdGVtcGxhdGUiLCJkaXNjb3VudEZpeGVkIiwidGFyaWZmcyIsImRpc2NvdW50SW5kZXhlZCIsInQiLCJrIiwiaXRlbSIsInByaWNlIiwibXVsIiwiaW5kZXgiLCJjb250cmlidXRvX2NvbnN1bW8iLCJwcmljZVN0ciIsIm51bSIsInJlcGxhY2UiLCJOdW1iZXIiLCJpc0Zpbml0ZSIsImRpc2NvdW50ZWRWYWx1ZSIsIm91dCIsInRvRml4ZWQiLCJpbmNsdWRlcyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJkaWdpdGFsLWRpc2NvdW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vZGl0eUZFIH0gZnJvbSAnLi4vbW9kZWxzL2luZm8tb2ZmZXJ0YS1mcm9udGVuZCc7XHJcbmltcG9ydCB7IEZpeGVkVGFyaWZmSXRlbSwgSW5kZXhlZFRhcmlmZkl0ZW0gfSBmcm9tICcuLi9tb2RlbHMvaW5mby1vZmZlcnRhLXJvb3QnO1xyXG5cclxuLyoqXHJcbiAqIGFwcGxpY2EgbG8gc2NvbnRvIGFpIHByZXp6aVxyXG4gKiBAcGFyYW0gY29tbW9kaXR5XHJcbiAqIEBwYXJhbSBmYWN0b3JcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBhcHBseURpc2NvdW50KFxyXG4gIGNvbW1vZGl0eTogQ29tbW9kaXR5RkUsXHJcbiAgZmFjdG9yOiBudW1iZXJcclxuKTogdm9pZCB7XHJcbiAgc3dpdGNoIChjb21tb2RpdHkudGFyaWZmc190ZW1wbGF0ZSkge1xyXG4gICAgY2FzZSAnRklYJzpcclxuICAgIGNhc2UgJ0RFRkFVTFQnOlxyXG4gICAgICBkaXNjb3VudEZpeGVkKGNvbW1vZGl0eS50YXJpZmZzLCBmYWN0b3IpO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgJ0lOREVYJzpcclxuICAgIGNhc2UgJ0lOREVYRUQnOlxyXG4gICAgICBkaXNjb3VudEluZGV4ZWQoY29tbW9kaXR5LnRhcmlmZnMsIGZhY3Rvcik7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSAnUExBQ0VUJzpcclxuICAgICAgLy9UT0RPIHZlZGVyZSBpbiBxdWFsZSBjYXNpc3RpY2EgcmllbnRyYSAoc3UgYXJlYSBwZXJzb25hbGUgbm9uIHNlcnZlKVxyXG4gICAgICBicmVhaztcclxuICB9XHJcbn1cclxuXHJcbi8qIC0tLS0tLS0tIGhlbHBlcnMgcHJpdmF0aSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5mdW5jdGlvbiBkaXNjb3VudEZpeGVkKFxyXG4gIHQ6IFJlY29yZDxzdHJpbmcsIHVua25vd24+LFxyXG4gIGZhY3RvcjogbnVtYmVyXHJcbikge1xyXG4gIGZvciAoY29uc3QgayBvZiBbJzI0aCcsICdmMScsICdmMicsICdmMyddIGFzIGNvbnN0KSB7XHJcbiAgICBjb25zdCBpdGVtID0gdFtrXSBhcyBGaXhlZFRhcmlmZkl0ZW0gfCB1bmRlZmluZWQ7XHJcbiAgICBpZiAoaXRlbSAmJiBpdGVtLnByaWNlKSB7XHJcbiAgICAgIGl0ZW0ucHJpY2UgPSBtdWwoaXRlbS5wcmljZSwgZmFjdG9yKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRpc2NvdW50SW5kZXhlZChcclxuICB0OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPixcclxuICBmYWN0b3I6IG51bWJlclxyXG4pIHtcclxuICBjb25zdCBpbmRleCA9IHRbJ2luZGV4J10gYXMgSW5kZXhlZFRhcmlmZkl0ZW0gfCB1bmRlZmluZWQ7XHJcbiAgaWYgKGluZGV4ICYmIGluZGV4LmNvbnRyaWJ1dG9fY29uc3Vtbykge1xyXG4gICAgaW5kZXguY29udHJpYnV0b19jb25zdW1vID0gbXVsKGluZGV4LmNvbnRyaWJ1dG9fY29uc3VtbywgZmFjdG9yKTtcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG11bChwcmljZVN0cjogc3RyaW5nLCBmYWN0b3I6IG51bWJlcik6IHN0cmluZyB7XHJcbiAgLy8gZ2VzdGlhbW8gc2lhIFwiMCwxNDYzXCIgc2lhIFwiMC4xNDYzXCJcclxuICBjb25zdCBudW0gPSArcHJpY2VTdHIucmVwbGFjZSgnLCcsICcuJyk7XHJcbiAgaWYgKCFOdW1iZXIuaXNGaW5pdGUobnVtKSkgcmV0dXJuIHByaWNlU3RyO1xyXG5cclxuICAvLyBBcHBsaWNhIGxvIHNjb250byBjb21lIHBlcmNlbnR1YWxlIChlcy4gZmFjdG9yIDUgc2lnbmlmaWNhIHNjb250byBkZWwgNSUpXHJcbiAgY29uc3QgZGlzY291bnRlZFZhbHVlID0gbnVtICogKDEgLSBmYWN0b3IgLyAxMDApO1xyXG4gIGNvbnN0IG91dCA9IGRpc2NvdW50ZWRWYWx1ZS50b0ZpeGVkKDQpOyAgICAgICAvLyBzdGVzc28gbnVtZXJvIGRpIGRlY2ltYWxpXHJcbiAgcmV0dXJuIHByaWNlU3RyLmluY2x1ZGVzKCcsJykgPyBvdXQucmVwbGFjZSgnLicsICcsJykgOiBvdXQ7XHJcbn1cclxuIl0sImZpbGUiOiJDOi9Vc2Vycy9haW50cm9uYS9EZXNrdG9wL0FwcC9yZWFjdC9uYWovbGlicy9vZmZlcnMvc3JjL2xpYi9kaWdpdGFsLWRpc2NvdW50LnRzIn0=