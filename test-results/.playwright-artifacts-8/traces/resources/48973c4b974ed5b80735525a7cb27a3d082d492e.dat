globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || {
  cache: /* @__PURE__ */ new Map(),
  get(name, inst) {
    if (this.cache.has(name)) {
      return this.cache.get(name);
    }
    this.cache.set(name, inst);
    return inst;
  }
};
export var BbSalesProcess = /* @__PURE__ */ ((BbSalesProcess2) => {
  BbSalesProcess2["BROADBAND_MIGRAZIONE"] = "BROADBAND MIGRAZIONE";
  BbSalesProcess2["BROADBAND_NUOVA_ATTIVAZIONE"] = "BROADBAND NUOVA ATTIVAZIONE";
  return BbSalesProcess2;
})(BbSalesProcess || {});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQTJCTyxXQUFLQSxpQkFBTCxrQkFBS0Esb0JBQUw7QUFDTEMsNENBQXVCO0FBQ3ZCQyxtREFBOEI7QUFGcEJGO0FBQUFBIiwibmFtZXMiOlsiQmJTYWxlc1Byb2Nlc3MiLCJCUk9BREJBTkRfTUlHUkFaSU9ORSIsIkJST0FEQkFORF9OVU9WQV9BVFRJVkFaSU9ORSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJ0eXBlcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFBob25lRXh0cmFjdGVkIH0gZnJvbSAnQG5hai13by91dGlsJztcclxuaW1wb3J0IHR5cGUgeyBBdG9tLCBQcmltaXRpdmVBdG9tLCBXcml0YWJsZUF0b20gfSBmcm9tICdqb3RhaSc7XHJcbmltcG9ydCB7IEVnb25BZGRyZXNzLCB0eXBlIEVnb25TdWdnZXN0aW9uIH0gZnJvbSAnLi4vLi4vYXBpL2Vnb24nO1xyXG5pbXBvcnQgdHlwZSB7IEJCTWlncmF0aW9uQ29kZUluZm8gfSBmcm9tICcuLi8uLi9hcGkvcHJvZHVjdHMtY29sbGVjdGlvbi9iYi1jaGVja01pZ3JhdGlvbkNvZGUnO1xyXG5pbXBvcnQgdHlwZSB7IEJiQ292ZXJlZFNlcnZpY2UgfSBmcm9tICcuLi8uLi9hcGkvcHJvZHVjdHMtY29sbGVjdGlvbi9iYi1jaGVja1NlcnZpY2VDb3ZlcmFnZSc7XHJcbmltcG9ydCB7XHJcbiAgdHlwZSBFZmZlY3RpdmVEYXRlcyxcclxuICBJbW1lZGlhdGVFZmZlY3QsXHJcbn0gZnJvbSAnLi4vLi4vZWZmZWN0aXZlLWRhdGVzL3R5cGVzJztcclxuaW1wb3J0IHR5cGUgeyBjb21wb25lbnRzIH0gZnJvbSAnLi4vLi4vc3dhZ2dlcnMvcHJvZHVjdHMtc2VydmljZXMnO1xyXG5cclxuZXhwb3J0IHR5cGUgQmJTZXJ2aWNlUHJvZmlsZUluZm8gPSB7XHJcbiAgZG93bmxvYWQ6IHN0cmluZztcclxuICB1cGxvYWQ6IHN0cmluZztcclxufTtcclxuXHJcbmV4cG9ydCB0eXBlIEJiU2NlbmVyeSA9IGNvbXBvbmVudHNbJ3NjaGVtYXMnXVsnQ292ZXJlZFNlcnZpY2VzJ11bJ3NjZW5hcmlvJ107XHJcblxyXG5leHBvcnQgdHlwZSBCYk1pZ3JhdGlvbkNvZGVBdG9tID0gV3JpdGFibGVBdG9tPFxyXG4gIE1pZ3JhdGlvbkNvZGVTdGF0ZSxcclxuICBbeyBoYXNJbnRlcm5ldDogYm9vbGVhbjsgbWlncmF0aW9uQ29kZT86IHN0cmluZyB9XSxcclxuICBQcm9taXNlPHsgc2FsZXNQcm9jZXNzOiBCYlNhbGVzUHJvY2VzczsgaW5mbz86IEJCTWlncmF0aW9uQ29kZUluZm8gfT5cclxuPjtcclxuXHJcbi8qKlxyXG4gKiBBbGlnbiB0byBjb21wb25lbnRzWydzY2hlbWFzJ11bJ0NoZWNrQnJvYWRiYW5kQXNzZXRSZXF1ZXN0J11bJ3NhbGVzUHJvY2VzcyddXHJcbiAqL1xyXG5leHBvcnQgZW51bSBCYlNhbGVzUHJvY2VzcyB7XHJcbiAgQlJPQURCQU5EX01JR1JBWklPTkUgPSAnQlJPQURCQU5EIE1JR1JBWklPTkUnLFxyXG4gIEJST0FEQkFORF9OVU9WQV9BVFRJVkFaSU9ORSA9ICdCUk9BREJBTkQgTlVPVkEgQVRUSVZBWklPTkUnLFxyXG59XHJcblxyXG5leHBvcnQgdHlwZSBCYlNhbGVzUHJvY2Vzc0F0b20gPSBBdG9tPEJiU2FsZXNQcm9jZXNzPjtcclxuXHJcbmV4cG9ydCB0eXBlIEJiQ292ZXJlZEFkZHJlc3MgPSBCYkNvdmVyZWRTZXJ2aWNlICYge1xyXG4gIGFkZHJlc3M6IEVnb25BZGRyZXNzO1xyXG4gIHByb2ZpbGVJbmZvOiBCYlNlcnZpY2VQcm9maWxlSW5mbyB8IHVuZGVmaW5lZDtcclxufTtcclxuXHJcbmV4cG9ydCB0eXBlIEJiQWRkcmVzc0F0b20gPSBXcml0YWJsZUF0b208XHJcbiAgUHJvbWlzZTxCYkNvdmVyZWRBZGRyZXNzIHwgdW5kZWZpbmVkPixcclxuICBbYWRkcmVzczogRWdvblN1Z2dlc3Rpb24gfCBFZ29uQWRkcmVzc10sXHJcbiAgUHJvbWlzZTxCYkNvdmVyZWRBZGRyZXNzPlxyXG4+O1xyXG5cclxuZXhwb3J0IHR5cGUgQmJQaG9uZUF0b20gPSBQcmltaXRpdmVBdG9tPFxyXG4gIHwge1xyXG4gICAgICBoYXNQaG9uZTogdHJ1ZTtcclxuICAgICAgcGhvbmVOdW1iZXI6IHN0cmluZztcclxuICAgIH1cclxuICB8IHtcclxuICAgICAgaGFzUGhvbmU6IGZhbHNlO1xyXG4gICAgICBwaG9uZU51bWJlcj86IG5ldmVyO1xyXG4gICAgfVxyXG4gIHwgdW5kZWZpbmVkXHJcbj47XHJcblxyXG5leHBvcnQgdHlwZSBCYkN1c3RvbWVyTW9kZW1BdG9tID0gUHJpbWl0aXZlQXRvbTxib29sZWFuIHwgdW5kZWZpbmVkPjtcclxuXHJcbmV4cG9ydCB0eXBlIEJiQ29udGFjdFBob25lID0gV3JpdGFibGVBdG9tPFxyXG4gIFByb21pc2U8UGhvbmVFeHRyYWN0ZWQgfCB1bmRlZmluZWQ+LFxyXG4gIFtjb3VudHJ5Q29kZTogc3RyaW5nLCB0ZWxlcGhvbmU6IHN0cmluZyB8IHVuZGVmaW5lZF0sXHJcbiAgdm9pZFxyXG4+O1xyXG5cclxuZXhwb3J0IHR5cGUgQmJJbW1lZGlhdGVFZmZlY3RBdG9tID0gUHJpbWl0aXZlQXRvbTxJbW1lZGlhdGVFZmZlY3Q+O1xyXG5leHBvcnQgdHlwZSBCYkVmZmVjdGl2ZURhdGVzQXRvbSA9IEF0b208UHJvbWlzZTxFZmZlY3RpdmVEYXRlcyB8IHVuZGVmaW5lZD4+O1xyXG5leHBvcnQgdHlwZSBCYkVmZmVjdGl2ZURhdGVBdG9tID0gQXRvbTxQcm9taXNlPERhdGUgfCB1bmRlZmluZWQ+PjtcclxuXHJcbmV4cG9ydCB0eXBlIEJiUHJvZHVjdEF0b20gPSBBdG9tPFByb21pc2U8QmJQcm9kdWN0Pj47XHJcbmV4cG9ydCB0eXBlIEJiUHJvZHVjdCA9IHtcclxuICBwcm9kdWN0SWQ6IHN0cmluZztcclxuICBkb2N1bWVudDogc3RyaW5nO1xyXG4gIGFjdGl2YXRpb25Db3N0OiBCYlByaWNlO1xyXG4gIG1vZGVtRmVlOiBCYlByaWNlO1xyXG4gIG1vbnRobHlGZWU6IEJiUHJpY2U7XHJcbiAgdGVjaG5vbG9neTogc3RyaW5nIHwgdW5kZWZpbmVkO1xyXG4gIGRvd25sb2FkOiBzdHJpbmcgfCB1bmRlZmluZWQ7XHJcbiAgdXBsb2FkOiBzdHJpbmcgfCB1bmRlZmluZWQ7XHJcbn07XHJcbmV4cG9ydCB0eXBlIEJiUHJpY2UgPSB7XHJcbiAgcXR5OiBzdHJpbmc7XHJcbiAgdW5pdDogc3RyaW5nO1xyXG4gIG9sZFF0eT86IHN0cmluZztcclxufTtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUJyb2FkYmFuZCB7XHJcbiAgcmVhZG9ubHkgYWRkcmVzcyQ6IEJiQWRkcmVzc0F0b207XHJcbiAgcmVhZG9ubHkgbWlncmF0aW9uQ29kZSQ6IEJiTWlncmF0aW9uQ29kZUF0b207XHJcbiAgcmVhZG9ubHkgc2FsZXNQcm9jZXNzJDogQmJTYWxlc1Byb2Nlc3NBdG9tO1xyXG4gIHJlYWRvbmx5IHBob25lJDogQmJQaG9uZUF0b207XHJcbiAgcmVhZG9ubHkgY3VzdG9tZXJNb2RlbSQ6IEJiQ3VzdG9tZXJNb2RlbUF0b207XHJcbiAgcmVhZG9ubHkgY29udGFjdFBob25lJDogQmJDb250YWN0UGhvbmU7XHJcbiAgcmVhZG9ubHkgaW1tZWRpYXRlRWZmZWN0JDogQmJJbW1lZGlhdGVFZmZlY3RBdG9tO1xyXG4gIHJlYWRvbmx5IGVmZmVjdGl2ZURhdGVzJDogQmJFZmZlY3RpdmVEYXRlc0F0b207XHJcbiAgcmVhZG9ubHkgZWZmZWN0aXZlRGF0ZSQ6IEJiRWZmZWN0aXZlRGF0ZUF0b207XHJcbiAgcmVhZG9ubHkgcHJvZHVjdCQ6IEJiUHJvZHVjdEF0b207XHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIE1pZ3JhdGlvbkNvZGVTdGF0ZSA9XHJcbiAgfCB7IGhhc0ludGVybmV0OiBmYWxzZTsgbWlncmF0aW9uQ29kZT86IG5ldmVyOyBpbmZvPzogbmV2ZXIgfVxyXG4gIHwgeyBoYXNJbnRlcm5ldDogdHJ1ZTsgbWlncmF0aW9uQ29kZTogc3RyaW5nOyBpbmZvOiBCQk1pZ3JhdGlvbkNvZGVJbmZvIH1cclxuICB8IHVuZGVmaW5lZDtcclxuIl0sImZpbGUiOiJDOi9Vc2Vycy9haW50cm9uYS9EZXNrdG9wL0FwcC9yZWFjdC9uYWovbGlicy9kYXRhLWFjY2Vzcy9zcmMvbGliL2F0b21zL2Jyb2FkYmFuZC90eXBlcy50cyJ9