globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || {
  cache: /* @__PURE__ */ new Map(),
  get(name, inst) {
    if (this.cache.has(name)) {
      return this.cache.get(name);
    }
    this.cache.set(name, inst);
    return inst;
  }
};
import { atom } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/jotai.js?v=0189a8d1";
import { customerIdentityAtom, ownershipTypeAtom } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/atoms/profile-atoms.ts";
export const bulkOrderProperty$ = globalThis.jotaiAtomCache.get("C:\\Users\\aintrona\\Desktop\\App\\react\\naj\\libs\\data-access\\src\\lib\\atoms\\contract\\helpers\\property.ts/bulkOrderProperty$", atom((get) => {
  const document = get(customerIdentityAtom);
  if (!document) {
    return;
  }
  return {
    typeOfDocument: document.type,
    documentNumber: document.id,
    documentReleaseDate: document.releasedOn,
    documentIssuedBy: document.issuedBy,
    title: get(ownershipTypeAtom)
  };
}, (_get, set, lead) => {
  const imm = lead;
  if (!imm) return;
  if (imm.typeOfDocument && imm.documentNumber && imm.documentReleaseDate && imm.documentIssuedBy) {
    set(customerIdentityAtom, {
      type: imm.typeOfDocument,
      id: imm.documentNumber,
      releasedOn: imm.documentReleaseDate,
      issuedBy: imm.documentIssuedBy
    });
  }
  if (imm.title) {
    set(ownershipTypeAtom, imm.title);
  }
}));
bulkOrderProperty$.debugLabel = "bulkOrderProperty$";

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLFNBQVNBLFlBQVk7QUFHckIsU0FBU0Msc0JBQXNCQyx5QkFBeUI7QUFHeEQsYUFBQUMscUJBQUFDLFdBQUFDLGVBQUFDLElBQUEsd0lBRUlOLEtBQ0RNLFNBQVE7QUFDUCxRQUFNQyxXQUFXRCxJQUFJTCxvQkFBb0I7QUFDekMsTUFBSSxDQUFDTSxVQUFVO0FBQ2I7QUFBQSxFQUNGO0FBRUEsU0FBTztBQUFBLElBQ0xDLGdCQUFnQkQsU0FBU0U7QUFBQUEsSUFDekJDLGdCQUFnQkgsU0FBU0k7QUFBQUEsSUFDekJDLHFCQUFxQkwsU0FBU007QUFBQUEsSUFDOUJDLGtCQUFrQlAsU0FBU1E7QUFBQUEsSUFDM0JDLE9BQU9WLElBQUlKLGlCQUFpQjtBQUFBLEVBQzlCO0FBQ0YsR0FDQSxDQUFDZSxNQUFNQyxLQUFLQyxTQUFTO0FBQ25CLFFBQU1DLE1BQU1EO0FBQ1osTUFBSSxDQUFDQyxJQUFLO0FBRVYsTUFDRUEsSUFBSVosa0JBQ0pZLElBQUlWLGtCQUNKVSxJQUFJUix1QkFDSlEsSUFBSU4sa0JBQ0o7QUFDQUksUUFBSWpCLHNCQUFzQjtBQUFBLE1BQ3hCUSxNQUFNVyxJQUFJWjtBQUFBQSxNQUNWRyxJQUFJUyxJQUFJVjtBQUFBQSxNQUNSRyxZQUFZTyxJQUFJUjtBQUFBQSxNQUNoQkcsVUFBVUssSUFBSU47QUFBQUEsSUFDaEIsQ0FBQztBQUFBLEVBQ0g7QUFDQSxNQUFJTSxJQUFJSixPQUFPO0FBQ2JFLFFBQUloQixtQkFBbUJrQixJQUFJSixLQUFzQjtBQUFBLEVBQ25EO0FBQ0YsQ0FDRixDQUFDO0FBQUNiLG1CQUFBa0IsYUFBQSIsIm5hbWVzIjpbImF0b20iLCJjdXN0b21lcklkZW50aXR5QXRvbSIsIm93bmVyc2hpcFR5cGVBdG9tIiwiYnVsa09yZGVyUHJvcGVydHkkIiwiZ2xvYmFsVGhpcyIsImpvdGFpQXRvbUNhY2hlIiwiZ2V0IiwiZG9jdW1lbnQiLCJ0eXBlT2ZEb2N1bWVudCIsInR5cGUiLCJkb2N1bWVudE51bWJlciIsImlkIiwiZG9jdW1lbnRSZWxlYXNlRGF0ZSIsInJlbGVhc2VkT24iLCJkb2N1bWVudElzc3VlZEJ5IiwiaXNzdWVkQnkiLCJ0aXRsZSIsIl9nZXQiLCJzZXQiLCJsZWFkIiwiaW1tIiwiZGVidWdMYWJlbCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJwcm9wZXJ0eS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhdG9tIH0gZnJvbSAnam90YWknO1xyXG5pbXBvcnQgdHlwZSB7IE1vbmdvTGVhZCB9IGZyb20gJy4uLy4uLy4uL2FwaS9sZWFkL190eXBlcyc7XHJcbmltcG9ydCB7IElkZW50aXR5RG9jdW1lbnRUeXBlLCBPd25lcnNoaXBUeXBlIH0gZnJvbSAnLi4vLi4vZW51bXMnO1xyXG5pbXBvcnQgeyBjdXN0b21lcklkZW50aXR5QXRvbSwgb3duZXJzaGlwVHlwZUF0b20gfSBmcm9tICcuLi8uLi9wcm9maWxlLWF0b21zJztcclxuaW1wb3J0IHsgQnVsa09yZGVySGVscGVyQXRvbSB9IGZyb20gJy4vdHlwZXMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJ1bGtPcmRlclByb3BlcnR5JDogQnVsa09yZGVySGVscGVyQXRvbTxcclxuICBNb25nb0xlYWRbJ2ltbW9iaWxlRGF0YSddIHwgdW5kZWZpbmVkXHJcbj4gPSBhdG9tKFxyXG4gIChnZXQpID0+IHtcclxuICAgIGNvbnN0IGRvY3VtZW50ID0gZ2V0KGN1c3RvbWVySWRlbnRpdHlBdG9tKTtcclxuICAgIGlmICghZG9jdW1lbnQpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIHR5cGVPZkRvY3VtZW50OiBkb2N1bWVudC50eXBlLFxyXG4gICAgICBkb2N1bWVudE51bWJlcjogZG9jdW1lbnQuaWQsXHJcbiAgICAgIGRvY3VtZW50UmVsZWFzZURhdGU6IGRvY3VtZW50LnJlbGVhc2VkT24sXHJcbiAgICAgIGRvY3VtZW50SXNzdWVkQnk6IGRvY3VtZW50Lmlzc3VlZEJ5LFxyXG4gICAgICB0aXRsZTogZ2V0KG93bmVyc2hpcFR5cGVBdG9tKSxcclxuICAgIH07XHJcbiAgfSxcclxuICAoX2dldCwgc2V0LCBsZWFkKSA9PiB7XHJcbiAgICBjb25zdCBpbW0gPSBsZWFkO1xyXG4gICAgaWYgKCFpbW0pIHJldHVybjtcclxuXHJcbiAgICBpZiAoXHJcbiAgICAgIGltbS50eXBlT2ZEb2N1bWVudCAmJlxyXG4gICAgICBpbW0uZG9jdW1lbnROdW1iZXIgJiZcclxuICAgICAgaW1tLmRvY3VtZW50UmVsZWFzZURhdGUgJiZcclxuICAgICAgaW1tLmRvY3VtZW50SXNzdWVkQnlcclxuICAgICkge1xyXG4gICAgICBzZXQoY3VzdG9tZXJJZGVudGl0eUF0b20sIHtcclxuICAgICAgICB0eXBlOiBpbW0udHlwZU9mRG9jdW1lbnQgYXMgSWRlbnRpdHlEb2N1bWVudFR5cGUsXHJcbiAgICAgICAgaWQ6IGltbS5kb2N1bWVudE51bWJlcixcclxuICAgICAgICByZWxlYXNlZE9uOiBpbW0uZG9jdW1lbnRSZWxlYXNlRGF0ZSxcclxuICAgICAgICBpc3N1ZWRCeTogaW1tLmRvY3VtZW50SXNzdWVkQnksXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgaWYgKGltbS50aXRsZSkge1xyXG4gICAgICBzZXQob3duZXJzaGlwVHlwZUF0b20sIGltbS50aXRsZSBhcyBPd25lcnNoaXBUeXBlKTtcclxuICAgIH1cclxuICB9XHJcbik7XHJcbiJdLCJmaWxlIjoiQzovVXNlcnMvYWludHJvbmEvRGVza3RvcC9BcHAvcmVhY3QvbmFqL2xpYnMvZGF0YS1hY2Nlc3Mvc3JjL2xpYi9hdG9tcy9jb250cmFjdC9oZWxwZXJzL3Byb3BlcnR5LnRzIn0=