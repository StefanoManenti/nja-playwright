import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/lib/pages/TypLikePage.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/lib/pages/TypLikePage.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import { StepTitle } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-molecules/src/index.ts";
import { StepLayout } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/lib/layout/index.ts";
import { TypIcon } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/lib/TypIcon.tsx";
export function TypLikePage(props) {
  return /* @__PURE__ */ jsxDEV(StepLayout, { cta: props.cta, variant: "typ", children: [
    /* @__PURE__ */ jsxDEV(TypIcon, { children: props.icon }, void 0, false, {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/lib/pages/TypLikePage.tsx",
      lineNumber: 14,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ jsxDEV("div", { children: /* @__PURE__ */ jsxDEV(StepTitle, { title2: props.title, subtitle: props.text }, void 0, false, {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/lib/pages/TypLikePage.tsx",
      lineNumber: 16,
      columnNumber: 9
    }, this) }, void 0, false, {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/lib/pages/TypLikePage.tsx",
      lineNumber: 15,
      columnNumber: 7
    }, this)
  ] }, void 0, true, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/lib/pages/TypLikePage.tsx",
    lineNumber: 13,
    columnNumber: 5
  }, this);
}
_c = TypLikePage;
var _c;
$RefreshReg$(_c, "TypLikePage");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/ui-organisms/src/lib/pages/TypLikePage.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBYU07Ozs7O2dCQWJOLE9BQVNBLGNBQVM7QUFBUSx3REFBc0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRWhELFNBQVNDLGtCQUFrQjtBQUMzQixTQUEyQkMsZUFBZTtBQUVuQyxnQkFBU0MsWUFBWUMsT0FLekI7QUFDRCxTQUNFLHVCQUFDLGNBQVcsS0FBS0EsTUFBTUMsS0FBSyxTQUFRLE9BQ2xDO0FBQUEsMkJBQUMsV0FBU0QsZ0JBQU1FLFFBQWhCO0FBQUE7QUFBQTtBQUFBO0FBQUEsV0FBcUI7QUFBQSxJQUNyQix1QkFBQyxTQUNDLGlDQUFDLGFBQVUsUUFBUUYsTUFBTUcsT0FBTyxVQUFVSCxNQUFNSSxRQUFoRDtBQUFBO0FBQUE7QUFBQTtBQUFBLFdBQXFELEtBRHZEO0FBQUE7QUFBQTtBQUFBO0FBQUEsV0FFQTtBQUFBLE9BSkY7QUFBQTtBQUFBO0FBQUE7QUFBQSxTQUtBO0FBRUo7QUFBQ0MsS0FkZU47QUFBVyxJQUFBTTtBQUFBQyxhQUFBRCxJQUFBIiwibmFtZXMiOlsiU3RlcFRpdGxlIiwiU3RlcExheW91dCIsIlR5cEljb24iLCJUeXBMaWtlUGFnZSIsInByb3BzIiwiY3RhIiwiaWNvbiIsInRpdGxlIiwidGV4dCIsIl9jIiwiJFJlZnJlc2hSZWckIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbIlR5cExpa2VQYWdlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdGVwVGl0bGUgfSBmcm9tICdAbmFqLXdvL3VpLW1vbGVjdWxlcyc7XHJcbmltcG9ydCBSZWFjdCwgeyBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IFN0ZXBMYXlvdXQgfSBmcm9tICcuLi9sYXlvdXQnO1xyXG5pbXBvcnQgeyB0eXBlIEljb25FbGVtZW50LCBUeXBJY29uIH0gZnJvbSAnLi4vVHlwSWNvbic7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gVHlwTGlrZVBhZ2UocHJvcHM6IHtcclxuICBpY29uOiBJY29uRWxlbWVudDtcclxuICB0aXRsZTogUmVhY3ROb2RlO1xyXG4gIHRleHQ6IFJlYWN0Tm9kZTtcclxuICBjdGE6IFJlYWN0Tm9kZTtcclxufSkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8U3RlcExheW91dCBjdGE9e3Byb3BzLmN0YX0gdmFyaWFudD1cInR5cFwiPlxyXG4gICAgICA8VHlwSWNvbj57cHJvcHMuaWNvbn08L1R5cEljb24+XHJcbiAgICAgIDxkaXY+XHJcbiAgICAgICAgPFN0ZXBUaXRsZSB0aXRsZTI9e3Byb3BzLnRpdGxlfSBzdWJ0aXRsZT17cHJvcHMudGV4dH0gLz5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L1N0ZXBMYXlvdXQ+XHJcbiAgKTtcclxufVxyXG4iXSwiZmlsZSI6IkM6L1VzZXJzL2FpbnRyb25hL0Rlc2t0b3AvQXBwL3JlYWN0L25hai9saWJzL3VpLW9yZ2FuaXNtcy9zcmMvbGliL3BhZ2VzL1R5cExpa2VQYWdlLnRzeCJ9