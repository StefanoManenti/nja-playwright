globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || {
  cache: /* @__PURE__ */ new Map(),
  get(name, inst) {
    if (this.cache.has(name)) {
      return this.cache.get(name);
    }
    this.cache.set(name, inst);
    return inst;
  }
};
import { atom } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/jotai.js?v=0189a8d1";
import { checkModalitaOperativa, getModalitaOperativaAdobe } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/api/offers/index.ts";
import { offer$ } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/api/products-collection/index.ts";
import { monoProductCodeAtom, operativeModeAtom } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/troubleshooting/atoms.ts";
import { workingProductAtom } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/troubleshooting/troubleshooting.ts";
import { currentPlicoCode } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/atoms/current-contract-info-atoms.ts";
import { customerSegmentAtom } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/atoms/customer-atoms.ts";
import { Segment } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/atoms/enums.ts";
import { taxIdAtom } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/atoms/profile-atoms.ts";
export const couponAvailable$ = globalThis.jotaiAtomCache.get("C:\\Users\\aintrona\\Desktop\\App\\react\\naj\\libs\\data-access\\src\\lib\\atoms\\coupon\\index.ts/couponAvailable$", atom(async (get) => {
  const offer = await get(offer$);
  if (!offer) {
    return;
  }
  const operativeMode = get(operativeModeAtom);
  if (!operativeMode) {
    return;
  }
  return checkModalitaOperativa(offer.coupon, operativeMode);
}));
couponAvailable$.debugLabel = "couponAvailable$";
const _coupon$ = globalThis.jotaiAtomCache.get("C:\\Users\\aintrona\\Desktop\\App\\react\\naj\\libs\\data-access\\src\\lib\\atoms\\coupon\\index.ts/_coupon$", atom());
_coupon$.debugLabel = "_coupon$";
export const couponAtom = globalThis.jotaiAtomCache.get("C:\\Users\\aintrona\\Desktop\\App\\react\\naj\\libs\\data-access\\src\\lib\\atoms\\coupon\\index.ts/couponAtom", atom((get) => {
  const coupon = get(_coupon$);
  if (!coupon) {
    return;
  }
  return get(coupon.state$);
}, async (get, set, ...args) => {
  let coupon = get(_coupon$);
  if (!coupon) {
    const {
      Coupon: Coupon2
    } = await import("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/atoms/coupon/Coupon.ts");
    coupon = new Coupon2({
      codFiscPiva: taxIdAtom,
      codPratica: currentPlicoCode,
      commodity: atom((get2) => {
        const workingProduct = get2(workingProductAtom);
        return workingProduct?.commodity;
      }),
      prodotto: atom(async (get2) => get2(monoProductCodeAtom)),
      modOpCorrente: atom(async (get2) => getModalitaOperativaAdobe(get2(operativeModeAtom))),
      segmento: atom(async (get2) => await get2(customerSegmentAtom) === Segment.SMALL ? "SMALL" : "RESID"),
      step: atom(async (get2) => "NUOVO_WEBORDER")
    });
    set(_coupon$, coupon);
  }
  return set(coupon.state$, ...args);
}));
couponAtom.debugLabel = "couponAtom";

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLFNBQVNBLFlBQVk7QUFDckIsU0FDRUMsd0JBQ0FDLGlDQUNLO0FBQ1AsU0FBU0MsY0FBYztBQUN2QixTQUNFQyxxQkFDQUMseUJBQ0s7QUFDUCxTQUFTQywwQkFBMEI7QUFFbkMsU0FBU0Msd0JBQXdCO0FBQ2pDLFNBQVNDLDJCQUEyQjtBQUNwQyxTQUFTQyxlQUFlO0FBQ3hCLFNBQVNDLGlCQUFpQjtBQUkxQixhQUFBQyxtQkFBQUMsV0FBQUMsZUFBQUMsSUFBQSx3SEFBZ0NkLEtBQUssT0FBT2MsUUFBUTtBQUNsRCxRQUFNQyxRQUFRLE1BQU1ELElBQUlYLE1BQU07QUFDOUIsTUFBSSxDQUFDWSxPQUFPO0FBQ1Y7QUFBQSxFQUNGO0FBRUEsUUFBTUMsZ0JBQWdCRixJQUFJVCxpQkFBaUI7QUFDM0MsTUFBSSxDQUFDVyxlQUFlO0FBQ2xCO0FBQUEsRUFDRjtBQUVBLFNBQU9mLHVCQUF1QmMsTUFBTUUsUUFBUUQsYUFBYTtBQUMzRCxDQUFDLENBQUM7QUFBQ0wsaUJBQUFPLGFBQUE7QUFBQSxNQUFBQyxXQUFBUCxXQUFBQyxlQUFBQyxJQUFBLGdIQUVjZCxLQUFhLENBQUM7QUFBQW1CLFNBQUFELGFBQUE7QUFFL0IsYUFBQUUsYUFBQVIsV0FBQUMsZUFBQUMsSUFBQSxrSEFBMkNkLEtBQ3hDYyxTQUFRO0FBQ1AsUUFBTUcsU0FBU0gsSUFBSUssUUFBUTtBQUMzQixNQUFJLENBQUNGLFFBQVE7QUFDWDtBQUFBLEVBQ0Y7QUFDQSxTQUFPSCxJQUFJRyxPQUFPSSxNQUFNO0FBQzFCLEdBQ0EsT0FBT1AsS0FBS1EsUUFBUUMsU0FBUztBQUMzQixNQUFJTixTQUFTSCxJQUFJSyxRQUFRO0FBQ3pCLE1BQUksQ0FBQ0YsUUFBUTtBQUVYLFVBQU07QUFBQSxNQUFFTztBQUFBQSxJQUFPLElBQUksTUFBTSxPQUFPLFVBQVU7QUFDMUNQLGFBQVMsSUFBSU8sUUFBTztBQUFBLE1BQ2xCQyxhQUFhZjtBQUFBQSxNQUNiZ0IsWUFBWW5CO0FBQUFBLE1BQ1pvQixXQUFXM0IsS0FBTWMsVUFBUTtBQUN2QixjQUFNYyxpQkFDSmQsS0FBSVIsa0JBQWtCO0FBQ3hCLGVBQU9zQixnQkFBZ0JEO0FBQUFBLE1BQ3pCLENBQUM7QUFBQSxNQUNERSxVQUFVN0IsS0FBSyxPQUFPYyxTQUFRQSxLQUFJVixtQkFBbUIsQ0FBQztBQUFBLE1BQ3REMEIsZUFBZTlCLEtBQUssT0FBT2MsU0FDekJaLDBCQUEwQlksS0FBSVQsaUJBQWlCLENBQUMsQ0FDbEQ7QUFBQSxNQUNBMEIsVUFBVS9CLEtBQUssT0FBT2MsU0FDbkIsTUFBTUEsS0FBSU4sbUJBQW1CLE1BQU9DLFFBQVF1QixRQUFRLFVBQVUsT0FDakU7QUFBQSxNQUNBQyxNQUFNakMsS0FBSyxPQUFPYyxTQUFRLGdCQUFnQjtBQUFBLElBQzVDLENBQUM7QUFDRFEsUUFBSUgsVUFBVUYsTUFBTTtBQUFBLEVBQ3RCO0FBQ0EsU0FBT0ssSUFBSUwsT0FBT0ksUUFBUSxHQUFHRSxJQUFJO0FBQ25DLENBQ0YsQ0FBQztBQUFDSCxXQUFBRixhQUFBIiwibmFtZXMiOlsiYXRvbSIsImNoZWNrTW9kYWxpdGFPcGVyYXRpdmEiLCJnZXRNb2RhbGl0YU9wZXJhdGl2YUFkb2JlIiwib2ZmZXIkIiwibW9ub1Byb2R1Y3RDb2RlQXRvbSIsIm9wZXJhdGl2ZU1vZGVBdG9tIiwid29ya2luZ1Byb2R1Y3RBdG9tIiwiY3VycmVudFBsaWNvQ29kZSIsImN1c3RvbWVyU2VnbWVudEF0b20iLCJTZWdtZW50IiwidGF4SWRBdG9tIiwiY291cG9uQXZhaWxhYmxlJCIsImdsb2JhbFRoaXMiLCJqb3RhaUF0b21DYWNoZSIsImdldCIsIm9mZmVyIiwib3BlcmF0aXZlTW9kZSIsImNvdXBvbiIsImRlYnVnTGFiZWwiLCJfY291cG9uJCIsImNvdXBvbkF0b20iLCJzdGF0ZSQiLCJzZXQiLCJhcmdzIiwiQ291cG9uIiwiY29kRmlzY1BpdmEiLCJjb2RQcmF0aWNhIiwiY29tbW9kaXR5Iiwid29ya2luZ1Byb2R1Y3QiLCJwcm9kb3R0byIsIm1vZE9wQ29ycmVudGUiLCJzZWdtZW50byIsIlNNQUxMIiwic3RlcCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJpbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhdG9tIH0gZnJvbSAnam90YWknO1xyXG5pbXBvcnQge1xyXG4gIGNoZWNrTW9kYWxpdGFPcGVyYXRpdmEsXHJcbiAgZ2V0TW9kYWxpdGFPcGVyYXRpdmFBZG9iZSxcclxufSBmcm9tICcuLi8uLi9hcGkvb2ZmZXJzJztcclxuaW1wb3J0IHsgb2ZmZXIkIH0gZnJvbSAnLi4vLi4vYXBpL3Byb2R1Y3RzLWNvbGxlY3Rpb24nO1xyXG5pbXBvcnQge1xyXG4gIG1vbm9Qcm9kdWN0Q29kZUF0b20sXHJcbiAgb3BlcmF0aXZlTW9kZUF0b20sXHJcbn0gZnJvbSAnLi4vLi4vdHJvdWJsZXNob290aW5nL2F0b21zJztcclxuaW1wb3J0IHsgd29ya2luZ1Byb2R1Y3RBdG9tIH0gZnJvbSAnLi4vLi4vdHJvdWJsZXNob290aW5nL3Ryb3VibGVzaG9vdGluZyc7XHJcbmltcG9ydCB7IFdvcmtpbmdQcm9kdWN0IH0gZnJvbSAnLi4vLi4vdHJvdWJsZXNob290aW5nL1dvcmtpbmdQcm9kdWN0JztcclxuaW1wb3J0IHsgY3VycmVudFBsaWNvQ29kZSB9IGZyb20gJy4uL2N1cnJlbnQtY29udHJhY3QtaW5mby1hdG9tcyc7XHJcbmltcG9ydCB7IGN1c3RvbWVyU2VnbWVudEF0b20gfSBmcm9tICcuLi9jdXN0b21lci1hdG9tcyc7XHJcbmltcG9ydCB7IFNlZ21lbnQgfSBmcm9tICcuLi9lbnVtcyc7XHJcbmltcG9ydCB7IHRheElkQXRvbSB9IGZyb20gJy4uL3Byb2ZpbGUtYXRvbXMnO1xyXG5pbXBvcnQgeyBDb3Vwb24gfSBmcm9tICcuL0NvdXBvbic7XHJcbmltcG9ydCB7IENvdXBvblN0YXRlQXRvbSB9IGZyb20gJy4vdHlwZXMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvdXBvbkF2YWlsYWJsZSQgPSBhdG9tKGFzeW5jIChnZXQpID0+IHtcclxuICBjb25zdCBvZmZlciA9IGF3YWl0IGdldChvZmZlciQpO1xyXG4gIGlmICghb2ZmZXIpIHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIGNvbnN0IG9wZXJhdGl2ZU1vZGUgPSBnZXQob3BlcmF0aXZlTW9kZUF0b20pO1xyXG4gIGlmICghb3BlcmF0aXZlTW9kZSkge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGNoZWNrTW9kYWxpdGFPcGVyYXRpdmEob2ZmZXIuY291cG9uLCBvcGVyYXRpdmVNb2RlKTtcclxufSk7XHJcblxyXG5jb25zdCBfY291cG9uJCA9IGF0b208Q291cG9uPigpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvdXBvbkF0b206IENvdXBvblN0YXRlQXRvbSA9IGF0b20oXHJcbiAgKGdldCkgPT4ge1xyXG4gICAgY29uc3QgY291cG9uID0gZ2V0KF9jb3Vwb24kKTtcclxuICAgIGlmICghY291cG9uKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHJldHVybiBnZXQoY291cG9uLnN0YXRlJCk7XHJcbiAgfSxcclxuICBhc3luYyAoZ2V0LCBzZXQsIC4uLmFyZ3MpID0+IHtcclxuICAgIGxldCBjb3Vwb24gPSBnZXQoX2NvdXBvbiQpO1xyXG4gICAgaWYgKCFjb3Vwb24pIHtcclxuICAgICAgLy8gSW5pdCBDb3Vwb25cclxuICAgICAgY29uc3QgeyBDb3Vwb24gfSA9IGF3YWl0IGltcG9ydCgnLi9Db3Vwb24nKTtcclxuICAgICAgY291cG9uID0gbmV3IENvdXBvbih7XHJcbiAgICAgICAgY29kRmlzY1BpdmE6IHRheElkQXRvbSxcclxuICAgICAgICBjb2RQcmF0aWNhOiBjdXJyZW50UGxpY29Db2RlLFxyXG4gICAgICAgIGNvbW1vZGl0eTogYXRvbSgoZ2V0KSA9PiB7XHJcbiAgICAgICAgICBjb25zdCB3b3JraW5nUHJvZHVjdDogV29ya2luZ1Byb2R1Y3QgfCB1bmRlZmluZWQgPVxyXG4gICAgICAgICAgICBnZXQod29ya2luZ1Byb2R1Y3RBdG9tKTtcclxuICAgICAgICAgIHJldHVybiB3b3JraW5nUHJvZHVjdD8uY29tbW9kaXR5O1xyXG4gICAgICAgIH0pLFxyXG4gICAgICAgIHByb2RvdHRvOiBhdG9tKGFzeW5jIChnZXQpID0+IGdldChtb25vUHJvZHVjdENvZGVBdG9tKSksXHJcbiAgICAgICAgbW9kT3BDb3JyZW50ZTogYXRvbShhc3luYyAoZ2V0KSA9PlxyXG4gICAgICAgICAgZ2V0TW9kYWxpdGFPcGVyYXRpdmFBZG9iZShnZXQob3BlcmF0aXZlTW9kZUF0b20pKVxyXG4gICAgICAgICksXHJcbiAgICAgICAgc2VnbWVudG86IGF0b20oYXN5bmMgKGdldCkgPT5cclxuICAgICAgICAgIChhd2FpdCBnZXQoY3VzdG9tZXJTZWdtZW50QXRvbSkpID09PSBTZWdtZW50LlNNQUxMID8gJ1NNQUxMJyA6ICdSRVNJRCdcclxuICAgICAgICApLFxyXG4gICAgICAgIHN0ZXA6IGF0b20oYXN5bmMgKGdldCkgPT4gJ05VT1ZPX1dFQk9SREVSJyksXHJcbiAgICAgIH0pO1xyXG4gICAgICBzZXQoX2NvdXBvbiQsIGNvdXBvbik7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gc2V0KGNvdXBvbi5zdGF0ZSQsIC4uLmFyZ3MpO1xyXG4gIH1cclxuKTtcclxuIl0sImZpbGUiOiJDOi9Vc2Vycy9haW50cm9uYS9EZXNrdG9wL0FwcC9yZWFjdC9uYWovbGlicy9kYXRhLWFjY2Vzcy9zcmMvbGliL2F0b21zL2NvdXBvbi9pbmRleC50cyJ9