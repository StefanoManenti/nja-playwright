globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || {
  cache: /* @__PURE__ */ new Map(),
  get(name, inst) {
    if (this.cache.has(name)) {
      return this.cache.get(name);
    }
    this.cache.set(name, inst);
    return inst;
  }
};
import { applicaSconto } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/offerta/corrispettivi/utils.ts";
export function calcolaScontiProdotti(offer, opzioni) {
  const toReturn = {
    discount: 0,
    discounts: {},
    texts: {}
  };
  const isOfferVulnerabili = offer.codice.match(/(TRVULN)/);
  const sconti = offer.sconti;
  try {
    if (offer.promo) {
      for (const p of offer.promo) {
        if (p.scontoPercentualePromoSummer) {
          toReturn.discount += p.scontoPercentualePromoSummer;
        }
      }
    }
  } catch (e) {
  }
  const discountDigitale = Number(sconti?.digitale?.percentuale);
  if (discountDigitale) {
    const active = opzioni.pagamento === "DOMICILIAZIONE" && opzioni.bolletta === "DIGITALE";
    toReturn.discounts.digitale = {
      active,
      percent: `${discountDigitale}`
    };
    if (active) {
      toReturn.discount += discountDigitale;
    }
  } else if (opzioni.pagamento === "DOMICILIAZIONE" && offer.codice.match(/FIXA(?!BUS)|INSV/)) {
    toReturn.discounts.domiciliazione = {
      active: true,
      percent: `5`
    };
    toReturn.discount += 5;
    toReturn.texts.scontoApplicato = "SCONTO DOMICILIAZIONE";
  }
  if (offer.codice.match(/LFIXATIV/) && offer.codice.match(/GFIXATIV/)) {
    toReturn.texts.scontoWeb2 = {
      text: "SCONTO WEB",
      qty: "40",
      unit: "€",
      info: "al 3° mese"
    };
  } else if (offer.codice.match(/LFIXATIV/) || offer.codice.match(/GFIXATIV/)) {
    toReturn.texts.scontoWeb2 = {
      text: "SCONTO WEB",
      qty: "20",
      unit: "€",
      info: "al 3° mese"
    };
  }
  const discountDomiciliazione = Number(sconti?.domiciliazione?.percentuale);
  if (discountDomiciliazione) {
    const active = opzioni.pagamento === "DOMICILIAZIONE";
    toReturn.discounts.domiciliazione = {
      active,
      percent: `${discountDomiciliazione}`
    };
    if (active) {
      toReturn.discount += discountDomiciliazione;
    }
  }
  if (isOfferVulnerabili) {
    const active = opzioni.pagamento === "DOMICILIAZIONE";
    toReturn.discounts.domiciliazioneFisso = {
      active,
      price: "6",
      unit: "€/anno"
    };
  }
  return toReturn;
}
function scontoPrimoAnno(prices, offer) {
  const sconti = offer.sconti;
  const discounts = [0, 0];
  const discountSpecialDescription = sconti?.secondaRiga?.descrizione;
  if (sconti?.primaRiga?.percentuale) {
    discounts[0] += Number(sconti?.primaRiga.percentuale);
  }
  if (sconti?.secondaRiga?.percentuale) {
    discounts[1] += Number(sconti?.secondaRiga.percentuale);
  }
  const calcNewPrice = (basePrice, [price0, price1]) => {
    const newPrice = {
      ...basePrice,
      qty: price0
    };
    if (discountSpecialDescription) {
      newPrice.info = discountSpecialDescription.replace("##", price1);
    } else {
      delete newPrice.info;
    }
    return newPrice;
  };
  for (const priceGroup of prices) {
    priceGroup.rows = priceGroup.rows.map((row) => ({
      name: row.name,
      price: applicaSconto(row.price, discounts, calcNewPrice)
    }));
  }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUVBLFNBQVNBLHFCQUFxQjtBQU12QixnQkFBU0Msc0JBQ2RDLE9BQ0FDLFNBQ3FCO0FBQ3JCLFFBQU1DLFdBQWdDO0FBQUEsSUFDcENDLFVBQVU7QUFBQSxJQUNWQyxXQUFXLENBQUM7QUFBQSxJQUNaQyxPQUFPLENBQUM7QUFBQSxFQUNWO0FBQ0EsUUFBTUMscUJBQXFCTixNQUFNTyxPQUFPQyxNQUFNLFVBQVU7QUFFeEQsUUFBTUMsU0FBU1QsTUFBTVM7QUFHckIsTUFBSTtBQUNGLFFBQUlULE1BQU1VLE9BQU87QUFDZixpQkFBV0MsS0FBS1gsTUFBTVUsT0FBTztBQUMzQixZQUFJQyxFQUFFQyw4QkFBOEI7QUFDbENWLG1CQUFTQyxZQUFZUSxFQUFFQztBQUFBQSxRQUN6QjtBQUFBLE1BQ0Y7QUFBQSxJQUNGO0FBQUEsRUFDRixTQUFTQyxHQUFHO0FBQUEsRUFBQztBQUdiLFFBQU1DLG1CQUFtQkMsT0FBT04sUUFBUU8sVUFBVUMsV0FBVztBQUM3RCxNQUFJSCxrQkFBa0I7QUFDcEIsVUFBTUksU0FDSmpCLFFBQVFrQixjQUFjLG9CQUFvQmxCLFFBQVFtQixhQUFhO0FBRWpFbEIsYUFBU0UsVUFBVVksV0FBVztBQUFBLE1BQUVFO0FBQUFBLE1BQVFHLFNBQVMsR0FBR1AsZ0JBQWdCO0FBQUEsSUFBRztBQUV2RSxRQUFJSSxRQUFRO0FBQ1ZoQixlQUFTQyxZQUFZVztBQUFBQSxJQUN2QjtBQUFBLEVBQ0YsV0FDRWIsUUFBUWtCLGNBQWMsb0JBQ3RCbkIsTUFBTU8sT0FBT0MsTUFBTSxrQkFBa0IsR0FDckM7QUFDQU4sYUFBU0UsVUFBVWtCLGlCQUFpQjtBQUFBLE1BQ2xDSixRQUFRO0FBQUEsTUFDUkcsU0FBUztBQUFBLElBQ1g7QUFDQW5CLGFBQVNDLFlBQVk7QUFDckJELGFBQVNHLE1BQU1rQixrQkFBa0I7QUFBQSxFQUNuQztBQUVBLE1BQUl2QixNQUFNTyxPQUFPQyxNQUFNLFVBQVUsS0FBS1IsTUFBTU8sT0FBT0MsTUFBTSxVQUFVLEdBQUc7QUFDcEVOLGFBQVNHLE1BQU1tQixhQUFhO0FBQUEsTUFDMUJDLE1BQU07QUFBQSxNQUNOQyxLQUFLO0FBQUEsTUFDTEMsTUFBTTtBQUFBLE1BQ05DLE1BQU07QUFBQSxJQUNSO0FBQUEsRUFDRixXQUFXNUIsTUFBTU8sT0FBT0MsTUFBTSxVQUFVLEtBQUtSLE1BQU1PLE9BQU9DLE1BQU0sVUFBVSxHQUFHO0FBQzNFTixhQUFTRyxNQUFNbUIsYUFBYTtBQUFBLE1BQzFCQyxNQUFNO0FBQUEsTUFDTkMsS0FBSztBQUFBLE1BQ0xDLE1BQU07QUFBQSxNQUNOQyxNQUFNO0FBQUEsSUFDUjtBQUFBLEVBQ0Y7QUFHQSxRQUFNQyx5QkFBeUJkLE9BQU9OLFFBQVFhLGdCQUFnQkwsV0FBVztBQUN6RSxNQUFJWSx3QkFBd0I7QUFDMUIsVUFBTVgsU0FBU2pCLFFBQVFrQixjQUFjO0FBRXJDakIsYUFBU0UsVUFBVWtCLGlCQUFpQjtBQUFBLE1BQ2xDSjtBQUFBQSxNQUNBRyxTQUFTLEdBQUdRLHNCQUFzQjtBQUFBLElBQ3BDO0FBRUEsUUFBSVgsUUFBUTtBQUNWaEIsZUFBU0MsWUFBWTBCO0FBQUFBLElBQ3ZCO0FBQUEsRUFDRjtBQUVBLE1BQUl2QixvQkFBb0I7QUFDdEIsVUFBTVksU0FBU2pCLFFBQVFrQixjQUFjO0FBQ3JDakIsYUFBU0UsVUFBVTBCLHNCQUFzQjtBQUFBLE1BQ3ZDWjtBQUFBQSxNQUNBYSxPQUFPO0FBQUEsTUFDUEosTUFBTTtBQUFBLElBQ1I7QUFBQSxFQUNGO0FBQ0EsU0FBT3pCO0FBQ1Q7QUFRQSxTQUFTOEIsZ0JBQ1BDLFFBQ0FqQyxPQUNBO0FBQ0EsUUFBTVMsU0FBU1QsTUFBTVM7QUFDckIsUUFBTUwsWUFBWSxDQUFDLEdBQUcsQ0FBQztBQUd2QixRQUFNOEIsNkJBQTZCekIsUUFBUTBCLGFBQWFDO0FBQ3hELE1BQUkzQixRQUFRNEIsV0FBV3BCLGFBQWE7QUFDbENiLGNBQVUsQ0FBQyxLQUFLVyxPQUFPTixRQUFRNEIsVUFBVXBCLFdBQVc7QUFBQSxFQUN0RDtBQUNBLE1BQUlSLFFBQVEwQixhQUFhbEIsYUFBYTtBQUNwQ2IsY0FBVSxDQUFDLEtBQUtXLE9BQU9OLFFBQVEwQixZQUFZbEIsV0FBVztBQUFBLEVBQ3hEO0FBR0EsUUFBTXFCLGVBQXNEQSxDQUMxREMsV0FDQSxDQUFDQyxRQUFRQyxNQUFNLE1BQ1o7QUFDSCxVQUFNQyxXQUFXO0FBQUEsTUFBRSxHQUFHSDtBQUFBQSxNQUFXYixLQUFLYztBQUFBQSxJQUFPO0FBRTdDLFFBQUlOLDRCQUE0QjtBQUM5QlEsZUFBU2QsT0FBT00sMkJBQTJCUyxRQUFRLE1BQU1GLE1BQU07QUFBQSxJQUNqRSxPQUFPO0FBQ0wsYUFBT0MsU0FBU2Q7QUFBQUEsSUFDbEI7QUFFQSxXQUFPYztBQUFBQSxFQUNUO0FBRUEsYUFBV0UsY0FBY1gsUUFBUTtBQUMvQlcsZUFBV0MsT0FBT0QsV0FBV0MsS0FBS0MsSUFBS0MsVUFBUztBQUFBLE1BQzlDQyxNQUFNRCxJQUFJQztBQUFBQSxNQUNWakIsT0FBT2pDLGNBQWNpRCxJQUFJaEIsT0FBTzNCLFdBQVdrQyxZQUFZO0FBQUEsSUFDekQsRUFBRTtBQUFBLEVBQ0o7QUFDRiIsIm5hbWVzIjpbImFwcGxpY2FTY29udG8iLCJjYWxjb2xhU2NvbnRpUHJvZG90dGkiLCJvZmZlciIsIm9wemlvbmkiLCJ0b1JldHVybiIsImRpc2NvdW50IiwiZGlzY291bnRzIiwidGV4dHMiLCJpc09mZmVyVnVsbmVyYWJpbGkiLCJjb2RpY2UiLCJtYXRjaCIsInNjb250aSIsInByb21vIiwicCIsInNjb250b1BlcmNlbnR1YWxlUHJvbW9TdW1tZXIiLCJlIiwiZGlzY291bnREaWdpdGFsZSIsIk51bWJlciIsImRpZ2l0YWxlIiwicGVyY2VudHVhbGUiLCJhY3RpdmUiLCJwYWdhbWVudG8iLCJib2xsZXR0YSIsInBlcmNlbnQiLCJkb21pY2lsaWF6aW9uZSIsInNjb250b0FwcGxpY2F0byIsInNjb250b1dlYjIiLCJ0ZXh0IiwicXR5IiwidW5pdCIsImluZm8iLCJkaXNjb3VudERvbWljaWxpYXppb25lIiwiZG9taWNpbGlhemlvbmVGaXNzbyIsInByaWNlIiwic2NvbnRvUHJpbW9Bbm5vIiwicHJpY2VzIiwiZGlzY291bnRTcGVjaWFsRGVzY3JpcHRpb24iLCJzZWNvbmRhUmlnYSIsImRlc2NyaXppb25lIiwicHJpbWFSaWdhIiwiY2FsY05ld1ByaWNlIiwiYmFzZVByaWNlIiwicHJpY2UwIiwicHJpY2UxIiwibmV3UHJpY2UiLCJyZXBsYWNlIiwicHJpY2VHcm91cCIsInJvd3MiLCJtYXAiLCJyb3ciLCJuYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbInNjb250aS1wcm9kb3R0aS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPZmZlcnRhU3RhdGVGb3JDb3JyaXNwZXR0aXZpLCBPcHppb25pIH0gZnJvbSAnLi4vdHlwZXMnO1xyXG5pbXBvcnQgeyBQcmljZU5vcm1hbCwgUHJpY2VzQW5kRGlzY291bnRzLCBQcmljZXNHcm91cCB9IGZyb20gJy4vcHJpY2VzJztcclxuaW1wb3J0IHsgYXBwbGljYVNjb250byB9IGZyb20gJy4vdXRpbHMnO1xyXG5cclxudHlwZSBDYWxjb2xvU2NvbnRpUmV0dXJuID0gUGljazxQcmljZXNBbmREaXNjb3VudHMsICdkaXNjb3VudHMnIHwgJ3RleHRzJz4gJiB7XHJcbiAgZGlzY291bnQ6IG51bWJlcjtcclxufTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjYWxjb2xhU2NvbnRpUHJvZG90dGkoXHJcbiAgb2ZmZXI6IE9mZmVydGFTdGF0ZUZvckNvcnJpc3BldHRpdmksXHJcbiAgb3B6aW9uaTogT3B6aW9uaVxyXG4pOiBDYWxjb2xvU2NvbnRpUmV0dXJuIHtcclxuICBjb25zdCB0b1JldHVybjogQ2FsY29sb1Njb250aVJldHVybiA9IHtcclxuICAgIGRpc2NvdW50OiAwLFxyXG4gICAgZGlzY291bnRzOiB7fSxcclxuICAgIHRleHRzOiB7fSxcclxuICB9O1xyXG4gIGNvbnN0IGlzT2ZmZXJWdWxuZXJhYmlsaSA9IG9mZmVyLmNvZGljZS5tYXRjaCgvKFRSVlVMTikvKTtcclxuXHJcbiAgY29uc3Qgc2NvbnRpID0gb2ZmZXIuc2NvbnRpO1xyXG5cclxuICAvLyBBZ2dpdW5nZSBzY29udG8gcHJvbW9cclxuICB0cnkge1xyXG4gICAgaWYgKG9mZmVyLnByb21vKSB7XHJcbiAgICAgIGZvciAoY29uc3QgcCBvZiBvZmZlci5wcm9tbykge1xyXG4gICAgICAgIGlmIChwLnNjb250b1BlcmNlbnR1YWxlUHJvbW9TdW1tZXIpIHtcclxuICAgICAgICAgIHRvUmV0dXJuLmRpc2NvdW50ICs9IHAuc2NvbnRvUGVyY2VudHVhbGVQcm9tb1N1bW1lcjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9IGNhdGNoIChlKSB7fVxyXG5cclxuICAvKiBBZ2dpdW5nZSBsbyBzY29udG8gZGlnaXRhbGUgKi9cclxuICBjb25zdCBkaXNjb3VudERpZ2l0YWxlID0gTnVtYmVyKHNjb250aT8uZGlnaXRhbGU/LnBlcmNlbnR1YWxlKTtcclxuICBpZiAoZGlzY291bnREaWdpdGFsZSkge1xyXG4gICAgY29uc3QgYWN0aXZlID1cclxuICAgICAgb3B6aW9uaS5wYWdhbWVudG8gPT09ICdET01JQ0lMSUFaSU9ORScgJiYgb3B6aW9uaS5ib2xsZXR0YSA9PT0gJ0RJR0lUQUxFJztcclxuXHJcbiAgICB0b1JldHVybi5kaXNjb3VudHMuZGlnaXRhbGUgPSB7IGFjdGl2ZSwgcGVyY2VudDogYCR7ZGlzY291bnREaWdpdGFsZX1gIH07XHJcblxyXG4gICAgaWYgKGFjdGl2ZSkge1xyXG4gICAgICB0b1JldHVybi5kaXNjb3VudCArPSBkaXNjb3VudERpZ2l0YWxlO1xyXG4gICAgfVxyXG4gIH0gZWxzZSBpZiAoXHJcbiAgICBvcHppb25pLnBhZ2FtZW50byA9PT0gJ0RPTUlDSUxJQVpJT05FJyAmJlxyXG4gICAgb2ZmZXIuY29kaWNlLm1hdGNoKC9GSVhBKD8hQlVTKXxJTlNWLylcclxuICApIHtcclxuICAgIHRvUmV0dXJuLmRpc2NvdW50cy5kb21pY2lsaWF6aW9uZSA9IHtcclxuICAgICAgYWN0aXZlOiB0cnVlLFxyXG4gICAgICBwZXJjZW50OiBgNWAsXHJcbiAgICB9O1xyXG4gICAgdG9SZXR1cm4uZGlzY291bnQgKz0gNTtcclxuICAgIHRvUmV0dXJuLnRleHRzLnNjb250b0FwcGxpY2F0byA9ICdTQ09OVE8gRE9NSUNJTElBWklPTkUnO1xyXG4gIH1cclxuXHJcbiAgaWYgKG9mZmVyLmNvZGljZS5tYXRjaCgvTEZJWEFUSVYvKSAmJiBvZmZlci5jb2RpY2UubWF0Y2goL0dGSVhBVElWLykpIHtcclxuICAgIHRvUmV0dXJuLnRleHRzLnNjb250b1dlYjIgPSB7XHJcbiAgICAgIHRleHQ6ICdTQ09OVE8gV0VCJyxcclxuICAgICAgcXR5OiAnNDAnLFxyXG4gICAgICB1bml0OiAn4oKsJyxcclxuICAgICAgaW5mbzogJ2FsIDPCsCBtZXNlJyxcclxuICAgIH07XHJcbiAgfSBlbHNlIGlmIChvZmZlci5jb2RpY2UubWF0Y2goL0xGSVhBVElWLykgfHwgb2ZmZXIuY29kaWNlLm1hdGNoKC9HRklYQVRJVi8pKSB7XHJcbiAgICB0b1JldHVybi50ZXh0cy5zY29udG9XZWIyID0ge1xyXG4gICAgICB0ZXh0OiAnU0NPTlRPIFdFQicsXHJcbiAgICAgIHF0eTogJzIwJyxcclxuICAgICAgdW5pdDogJ+KCrCcsXHJcbiAgICAgIGluZm86ICdhbCAzwrAgbWVzZScsXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgLyogQWdnaXVuZ2UgbG8gc2NvbnRvIGRvbWljaWxpYXppb25lICovXHJcbiAgY29uc3QgZGlzY291bnREb21pY2lsaWF6aW9uZSA9IE51bWJlcihzY29udGk/LmRvbWljaWxpYXppb25lPy5wZXJjZW50dWFsZSk7XHJcbiAgaWYgKGRpc2NvdW50RG9taWNpbGlhemlvbmUpIHtcclxuICAgIGNvbnN0IGFjdGl2ZSA9IG9wemlvbmkucGFnYW1lbnRvID09PSAnRE9NSUNJTElBWklPTkUnO1xyXG5cclxuICAgIHRvUmV0dXJuLmRpc2NvdW50cy5kb21pY2lsaWF6aW9uZSA9IHtcclxuICAgICAgYWN0aXZlLFxyXG4gICAgICBwZXJjZW50OiBgJHtkaXNjb3VudERvbWljaWxpYXppb25lfWAsXHJcbiAgICB9O1xyXG5cclxuICAgIGlmIChhY3RpdmUpIHtcclxuICAgICAgdG9SZXR1cm4uZGlzY291bnQgKz0gZGlzY291bnREb21pY2lsaWF6aW9uZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGlmIChpc09mZmVyVnVsbmVyYWJpbGkpIHtcclxuICAgIGNvbnN0IGFjdGl2ZSA9IG9wemlvbmkucGFnYW1lbnRvID09PSAnRE9NSUNJTElBWklPTkUnO1xyXG4gICAgdG9SZXR1cm4uZGlzY291bnRzLmRvbWljaWxpYXppb25lRmlzc28gPSB7XHJcbiAgICAgIGFjdGl2ZTogYWN0aXZlLFxyXG4gICAgICBwcmljZTogJzYnLFxyXG4gICAgICB1bml0OiAn4oKsL2Fubm8nLFxyXG4gICAgfTtcclxuICB9XHJcbiAgcmV0dXJuIHRvUmV0dXJuO1xyXG59XHJcblxyXG4vKipcclxuICogTW9kaWZpY2EgcHJpY2VzIGFwcGxpY2FuZG8gc2NvbnRvIHByaW1vIGFubm8uXHJcbiAqXHJcbiAqIEBwYXJhbSBwcmljZXNcclxuICogQHBhcmFtIG9mZmVyXHJcbiAqL1xyXG5mdW5jdGlvbiBzY29udG9Qcmltb0Fubm8oXHJcbiAgcHJpY2VzOiBQcmljZXNHcm91cFtdLFxyXG4gIG9mZmVyOiBPZmZlcnRhU3RhdGVGb3JDb3JyaXNwZXR0aXZpXHJcbikge1xyXG4gIGNvbnN0IHNjb250aSA9IG9mZmVyLnNjb250aTtcclxuICBjb25zdCBkaXNjb3VudHMgPSBbMCwgMF0gYXMgW251bWJlciwgbnVtYmVyXTtcclxuXHJcbiAgLyogQ29udHJvbGxhIGwnZXNpc3RlbnphIGRlbGxvIHNjb250byBwcmltbyBhbm5vIGUgbG8gYWdnaXVuZ2UgKi9cclxuICBjb25zdCBkaXNjb3VudFNwZWNpYWxEZXNjcmlwdGlvbiA9IHNjb250aT8uc2Vjb25kYVJpZ2E/LmRlc2NyaXppb25lO1xyXG4gIGlmIChzY29udGk/LnByaW1hUmlnYT8ucGVyY2VudHVhbGUpIHtcclxuICAgIGRpc2NvdW50c1swXSArPSBOdW1iZXIoc2NvbnRpPy5wcmltYVJpZ2EucGVyY2VudHVhbGUpO1xyXG4gIH1cclxuICBpZiAoc2NvbnRpPy5zZWNvbmRhUmlnYT8ucGVyY2VudHVhbGUpIHtcclxuICAgIGRpc2NvdW50c1sxXSArPSBOdW1iZXIoc2NvbnRpPy5zZWNvbmRhUmlnYS5wZXJjZW50dWFsZSk7XHJcbiAgfVxyXG5cclxuICAvKiBBcHBsaWNhIGdsaSBzY29udGkgY29udGVudXRpIG5lbGxhIHZhcmlhYmlsZSBkaXNjb3VudHMgKi9cclxuICBjb25zdCBjYWxjTmV3UHJpY2U6IFBhcmFtZXRlcnM8dHlwZW9mIGFwcGxpY2FTY29udG8+WycyJ10gPSAoXHJcbiAgICBiYXNlUHJpY2UsXHJcbiAgICBbcHJpY2UwLCBwcmljZTFdXHJcbiAgKSA9PiB7XHJcbiAgICBjb25zdCBuZXdQcmljZSA9IHsgLi4uYmFzZVByaWNlLCBxdHk6IHByaWNlMCB9IGFzIFByaWNlTm9ybWFsO1xyXG5cclxuICAgIGlmIChkaXNjb3VudFNwZWNpYWxEZXNjcmlwdGlvbikge1xyXG4gICAgICBuZXdQcmljZS5pbmZvID0gZGlzY291bnRTcGVjaWFsRGVzY3JpcHRpb24ucmVwbGFjZSgnIyMnLCBwcmljZTEpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgZGVsZXRlIG5ld1ByaWNlLmluZm87XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG5ld1ByaWNlO1xyXG4gIH07XHJcblxyXG4gIGZvciAoY29uc3QgcHJpY2VHcm91cCBvZiBwcmljZXMpIHtcclxuICAgIHByaWNlR3JvdXAucm93cyA9IHByaWNlR3JvdXAucm93cy5tYXAoKHJvdykgPT4gKHtcclxuICAgICAgbmFtZTogcm93Lm5hbWUsXHJcbiAgICAgIHByaWNlOiBhcHBsaWNhU2NvbnRvKHJvdy5wcmljZSwgZGlzY291bnRzLCBjYWxjTmV3UHJpY2UpLFxyXG4gICAgfSkpO1xyXG4gIH1cclxufVxyXG4iXSwiZmlsZSI6IkM6L1VzZXJzL2FpbnRyb25hL0Rlc2t0b3AvQXBwL3JlYWN0L25hai9saWJzL2RhdGEtYWNjZXNzL3NyYy9saWIvb2ZmZXJ0YS9jb3JyaXNwZXR0aXZpL3Njb250aS1wcm9kb3R0aS50cyJ9