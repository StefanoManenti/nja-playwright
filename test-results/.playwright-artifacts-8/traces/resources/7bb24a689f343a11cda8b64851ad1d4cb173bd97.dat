import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordion.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordion.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$();
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import { ChevronBoldIcon } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-icons/src/index.ts";
import clsx from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/clsx.js?v=0189a8d1";
import __vite__cjsImport5_react from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react.js?v=0189a8d1"; const useCallback = __vite__cjsImport5_react["useCallback"]; const useLayoutEffect = __vite__cjsImport5_react["useLayoutEffect"]; const useRef = __vite__cjsImport5_react["useRef"]; const useState = __vite__cjsImport5_react["useState"]




;
import classes from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordion.module.less";
import classesResets from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/resets.module.less";
import { Typography } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Typography.tsx";
export function ControlledAccordion(props) {
  _s();
  const {
    title,
    subtitle,
    subtitleDefault,
    icon,
    children,
    variant = "default",
    expanded,
    disabled = false,
    autoScroll = false,
    tagId,
    onClick
  } = props;
  const ref = useRef(null);
  useLayoutEffect(() => {
    if (autoScroll && expanded) {
      ref.current?.scrollIntoView({ behavior: "smooth", block: "start" });
    }
  }, [autoScroll, expanded, ref]);
  return /* @__PURE__ */ jsxDEV(
    "div",
    {
      ref,
      className: clsx(
        classes.Accordion,
        expanded && classes.expanded,
        variant === "inside-card" && classes.variantInsideCard,
        variant === "grey" && classes.variantGrey,
        disabled && classes.disabled
      ),
      children: [
        /* @__PURE__ */ jsxDEV(
          "button",
          {
            "data-cs-override-id": tagId,
            className: clsx(classesResets.resetButton, classes.header),
            onClick: !disabled ? onClick : void 0,
            type: "button",
            children: [
              icon && /* @__PURE__ */ jsxDEV("div", { className: classes.icon, children: icon }, void 0, false, {
                fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordion.tsx",
                lineNumber: 77,
                columnNumber: 18
              }, this),
              /* @__PURE__ */ jsxDEV("div", { children: [
                /* @__PURE__ */ jsxDEV(
                  Typography,
                  {
                    variant: icon ? "subtitle1" : variant === "inside-card" ? "subtitle4" : "subtitle3",
                    component: "div",
                    children: title
                  },
                  void 0,
                  false,
                  {
                    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordion.tsx",
                    lineNumber: 79,
                    columnNumber: 11
                  },
                  this
                ),
                subtitle && /* @__PURE__ */ jsxDEV(Typography, { variant: "body2", children: subtitle }, void 0, false, {
                  fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordion.tsx",
                  lineNumber: 91,
                  columnNumber: 24
                }, this),
                !subtitle && subtitleDefault && /* @__PURE__ */ jsxDEV(Typography, { variant: "body2", color: "textSecondary", children: subtitleDefault }, void 0, false, {
                  fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordion.tsx",
                  lineNumber: 93,
                  columnNumber: 11
                }, this)
              ] }, void 0, true, {
                fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordion.tsx",
                lineNumber: 78,
                columnNumber: 9
              }, this),
              /* @__PURE__ */ jsxDEV(ChevronBoldIcon, { className: classes.chevron }, void 0, false, {
                fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordion.tsx",
                lineNumber: 98,
                columnNumber: 9
              }, this)
            ]
          },
          void 0,
          true,
          {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordion.tsx",
            lineNumber: 71,
            columnNumber: 7
          },
          this
        ),
        /* @__PURE__ */ jsxDEV("div", { className: classes.children, children: /* @__PURE__ */ jsxDEV(
          Typography,
          {
            variant: variant === "inside-card" ? "caption1" : "body2",
            component: "div",
            children
          },
          void 0,
          false,
          {
            fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordion.tsx",
            lineNumber: 101,
            columnNumber: 9
          },
          this
        ) }, void 0, false, {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordion.tsx",
          lineNumber: 100,
          columnNumber: 7
        }, this)
      ]
    },
    void 0,
    true,
    {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordion.tsx",
      lineNumber: 61,
      columnNumber: 5
    },
    this
  );
}
_s(ControlledAccordion, "JkctLsMDw5W2MbVlMaFRM76c/8g=");
_c = ControlledAccordion;
export function Accordion(props) {
  _s2();
  const { expanded, handleClick } = useAccordion(!!props.initialExpanded);
  return /* @__PURE__ */ jsxDEV(ControlledAccordion, { ...props, expanded, onClick: handleClick }, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordion.tsx",
    lineNumber: 116,
    columnNumber: 5
  }, this);
}
_s2(Accordion, "1WBb+gOQAiUONKre+y0rJ90a7IU=", false, function() {
  return [useAccordion];
});
_c2 = Accordion;
export function useAccordion(initialExpanded) {
  _s3();
  const [expanded, setExpanded] = useState(initialExpanded);
  const handleClick = useCallback(() => {
    setExpanded((expanded2) => !expanded2);
  }, []);
  return {
    expanded,
    handleClick,
    classes
  };
}
_s3(useAccordion, "dr4OsUOkw7ZI4N9gbTPI8ZYp7Y4=");
var _c, _c2;
$RefreshReg$(_c, "ControlledAccordion");
$RefreshReg$(_c2, "Accordion");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Accordion.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,