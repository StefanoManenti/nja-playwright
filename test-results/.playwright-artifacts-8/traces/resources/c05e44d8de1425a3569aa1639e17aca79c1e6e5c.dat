import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-fields/src/lib/SelectControlled.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-fields/src/lib/SelectControlled.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import { Controller } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react-hook-form.js?v=0189a8d1";
import { Option, Select } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/index.ts";
export function SelectControlled({
  name,
  control,
  rules,
  label,
  fullWidth,
  options,
  showClear,
  hasFilter,
  placeHolder,
  defaultHelperText
}) {
  return /* @__PURE__ */ jsxDEV(
    Controller,
    {
      name,
      control,
      rules,
      render: ({
        field: { onChange, onBlur, value },
        fieldState: { error }
      }) => /* @__PURE__ */ jsxDEV(
        Select,
        {
          label,
          fullWidth,
          placeholder: placeHolder,
          showClear: showClear ? () => onChange(null) : void 0,
          hasFilter,
          value: value || null,
          onChange: (_, value2) => onChange(value2),
          onBlur,
          error: !!error,
          helperText: error?.message || defaultHelperText,
          children: options.map(
            (o, index) => /* @__PURE__ */ jsxDEV(Option, { value: o.value, children: o.label }, o.value || index, false, {
              fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-fields/src/lib/SelectControlled.tsx",
              lineNumber: 54,
              columnNumber: 9
            }, this)
          )
        },
        void 0,
        false,
        {
          fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-fields/src/lib/SelectControlled.tsx",
          lineNumber: 41,
          columnNumber: 7
        },
        this
      )
    },
    void 0,
    false,
    {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-fields/src/lib/SelectControlled.tsx",
      lineNumber: 33,
      columnNumber: 5
    },
    this
  );
}
_c = SelectControlled;
var _c;
$RefreshReg$(_c, "SelectControlled");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/ui-fields/src/lib/SelectControlled.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBcURZOzs7OztnQkFyRFosT0FBU0EsY0FBV0M7QUFBQUEsTUFBVyxRQUFRLDBDQUE0QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRW5FLFNBQVNDLGtCQUFzQztBQUMvQyxTQUFTQyxRQUFRQyxjQUFjO0FBRXhCLGdCQUFTQyxpQkFHZDtBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDO0FBQUFBLEVBQ0FDO0FBWUYsR0FBRztBQUNELFNBQ0U7QUFBQSxJQUFDO0FBQUE7QUFBQSxNQUNDO0FBQUEsTUFDQTtBQUFBLE1BQ0E7QUFBQSxNQUNBLFFBQVEsQ0FBQztBQUFBLFFBQ1BDLE9BQU8sRUFBRUMsVUFBVUMsUUFBUUMsTUFBTTtBQUFBLFFBQ2pDQyxZQUFZLEVBQUVDLE1BQU07QUFBQSxNQUN0QixNQUNFO0FBQUEsUUFBQztBQUFBO0FBQUEsVUFDQztBQUFBLFVBQ0E7QUFBQSxVQUNBLGFBQWFQO0FBQUFBLFVBQ2IsV0FBV0YsWUFBWSxNQUFNSyxTQUFTLElBQUksSUFBSUs7QUFBQUEsVUFDOUM7QUFBQSxVQUNBLE9BQU9ILFNBQVM7QUFBQSxVQUNoQixVQUFVLENBQUNJLEdBQUdKLFdBQVVGLFNBQVNFLE1BQUs7QUFBQSxVQUN0QztBQUFBLFVBQ0EsT0FBTyxDQUFDLENBQUNFO0FBQUFBLFVBQ1QsWUFBWUEsT0FBT0csV0FBV1Q7QUFBQUEsVUFFN0JKLGtCQUFRYztBQUFBQSxZQUFJLENBQUNDLEdBQUdDLFVBQ2YsdUJBQUMsVUFBOEIsT0FBT0QsRUFBRVAsT0FDckNPLFlBQUVqQixTQURRaUIsRUFBRVAsU0FBU1EsT0FBeEI7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFFQTtBQUFBLFVBQ0Q7QUFBQTtBQUFBLFFBaEJIO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxNQWlCQTtBQUFBO0FBQUEsSUF6Qko7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBMEJJO0FBR1I7QUFBQ0MsS0F4RGV2QjtBQUFnQixJQUFBdUI7QUFBQUMsYUFBQUQsSUFBQSIsIm5hbWVzIjpbIkZpZWxkUGF0aCIsIkZpZWxkVmFsdWVzIiwiQ29udHJvbGxlciIsIk9wdGlvbiIsIlNlbGVjdCIsIlNlbGVjdENvbnRyb2xsZWQiLCJuYW1lIiwiY29udHJvbCIsInJ1bGVzIiwibGFiZWwiLCJmdWxsV2lkdGgiLCJvcHRpb25zIiwic2hvd0NsZWFyIiwiaGFzRmlsdGVyIiwicGxhY2VIb2xkZXIiLCJkZWZhdWx0SGVscGVyVGV4dCIsImZpZWxkIiwib25DaGFuZ2UiLCJvbkJsdXIiLCJ2YWx1ZSIsImZpZWxkU3RhdGUiLCJlcnJvciIsInVuZGVmaW5lZCIsIl8iLCJtZXNzYWdlIiwibWFwIiwibyIsImluZGV4IiwiX2MiLCIkUmVmcmVzaFJlZyQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiU2VsZWN0Q29udHJvbGxlZC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRmllbGRQYXRoLCBGaWVsZFZhbHVlcyB9IGZyb20gJ3JlYWN0LWhvb2stZm9ybS9kaXN0L3R5cGVzJztcclxuaW1wb3J0IHsgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBDb250cm9sbGVyLCBVc2VDb250cm9sbGVyUHJvcHMgfSBmcm9tICdyZWFjdC1ob29rLWZvcm0nO1xyXG5pbXBvcnQgeyBPcHRpb24sIFNlbGVjdCB9IGZyb20gJ0BuYWotd28vdWktYXRvbXMnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIFNlbGVjdENvbnRyb2xsZWQ8XHJcbiAgVEZpZWxkVmFsdWVzIGV4dGVuZHMgRmllbGRWYWx1ZXMgPSBGaWVsZFZhbHVlcyxcclxuICBUTmFtZSBleHRlbmRzIEZpZWxkUGF0aDxURmllbGRWYWx1ZXM+ID0gRmllbGRQYXRoPFRGaWVsZFZhbHVlcz5cclxuPih7XHJcbiAgbmFtZSxcclxuICBjb250cm9sLFxyXG4gIHJ1bGVzLFxyXG4gIGxhYmVsLFxyXG4gIGZ1bGxXaWR0aCxcclxuICBvcHRpb25zLFxyXG4gIHNob3dDbGVhcixcclxuICBoYXNGaWx0ZXIsXHJcbiAgcGxhY2VIb2xkZXIsXHJcbiAgZGVmYXVsdEhlbHBlclRleHQsXHJcbn06IHtcclxuICBsYWJlbD86IFJlYWN0Tm9kZTtcclxuICBmdWxsV2lkdGg/OiBib29sZWFuO1xyXG4gIG9wdGlvbnM6IHJlYWRvbmx5IHsgbGFiZWw6IFJlYWN0Tm9kZTsgdmFsdWU6IHN0cmluZyB9W107XHJcbiAgc2hvd0NsZWFyPzogYm9vbGVhbjtcclxuICBoYXNGaWx0ZXI/OiBib29sZWFuO1xyXG4gIHBsYWNlSG9sZGVyPzogc3RyaW5nO1xyXG4gIGRlZmF1bHRIZWxwZXJUZXh0PzogUmVhY3ROb2RlO1xyXG59ICYgUGljazxcclxuICBVc2VDb250cm9sbGVyUHJvcHM8VEZpZWxkVmFsdWVzLCBUTmFtZT4sXHJcbiAgJ25hbWUnIHwgJ2NvbnRyb2wnIHwgJ3J1bGVzJ1xyXG4+KSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxDb250cm9sbGVyXHJcbiAgICAgIG5hbWU9e25hbWV9XHJcbiAgICAgIGNvbnRyb2w9e2NvbnRyb2x9XHJcbiAgICAgIHJ1bGVzPXtydWxlc31cclxuICAgICAgcmVuZGVyPXsoe1xyXG4gICAgICAgIGZpZWxkOiB7IG9uQ2hhbmdlLCBvbkJsdXIsIHZhbHVlIH0sXHJcbiAgICAgICAgZmllbGRTdGF0ZTogeyBlcnJvciB9LFxyXG4gICAgICB9KSA9PiAoXHJcbiAgICAgICAgPFNlbGVjdFxyXG4gICAgICAgICAgbGFiZWw9e2xhYmVsfVxyXG4gICAgICAgICAgZnVsbFdpZHRoPXtmdWxsV2lkdGh9XHJcbiAgICAgICAgICBwbGFjZWhvbGRlcj17cGxhY2VIb2xkZXJ9XHJcbiAgICAgICAgICBzaG93Q2xlYXI9e3Nob3dDbGVhciA/ICgpID0+IG9uQ2hhbmdlKG51bGwpIDogdW5kZWZpbmVkfVxyXG4gICAgICAgICAgaGFzRmlsdGVyPXtoYXNGaWx0ZXJ9XHJcbiAgICAgICAgICB2YWx1ZT17dmFsdWUgfHwgbnVsbH1cclxuICAgICAgICAgIG9uQ2hhbmdlPXsoXywgdmFsdWUpID0+IG9uQ2hhbmdlKHZhbHVlKX1cclxuICAgICAgICAgIG9uQmx1cj17b25CbHVyfVxyXG4gICAgICAgICAgZXJyb3I9eyEhZXJyb3J9XHJcbiAgICAgICAgICBoZWxwZXJUZXh0PXtlcnJvcj8ubWVzc2FnZSB8fCBkZWZhdWx0SGVscGVyVGV4dH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICB7b3B0aW9ucy5tYXAoKG8sIGluZGV4KSA9PiAoXHJcbiAgICAgICAgICAgIDxPcHRpb24ga2V5PXtvLnZhbHVlIHx8IGluZGV4fSB2YWx1ZT17by52YWx1ZX0+XHJcbiAgICAgICAgICAgICAge28ubGFiZWx9XHJcbiAgICAgICAgICAgIDwvT3B0aW9uPlxyXG4gICAgICAgICAgKSl9XHJcbiAgICAgICAgPC9TZWxlY3Q+XHJcbiAgICAgICl9XHJcbiAgICAvPlxyXG4gICk7XHJcbn1cclxuIl0sImZpbGUiOiJDOi9Vc2Vycy9haW50cm9uYS9EZXNrdG9wL0FwcC9yZWFjdC9uYWovbGlicy91aS1maWVsZHMvc3JjL2xpYi9TZWxlY3RDb250cm9sbGVkLnRzeCJ9