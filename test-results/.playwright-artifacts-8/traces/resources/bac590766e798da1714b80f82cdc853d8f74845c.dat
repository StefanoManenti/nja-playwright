import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/ContactAlert.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/ContactAlert.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$();
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import { useAtomValue } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/jotai.js?v=0189a8d1";
import { contactAlertAtom } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/index.ts";
import { Alert } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/index.ts";
import { MarkdownParser } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/util/src/index.ts";
export function ContactAlert() {
  _s();
  const markdown = useAtomValue(contactAlertAtom);
  if (!markdown) return null;
  return /* @__PURE__ */ jsxDEV(Alert, { type: "info", children: /* @__PURE__ */ jsxDEV(MarkdownParser, { content: markdown }, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/ContactAlert.tsx",
    lineNumber: 12,
    columnNumber: 7
  }, this) }, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/ContactAlert.tsx",
    lineNumber: 11,
    columnNumber: 5
  }, this);
}
_s(ContactAlert, "CcLnFn9XsOyCEzDa7Jwb4mN800M=", false, function() {
  return [useAtomValue];
});
_c = ContactAlert;
var _c;
$RefreshReg$(_c, "ContactAlert");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/customer/ContactAlert.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBV007Ozs7O3FDQVhOO0FBQUEsT0FBU0EsaURBQTJCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ3BDLFNBQVNDLHdCQUF3QjtBQUNqQyxTQUFTQyxhQUFhO0FBQ3RCLFNBQVNDLHNCQUFzQjtBQUV4QixnQkFBU0MsZUFBZTtBQUFBQyxLQUFBO0FBQzdCLFFBQU1DLFdBQVdOLGFBQWFDLGdCQUFnQjtBQUM5QyxNQUFJLENBQUNLLFNBQVUsUUFBTztBQUV0QixTQUNFLHVCQUFDLFNBQU0sTUFBSyxRQUNWLGlDQUFDLGtCQUFlLFNBQVNBLFlBQXpCO0FBQUE7QUFBQTtBQUFBO0FBQUEsU0FBa0MsS0FEcEM7QUFBQTtBQUFBO0FBQUE7QUFBQSxTQUVBO0FBRUo7QUFBQ0QsR0FUZUQsY0FBWTtBQUFBLFVBQ1RKLFlBQVk7QUFBQTtBQUFBTyxLQURmSDtBQUFZLElBQUFHO0FBQUFDLGFBQUFELElBQUEiLCJuYW1lcyI6WyJ1c2VBdG9tVmFsdWUiLCJjb250YWN0QWxlcnRBdG9tIiwiQWxlcnQiLCJNYXJrZG93blBhcnNlciIsIkNvbnRhY3RBbGVydCIsIl9zIiwibWFya2Rvd24iLCJfYyIsIiRSZWZyZXNoUmVnJCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJDb250YWN0QWxlcnQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUF0b21WYWx1ZSB9IGZyb20gJ2pvdGFpJztcclxuaW1wb3J0IHsgY29udGFjdEFsZXJ0QXRvbSB9IGZyb20gJ0BuYWotd28vZGF0YS1hY2Nlc3MnO1xyXG5pbXBvcnQgeyBBbGVydCB9IGZyb20gJ0BuYWotd28vdWktYXRvbXMnO1xyXG5pbXBvcnQgeyBNYXJrZG93blBhcnNlciB9IGZyb20gJ0BuYWotd28vdXRpbCc7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gQ29udGFjdEFsZXJ0KCkge1xyXG4gIGNvbnN0IG1hcmtkb3duID0gdXNlQXRvbVZhbHVlKGNvbnRhY3RBbGVydEF0b20pO1xyXG4gIGlmICghbWFya2Rvd24pIHJldHVybiBudWxsO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPEFsZXJ0IHR5cGU9XCJpbmZvXCI+XHJcbiAgICAgIDxNYXJrZG93blBhcnNlciBjb250ZW50PXttYXJrZG93bn0gLz5cclxuICAgIDwvQWxlcnQ+XHJcbiAgKTtcclxufVxyXG4iXSwiZmlsZSI6IkM6L1VzZXJzL2FpbnRyb25hL0Rlc2t0b3AvQXBwL3JlYWN0L25hai9saWJzL3N0ZXBzL3NyYy9saWIvY3VzdG9tZXIvQ29udGFjdEFsZXJ0LnRzeCJ9