import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/app/routes.tsx");import.meta.env = {"BASE_URL": "/", "DEV": true, "MODE": "development", "PROD": false, "SSR": false};import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/apps/naj/src/app/routes.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$();
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import { useAtomValue } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/jotai.js?v=0189a8d1";
import { atomWithLocation } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/jotai-location.js?v=0189a8d1";
import __vite__cjsImport5_react from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react.js?v=0189a8d1"; const React = __vite__cjsImport5_react.__esModule ? __vite__cjsImport5_react.default : __vite__cjsImport5_react;
import Nav from "/src/app/Nav/index.ts";
const EngineApp = React.lazy(_c = () => import("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/index.ts?t=1754053241441"));
_c2 = EngineApp;
const locationAtom = globalThis.jotaiAtomCache.get(
  "C:\\Users\\aintrona\\Desktop\\App\\react\\naj\\apps\\naj\\src\\app\\routes.tsx/locationAtom",
  atomWithLocation()
);
locationAtom.debugLabel = "locationAtom";
export default function Routes() {
  _s();
  const loc = useAtomValue(locationAtom);
  if (import.meta.env.DEV && loc.pathname === "/") {
    return /* @__PURE__ */ jsxDEV(Nav, {}, void 0, false, {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/apps/naj/src/app/routes.tsx",
      lineNumber: 14,
      columnNumber: 12
    }, this);
  }
  return /* @__PURE__ */ jsxDEV(EngineApp, {}, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/apps/naj/src/app/routes.tsx",
    lineNumber: 17,
    columnNumber: 10
  }, this);
}
_s(Routes, "w8Eysx5bF/MsdYkFKyC0R+izErA=", false, function() {
  return [useAtomValue];
});
_c3 = Routes;
var _c, _c2, _c3;
$RefreshReg$(_c, "EngineApp$React.lazy");
$RefreshReg$(_c2, "EngineApp");
$RefreshReg$(_c3, "Routes");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/apps/naj/src/app/routes.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBYVc7Ozs7O3FDQWJYO0FBQUEsT0FBU0EsaURBQTJCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ3BDLFNBQVNDLHdCQUF3QjtBQUNqQyxPQUFPQyxXQUFXO0FBQ2xCLE9BQU9DLFNBQVM7QUFFaEIsTUFBTUMsWUFBWUYsTUFBTUcsS0FBSUMsS0FBQ0EsTUFBTSxPQUFPLGVBQWUsQ0FBQztBQUFFQyxNQUF0REg7QUFBUyxNQUFBSSxlQUFBQyxXQUFBQyxlQUFBQztBQUFBQSxFQUFBO0FBQUEsRUFFTVYsaUJBQWlCO0FBQUM7QUFBQU8sYUFBQUksYUFBQTtBQUV2Qyx3QkFBd0JDLFNBQVM7QUFBQUMsS0FBQTtBQUMvQixRQUFNQyxNQUFNZixhQUFhUSxZQUFZO0FBRXJDLE1BQUlRLFlBQVlDLElBQUlDLE9BQU9ILElBQUlJLGFBQWEsS0FBSztBQUMvQyxXQUFPLHVCQUFDLFNBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQSxXQUFJO0FBQUEsRUFDYjtBQUVBLFNBQU8sdUJBQUMsZUFBRDtBQUFBO0FBQUE7QUFBQTtBQUFBLFNBQVU7QUFDbkI7QUFBQ0wsR0FSdUJELFFBQU07QUFBQSxVQUNoQmIsWUFBWTtBQUFBO0FBQUFvQixNQURGUDtBQUFNLElBQUFQLElBQUFDLEtBQUFhO0FBQUFDLGFBQUFmLElBQUE7QUFBQWUsYUFBQWQsS0FBQTtBQUFBYyxhQUFBRCxLQUFBIiwibmFtZXMiOlsidXNlQXRvbVZhbHVlIiwiYXRvbVdpdGhMb2NhdGlvbiIsIlJlYWN0IiwiTmF2IiwiRW5naW5lQXBwIiwibGF6eSIsIl9jIiwiX2MyIiwibG9jYXRpb25BdG9tIiwiZ2xvYmFsVGhpcyIsImpvdGFpQXRvbUNhY2hlIiwiZ2V0IiwiZGVidWdMYWJlbCIsIlJvdXRlcyIsIl9zIiwibG9jIiwiaW1wb3J0IiwiZW52IiwiREVWIiwicGF0aG5hbWUiLCJfYzMiLCIkUmVmcmVzaFJlZyQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsicm91dGVzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VBdG9tVmFsdWUgfSBmcm9tICdqb3RhaSc7XHJcbmltcG9ydCB7IGF0b21XaXRoTG9jYXRpb24gfSBmcm9tICdqb3RhaS1sb2NhdGlvbic7XHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBOYXYgZnJvbSAnLi9OYXYnO1xyXG5cclxuY29uc3QgRW5naW5lQXBwID0gUmVhY3QubGF6eSgoKSA9PiBpbXBvcnQoJ0BuYWotd28vc3RlcHMnKSk7XHJcblxyXG5jb25zdCBsb2NhdGlvbkF0b20gPSBhdG9tV2l0aExvY2F0aW9uKCk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSb3V0ZXMoKSB7XHJcbiAgY29uc3QgbG9jID0gdXNlQXRvbVZhbHVlKGxvY2F0aW9uQXRvbSk7XHJcblxyXG4gIGlmIChpbXBvcnQubWV0YS5lbnYuREVWICYmIGxvYy5wYXRobmFtZSA9PT0gJy8nKSB7XHJcbiAgICByZXR1cm4gPE5hdiAvPjtcclxuICB9XHJcblxyXG4gIHJldHVybiA8RW5naW5lQXBwIC8+O1xyXG59XHJcbiJdLCJmaWxlIjoiQzovVXNlcnMvYWludHJvbmEvRGVza3RvcC9BcHAvcmVhY3QvbmFqL2FwcHMvbmFqL3NyYy9hcHAvcm91dGVzLnRzeCJ9