import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Checkbox.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Checkbox.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import { CheckboxIcon } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/ui-icons/src/index.ts";
import clsx from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/clsx.js?v=0189a8d1";
const icon = /* @__PURE__ */ jsxDEV(CheckboxIcon, {}, void 0, false, {
  fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Checkbox.tsx",
  lineNumber: 10,
  columnNumber: 14
}, this);
export function Checkbox({ className, checked }) {
  return /* @__PURE__ */ jsxDEV("span", { className: clsx("pln-control-label", className), children: [
    /* @__PURE__ */ jsxDEV(
      "input",
      {
        className: clsx("pln-control-input"),
        type: "checkbox",
        checked
      },
      void 0,
      false,
      {
        fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Checkbox.tsx",
        lineNumber: 15,
        columnNumber: 7
      },
      this
    ),
    icon
  ] }, void 0, true, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Checkbox.tsx",
    lineNumber: 14,
    columnNumber: 5
  }, this);
}
_c = Checkbox;
var _c;
$RefreshReg$(_c, "Checkbox");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/ui-atoms/src/lib/Checkbox.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBU2E7Ozs7O2dCQVRiLE9BQVNBLGNBQVk7QUFBQSxNQUFRLGtEQUFrQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDL0MsT0FBT0MsVUFBVTtBQVFqQixNQUFNQyxPQUFPLHVCQUFDLGtCQUFEO0FBQUE7QUFBQTtBQUFBO0FBQUEsT0FBYTtBQUVuQixnQkFBU0MsU0FBUyxFQUFFQyxXQUFXQyxRQUFlLEdBQUc7QUFDdEQsU0FDRSx1QkFBQyxVQUFLLFdBQVdKLEtBQUsscUJBQXFCRyxTQUFTLEdBQ2xEO0FBQUE7QUFBQSxNQUFDO0FBQUE7QUFBQSxRQUNDLFdBQVdILEtBQUssbUJBQW1CO0FBQUEsUUFDbkMsTUFBSztBQUFBLFFBR0w7QUFBQTtBQUFBLE1BTEY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLElBS21CO0FBQUEsSUFFbEJDO0FBQUFBLE9BUkg7QUFBQTtBQUFBO0FBQUE7QUFBQSxTQVNBO0FBRUo7QUFBQ0ksS0FiZUg7QUFBUSxJQUFBRztBQUFBQyxhQUFBRCxJQUFBIiwibmFtZXMiOlsiQ2hlY2tib3hJY29uIiwiY2xzeCIsImljb24iLCJDaGVja2JveCIsImNsYXNzTmFtZSIsImNoZWNrZWQiLCJfYyIsIiRSZWZyZXNoUmVnJCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJDaGVja2JveC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hlY2tib3hJY29uIH0gZnJvbSAnQG5hai13by91aS1pY29ucyc7XHJcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5cclxudHlwZSBQcm9wcyA9IHtcclxuICBjaGVja2VkPzogYm9vbGVhbjtcclxuICBjbGFzc05hbWU/OiBzdHJpbmc7XHJcbn07XHJcblxyXG5jb25zdCBpY29uID0gPENoZWNrYm94SWNvbiAvPjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBDaGVja2JveCh7IGNsYXNzTmFtZSwgY2hlY2tlZCB9OiBQcm9wcykge1xyXG4gIHJldHVybiAoXHJcbiAgICA8c3BhbiBjbGFzc05hbWU9e2Nsc3goJ3Bsbi1jb250cm9sLWxhYmVsJywgY2xhc3NOYW1lKX0+XHJcbiAgICAgIDxpbnB1dFxyXG4gICAgICAgIGNsYXNzTmFtZT17Y2xzeCgncGxuLWNvbnRyb2wtaW5wdXQnKX1cclxuICAgICAgICB0eXBlPVwiY2hlY2tib3hcIlxyXG4gICAgICAgIC8vIGRhdGEtaW5kZXRlcm1pbmF0ZT1cImZhbHNlXCJcclxuICAgICAgICAvLyBhcmlhLWxhYmVsPVwiQ2hlY2tib3ggZGVtb1wiXHJcbiAgICAgICAgY2hlY2tlZD17Y2hlY2tlZH1cclxuICAgICAgLz5cclxuICAgICAge2ljb259XHJcbiAgICA8L3NwYW4+XHJcbiAgKTtcclxufVxyXG4iXSwiZmlsZSI6IkM6L1VzZXJzL2FpbnRyb25hL0Rlc2t0b3AvQXBwL3JlYWN0L25hai9saWJzL3VpLWF0b21zL3NyYy9saWIvQ2hlY2tib3gudHN4In0=