globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import {
  singleProductAtom,
  troubleshootingConcludedAtom
} from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/index.ts";
import { Step, StepPriority } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/engine/src/index.ts";
import { StepDependencies } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/StepDependencies.ts";
import StepErrorBoundary from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/StepErrorBoundary.tsx";
class Disambiguation extends Step {
  constructor() {
    super(...arguments);
    this.priority = new StepPriority(3);
    this.WrapperComponent = StepErrorBoundary;
    this.lazy = () => import("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/troubleshooting/DisambiguationStep.tsx");
  }
  toString() {
    return "disambiguation";
  }
  depends() {
    return [
      StepDependencies.TS_POWER,
      StepDependencies.TS_GAS,
      StepDependencies.OPERATIVE_MODE_POWER,
      StepDependencies.OPERATIVE_MODE_GAS,
      StepDependencies.BROADBAND_ADDRESS
    ];
  }
  provides() {
    return [
      StepDependencies.POWER,
      StepDependencies.GAS,
      StepDependencies.OPERATIVE_MODE
    ];
  }
  isAvailable(get) {
    if (get(troubleshootingConcludedAtom)) {
      return false;
    }
    return !get(singleProductAtom);
  }
}
export const disambiguation = new Disambiguation();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQUEsRUFDRUE7QUFBQUEsRUFDQUM7QUFBQUEsT0FDSztBQUNQLFNBQVNDLE1BQU1DLG9CQUFvQjtBQUVuQyxTQUFTQyx3QkFBd0I7QUFDakMsT0FBT0MsdUJBQXVCO0FBRTlCLE1BQU1DLHVCQUF1QkosS0FBSztBQUFBLEVBQWxDO0FBQUE7QUFDRUssb0JBQVcsSUFBSUosYUFBYSxDQUFDO0FBQzdCSyw0QkFBbUJIO0FBRW5CSSxnQkFBT0EsTUFBTSxPQUFPLHNCQUFzQjtBQUFBO0FBQUEsRUFFMUNDLFdBQVc7QUFDVCxXQUFPO0FBQUEsRUFDVDtBQUFBLEVBRUFDLFVBQVU7QUFDUixXQUFPO0FBQUEsTUFDTFAsaUJBQWlCUTtBQUFBQSxNQUNqQlIsaUJBQWlCUztBQUFBQSxNQUNqQlQsaUJBQWlCVTtBQUFBQSxNQUNqQlYsaUJBQWlCVztBQUFBQSxNQUNqQlgsaUJBQWlCWTtBQUFBQSxJQUFpQjtBQUFBLEVBRXRDO0FBQUEsRUFFQUMsV0FBVztBQUNULFdBQU87QUFBQSxNQUNMYixpQkFBaUJjO0FBQUFBLE1BQ2pCZCxpQkFBaUJlO0FBQUFBLE1BQ2pCZixpQkFBaUJnQjtBQUFBQSxJQUFjO0FBQUEsRUFFbkM7QUFBQSxFQUVVQyxZQUFZQyxLQUFhO0FBQ2pDLFFBQUlBLElBQUlyQiw0QkFBNEIsR0FBRztBQUNyQyxhQUFPO0FBQUEsSUFDVDtBQUVBLFdBQU8sQ0FBQ3FCLElBQUl0QixpQkFBaUI7QUFBQSxFQUMvQjtBQUNGO0FBRU8sYUFBTXVCLGlCQUFpQixJQUFJakIsZUFBZSIsIm5hbWVzIjpbInNpbmdsZVByb2R1Y3RBdG9tIiwidHJvdWJsZXNob290aW5nQ29uY2x1ZGVkQXRvbSIsIlN0ZXAiLCJTdGVwUHJpb3JpdHkiLCJTdGVwRGVwZW5kZW5jaWVzIiwiU3RlcEVycm9yQm91bmRhcnkiLCJEaXNhbWJpZ3VhdGlvbiIsInByaW9yaXR5IiwiV3JhcHBlckNvbXBvbmVudCIsImxhenkiLCJ0b1N0cmluZyIsImRlcGVuZHMiLCJUU19QT1dFUiIsIlRTX0dBUyIsIk9QRVJBVElWRV9NT0RFX1BPV0VSIiwiT1BFUkFUSVZFX01PREVfR0FTIiwiQlJPQURCQU5EX0FERFJFU1MiLCJwcm92aWRlcyIsIlBPV0VSIiwiR0FTIiwiT1BFUkFUSVZFX01PREUiLCJpc0F2YWlsYWJsZSIsImdldCIsImRpc2FtYmlndWF0aW9uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbImRpc2FtYmlndWF0aW9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIHNpbmdsZVByb2R1Y3RBdG9tLFxyXG4gIHRyb3VibGVzaG9vdGluZ0NvbmNsdWRlZEF0b20sXHJcbn0gZnJvbSAnQG5hai13by9kYXRhLWFjY2Vzcyc7XHJcbmltcG9ydCB7IFN0ZXAsIFN0ZXBQcmlvcml0eSB9IGZyb20gJ0BuYWotd28vZW5naW5lJztcclxuaW1wb3J0IHsgR2V0dGVyIH0gZnJvbSAnam90YWkvdmFuaWxsYS90eXBlVXRpbHMnO1xyXG5pbXBvcnQgeyBTdGVwRGVwZW5kZW5jaWVzIH0gZnJvbSAnLi4vU3RlcERlcGVuZGVuY2llcyc7XHJcbmltcG9ydCBTdGVwRXJyb3JCb3VuZGFyeSBmcm9tICcuLi9TdGVwRXJyb3JCb3VuZGFyeSc7XHJcblxyXG5jbGFzcyBEaXNhbWJpZ3VhdGlvbiBleHRlbmRzIFN0ZXAge1xyXG4gIHByaW9yaXR5ID0gbmV3IFN0ZXBQcmlvcml0eSgzKTtcclxuICBXcmFwcGVyQ29tcG9uZW50ID0gU3RlcEVycm9yQm91bmRhcnk7XHJcblxyXG4gIGxhenkgPSAoKSA9PiBpbXBvcnQoJy4vRGlzYW1iaWd1YXRpb25TdGVwJyk7XHJcblxyXG4gIHRvU3RyaW5nKCkge1xyXG4gICAgcmV0dXJuICdkaXNhbWJpZ3VhdGlvbic7XHJcbiAgfVxyXG5cclxuICBkZXBlbmRzKCkge1xyXG4gICAgcmV0dXJuIFtcclxuICAgICAgU3RlcERlcGVuZGVuY2llcy5UU19QT1dFUixcclxuICAgICAgU3RlcERlcGVuZGVuY2llcy5UU19HQVMsXHJcbiAgICAgIFN0ZXBEZXBlbmRlbmNpZXMuT1BFUkFUSVZFX01PREVfUE9XRVIsXHJcbiAgICAgIFN0ZXBEZXBlbmRlbmNpZXMuT1BFUkFUSVZFX01PREVfR0FTLFxyXG4gICAgICBTdGVwRGVwZW5kZW5jaWVzLkJST0FEQkFORF9BRERSRVNTLFxyXG4gICAgXTtcclxuICB9XHJcblxyXG4gIHByb3ZpZGVzKCkge1xyXG4gICAgcmV0dXJuIFtcclxuICAgICAgU3RlcERlcGVuZGVuY2llcy5QT1dFUixcclxuICAgICAgU3RlcERlcGVuZGVuY2llcy5HQVMsXHJcbiAgICAgIFN0ZXBEZXBlbmRlbmNpZXMuT1BFUkFUSVZFX01PREUsXHJcbiAgICBdO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGlzQXZhaWxhYmxlKGdldDogR2V0dGVyKSB7XHJcbiAgICBpZiAoZ2V0KHRyb3VibGVzaG9vdGluZ0NvbmNsdWRlZEF0b20pKSB7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gIWdldChzaW5nbGVQcm9kdWN0QXRvbSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZGlzYW1iaWd1YXRpb24gPSBuZXcgRGlzYW1iaWd1YXRpb24oKTtcclxuIl0sImZpbGUiOiJDOi9Vc2Vycy9haW50cm9uYS9EZXNrdG9wL0FwcC9yZWFjdC9uYWovbGlicy9zdGVwcy9zcmMvbGliL3Ryb3VibGVzaG9vdGluZy9kaXNhbWJpZ3VhdGlvbi50c3gifQ==