import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/utils/query.tsx");import __vite__cjsImport0_react_jsxDevRuntime from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/react_jsx-dev-runtime.js?v=0189a8d1"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.__vite_plugin_react_preamble_installed__) {
    throw new Error("@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201");
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = (type, id) => {
    RefreshRuntime.register(type, "C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/utils/query.tsx " + id);
  };
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$();
globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || { cache: /* @__PURE__ */ new Map(), get(name, inst) {
  if (this.cache.has(name)) {
    return this.cache.get(name);
  }
  this.cache.set(name, inst);
  return inst;
} };
import { QueryClient, QueryClientProvider } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/@tanstack_react-query.js?v=0189a8d1";
import { Provider } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/jotai.js?v=0189a8d1";
import { DevTools } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/jotai-devtools.js?v=0189a8d1";
import { queryClientAtom } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/jotai-tanstack-query.js?v=0189a8d1";
import { useHydrateAtoms } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/.vite/apps/naj/deps/jotai_react_utils.js?v=0189a8d1";
import { store as globalStore } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/utils/store.ts";
const enableJotaiDevTools = false;
if (enableJotaiDevTools) {
  import("/@fs/C:/Users/aintrona/Desktop/App/react/naj/node_modules/jotai-devtools/dist/index.css");
}
const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      staleTime: Infinity,
      refetchOnWindowFocus: false,
      // default: true
      retry: false,
      retryDelay: 2e3
    }
  }
});
function HydrateAtoms({ children }) {
  _s();
  useHydrateAtoms([[queryClientAtom, queryClient]]);
  return children;
}
_s(HydrateAtoms, "tsixlf6aUzU8lco+dvxNjYl6up8=", false, function() {
  return [useHydrateAtoms];
});
_c = HydrateAtoms;
export function QueryProvider(props) {
  const store = props.store || globalStore;
  return /* @__PURE__ */ jsxDEV(QueryClientProvider, { client: queryClient, children: /* @__PURE__ */ jsxDEV(Provider, { store, children: [
    enableJotaiDevTools && /* @__PURE__ */ jsxDEV(DevTools, { store }, void 0, false, {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/utils/query.tsx",
      lineNumber: 37,
      columnNumber: 33
    }, this),
    /* @__PURE__ */ jsxDEV(HydrateAtoms, { children: props.children }, void 0, false, {
      fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/utils/query.tsx",
      lineNumber: 43,
      columnNumber: 9
    }, this)
  ] }, void 0, true, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/utils/query.tsx",
    lineNumber: 36,
    columnNumber: 7
  }, this) }, void 0, false, {
    fileName: "C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/utils/query.tsx",
    lineNumber: 35,
    columnNumber: 5
  }, this);
}
_c2 = QueryProvider;
var _c, _c2;
$RefreshReg$(_c, "HydrateAtoms");
$RefreshReg$(_c2, "QueryProvider");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/lib/utils/query.tsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBb0NnQzs7Ozs7cUNBcENoQztBQUFBLE9BQVNBLGlEQUF3QztBQUFBLGNBQXVCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUN4RSxTQUFTQyxnQkFBZ0I7QUFDekIsU0FBU0MsZ0JBQWdCO0FBQ3pCLFNBQVNDLHVCQUF1QjtBQUNoQyxTQUFTQyx1QkFBdUI7QUFFaEMsU0FBU0MsU0FBU0MsbUJBQW1CO0FBRXJDLE1BQU1DLHNCQUFzQjtBQUU1QixJQUFJQSxxQkFBcUI7QUFDdkIsU0FBTywyQkFBMkI7QUFDcEM7QUFFQSxNQUFNQyxjQUFjLElBQUlSLFlBQVk7QUFBQSxFQUNsQ1MsZ0JBQWdCO0FBQUEsSUFDZEMsU0FBUztBQUFBLE1BQ1BDLFdBQVdDO0FBQUFBLE1BQ1hDLHNCQUFzQjtBQUFBO0FBQUEsTUFDdEJDLE9BQU87QUFBQSxNQUNQQyxZQUFZO0FBQUEsSUFDZDtBQUFBLEVBQ0Y7QUFDRixDQUFDO0FBRUQsU0FBU0MsYUFBYSxFQUFFQyxTQUFrQyxHQUFHO0FBQUFDLEtBQUE7QUFDM0RkLGtCQUFnQixDQUFDLENBQUNELGlCQUFpQkssV0FBVyxDQUFDLENBQUM7QUFDaEQsU0FBT1M7QUFDVDtBQUFDQyxHQUhRRixjQUFZO0FBQUEsVUFDbkJaLGVBQWU7QUFBQTtBQUFBZSxLQURSSDtBQUtGLGdCQUFTSSxjQUFjQyxPQUE2QztBQUN6RSxRQUFNaEIsUUFBUWdCLE1BQU1oQixTQUFTQztBQUU3QixTQUNFLHVCQUFDLHVCQUFvQixRQUFRRSxhQUMzQixpQ0FBQyxZQUFTLE9BQ1BEO0FBQUFBLDJCQUF1Qix1QkFBQyxZQUFTLFNBQVY7QUFBQTtBQUFBO0FBQUE7QUFBQSxXQUF1QjtBQUFBLElBTS9DLHVCQUFDLGdCQUFjYyxnQkFBTUosWUFBckI7QUFBQTtBQUFBO0FBQUE7QUFBQSxXQUE4QjtBQUFBLE9BUGhDO0FBQUE7QUFBQTtBQUFBO0FBQUEsU0FRQSxLQVRGO0FBQUE7QUFBQTtBQUFBO0FBQUEsU0FVQTtBQUVKO0FBQUNLLE1BaEJlRjtBQUFhLElBQUFELElBQUFHO0FBQUFDLGFBQUFKLElBQUE7QUFBQUksYUFBQUQsS0FBQSIsIm5hbWVzIjpbIlF1ZXJ5Q2xpZW50IiwiUHJvdmlkZXIiLCJEZXZUb29scyIsInF1ZXJ5Q2xpZW50QXRvbSIsInVzZUh5ZHJhdGVBdG9tcyIsInN0b3JlIiwiZ2xvYmFsU3RvcmUiLCJlbmFibGVKb3RhaURldlRvb2xzIiwicXVlcnlDbGllbnQiLCJkZWZhdWx0T3B0aW9ucyIsInF1ZXJpZXMiLCJzdGFsZVRpbWUiLCJJbmZpbml0eSIsInJlZmV0Y2hPbldpbmRvd0ZvY3VzIiwicmV0cnkiLCJyZXRyeURlbGF5IiwiSHlkcmF0ZUF0b21zIiwiY2hpbGRyZW4iLCJfcyIsIl9jIiwiUXVlcnlQcm92aWRlciIsInByb3BzIiwiX2MyIiwiJFJlZnJlc2hSZWckIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbInF1ZXJ5LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBRdWVyeUNsaWVudCwgUXVlcnlDbGllbnRQcm92aWRlciB9IGZyb20gJ0B0YW5zdGFjay9yZWFjdC1xdWVyeSc7XHJcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSAnam90YWknO1xyXG5pbXBvcnQgeyBEZXZUb29scyB9IGZyb20gJ2pvdGFpLWRldnRvb2xzJztcclxuaW1wb3J0IHsgcXVlcnlDbGllbnRBdG9tIH0gZnJvbSAnam90YWktdGFuc3RhY2stcXVlcnknO1xyXG5pbXBvcnQgeyB1c2VIeWRyYXRlQXRvbXMgfSBmcm9tICdqb3RhaS9yZWFjdC91dGlscyc7XHJcbmltcG9ydCBSZWFjdCwgeyBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHN0b3JlIGFzIGdsb2JhbFN0b3JlIH0gZnJvbSAnLi9zdG9yZSc7XHJcblxyXG5jb25zdCBlbmFibGVKb3RhaURldlRvb2xzID0gZmFsc2U7IC8vIGltcG9ydC5tZXRhLmVudi5ERVY7XHJcblxyXG5pZiAoZW5hYmxlSm90YWlEZXZUb29scykge1xyXG4gIGltcG9ydCgnam90YWktZGV2dG9vbHMvc3R5bGVzLmNzcycpO1xyXG59XHJcblxyXG5jb25zdCBxdWVyeUNsaWVudCA9IG5ldyBRdWVyeUNsaWVudCh7XHJcbiAgZGVmYXVsdE9wdGlvbnM6IHtcclxuICAgIHF1ZXJpZXM6IHtcclxuICAgICAgc3RhbGVUaW1lOiBJbmZpbml0eSxcclxuICAgICAgcmVmZXRjaE9uV2luZG93Rm9jdXM6IGZhbHNlLCAvLyBkZWZhdWx0OiB0cnVlXHJcbiAgICAgIHJldHJ5OiBmYWxzZSxcclxuICAgICAgcmV0cnlEZWxheTogMjAwMCxcclxuICAgIH0sXHJcbiAgfSxcclxufSk7XHJcblxyXG5mdW5jdGlvbiBIeWRyYXRlQXRvbXMoeyBjaGlsZHJlbiB9OiB7IGNoaWxkcmVuOiBSZWFjdE5vZGUgfSkge1xyXG4gIHVzZUh5ZHJhdGVBdG9tcyhbW3F1ZXJ5Q2xpZW50QXRvbSwgcXVlcnlDbGllbnRdXSk7XHJcbiAgcmV0dXJuIGNoaWxkcmVuO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gUXVlcnlQcm92aWRlcihwcm9wczogeyBjaGlsZHJlbjogUmVhY3ROb2RlOyBzdG9yZT86IGFueSB9KSB7XHJcbiAgY29uc3Qgc3RvcmUgPSBwcm9wcy5zdG9yZSB8fCBnbG9iYWxTdG9yZTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxRdWVyeUNsaWVudFByb3ZpZGVyIGNsaWVudD17cXVlcnlDbGllbnR9PlxyXG4gICAgICA8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT5cclxuICAgICAgICB7ZW5hYmxlSm90YWlEZXZUb29scyAmJiA8RGV2VG9vbHMgc3RvcmU9e3N0b3JlfSAvPn1cclxuICAgICAgICB7LypcclxuICAgVGhpcyBQcm92aWRlciBpbml0aWFsaXNhdGlvbiBzdGVwIGlzIG5lZWRlZCBzbyB0aGF0IHdlIHJlZmVyZW5jZSB0aGUgc2FtZVxyXG4gICBxdWVyeUNsaWVudCBpbiBib3RoIGF0b21XaXRoUXVlcnkgYW5kIG90aGVyIHBhcnRzIG9mIHRoZSBhcHAuIFdpdGhvdXQgdGhpcyxcclxuICAgb3VyIHVzZVF1ZXJ5Q2xpZW50KCkgaG9vayB3aWxsIHJldHVybiBhIGRpZmZlcmVudCBRdWVyeUNsaWVudCBvYmplY3RcclxuICAgICovfVxyXG4gICAgICAgIDxIeWRyYXRlQXRvbXM+e3Byb3BzLmNoaWxkcmVufTwvSHlkcmF0ZUF0b21zPlxyXG4gICAgICA8L1Byb3ZpZGVyPlxyXG4gICAgPC9RdWVyeUNsaWVudFByb3ZpZGVyPlxyXG4gICk7XHJcbn1cclxuIl0sImZpbGUiOiJDOi9Vc2Vycy9haW50cm9uYS9EZXNrdG9wL0FwcC9yZWFjdC9uYWovbGlicy9kYXRhLWFjY2Vzcy9zcmMvbGliL3V0aWxzL3F1ZXJ5LnRzeCJ9