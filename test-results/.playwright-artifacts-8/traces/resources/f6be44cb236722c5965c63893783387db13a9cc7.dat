globalThis.jotaiAtomCache = globalThis.jotaiAtomCache || {
  cache: /* @__PURE__ */ new Map(),
  get(name, inst) {
    if (this.cache.has(name)) {
      return this.cache.get(name);
    }
    this.cache.set(name, inst);
    return inst;
  }
};
import { errors } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/data-access/src/index.ts";
import { BroadbandCoveredSoonError, BroadbandMigrationCodeAlreadyRegisteredError, BroadbandMigrationCodeNotValidError, BroadbandNotCoveredError } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/services-errors/broadband.tsx";
import { CustomerWithNoAccounts, CustomerWithNoAccountsForChangeOffer } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/services-errors/change-offer.tsx";
import { CouponAlreadyActivatedError, CouponNotValidError, CouponOfferNotCompatibleError, CouponServiceNotAvailableError, CouponWrongOperativeModeError } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/services-errors/coupon.tsx";
import { AgeOutOfRangeError, EmailAlreadyUsedError, EmailNotValidError, TaxIdNotCoherentError, TaxIdNotValidError, TaxIdOutOfRetriesError } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/services-errors/customer.tsx";
import { EgonError } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/services-errors/egon.tsx";
import { CreditCheckError, Ddl009_010Error } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/services-errors/generic.tsx";
import { CheckIbanNonRiuscitoError, IbanNotValidError } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/services-errors/iban.tsx";
import { CheckModelloVolturaRedSignalError, CheckModelloVolturaYellowSignalError } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/services-errors/model-transfer.tsx";
import { OtpNotValidError } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/services-errors/otp.tsx";
import { CannotActivateError, SupplyAlreadyActiveError, SwitchInCheckAssetError } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/services-errors/pod.tsx";
import { CheckDoubleNetPodError } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/services-errors/podDueReti.tsx";
import { VulnerableDocumentoDatiAnagraficiError, VulnerableDocumentoNonCompletoError, VulnerableDocumentoNonLeggibileError, VulnerableDocumentoNonRiconosciutoError, VulnerableDocumentoScadutoError, VulnerableDocumentoTecnicoError } from "/@fs/C:/Users/aintrona/Desktop/App/react/naj/libs/steps/src/lib/services-errors/vulnerability.tsx";
export const renderError = (error) => {
  if (error instanceof errors.BroadbandNotCoveredError) {
    return BroadbandNotCoveredError;
  }
  if (error instanceof errors.BroadbandCoveredSoonError) {
    return BroadbandCoveredSoonError;
  }
  if (error instanceof errors.BroadbandMigrationCodeNotValidError) {
    return BroadbandMigrationCodeNotValidError;
  }
  if (error instanceof errors.BroadbandMigrationCodeAlreadyRegisteredError) {
    return BroadbandMigrationCodeAlreadyRegisteredError;
  }
  if (error instanceof errors.CustomerWithNoAccounts) {
    return CustomerWithNoAccounts;
  }
  if (error instanceof errors.CustomerWithNoAccountsForChangeOffer) {
    return CustomerWithNoAccountsForChangeOffer;
  }
  if (error instanceof errors.CouponServiceNotAvailableError) {
    return CouponServiceNotAvailableError;
  }
  if (error instanceof errors.CouponNotValidError) {
    return CouponNotValidError;
  }
  if (error instanceof errors.CouponAlreadyActivatedError) {
    return CouponAlreadyActivatedError;
  }
  if (error instanceof errors.CouponWrongOperativeModeError) {
    return CouponWrongOperativeModeError;
  }
  if (error instanceof errors.CouponOfferNotCompatibleError) {
    return CouponOfferNotCompatibleError;
  }
  if (error instanceof errors.AgeOutOfRangeError) {
    return AgeOutOfRangeError;
  }
  if (error instanceof errors.TaxIdNotCoherentError) {
    return TaxIdNotCoherentError;
  }
  if (error instanceof errors.TaxIdNotValidError) {
    return TaxIdNotValidError;
  }
  if (error instanceof errors.TaxIdOutOfRetriesError) {
    return TaxIdOutOfRetriesError;
  }
  if (error instanceof errors.EmailNotValidError) {
    return EmailNotValidError;
  }
  if (error instanceof errors.EmailAlreadyUsedError) {
    return EmailAlreadyUsedError;
  }
  if (error instanceof errors.EgonError) {
    return EgonError(error.message);
  }
  if (error instanceof errors.Ddl009_010Error) {
    return Ddl009_010Error;
  }
  if (error instanceof errors.CreditCheckError) {
    return CreditCheckError;
  }
  if (error instanceof errors.IbanNotValidError) {
    return IbanNotValidError;
  }
  if (error instanceof errors.CheckIbanNonRiuscitoError) {
    return CheckIbanNonRiuscitoError(error.message);
  }
  if (error instanceof errors.CheckModelloVolturaRedSignalError) {
    return CheckModelloVolturaRedSignalError;
  }
  if (error instanceof errors.CheckModelloVolturaYellowSignalError) {
    return CheckModelloVolturaYellowSignalError(error.props);
  }
  if (error instanceof errors.OtpNotValidError) {
    return OtpNotValidError;
  }
  if (error instanceof errors.CannotActivateError) {
    return CannotActivateError(error.type);
  }
  if (error instanceof errors.SupplyAlreadyActiveError) {
    return SupplyAlreadyActiveError(error.type);
  }
  if (error instanceof errors.SwitchInCheckAssetError) {
    return SwitchInCheckAssetError(error.type);
  }
  if (error instanceof errors.CheckDoubleNetPodError) {
    return CheckDoubleNetPodError;
  }
  if (error instanceof errors.VulnerableDocumentoScadutoError) {
    return VulnerableDocumentoScadutoError;
  }
  if (error instanceof errors.VulnerableDocumentoNonLeggibileError) {
    return VulnerableDocumentoNonLeggibileError;
  }
  if (error instanceof errors.VulnerableDocumentoNonRiconosciutoError) {
    return VulnerableDocumentoNonRiconosciutoError;
  }
  if (error instanceof errors.VulnerableDocumentoNonCompletoError) {
    return VulnerableDocumentoNonCompletoError;
  }
  if (error instanceof errors.VulnerableDocumentoDatiAnagraficiError) {
    return VulnerableDocumentoDatiAnagraficiError;
  }
  if (error instanceof errors.VulnerableDocumentoTecnicoError) {
    return VulnerableDocumentoTecnicoError;
  }
};

//# sourceMappingURL=data:application/json;base64,